package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	rulePegText
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
	ruleAction71
	ruleAction72
	ruleAction73
	ruleAction74
	ruleAction75
	ruleAction76
	ruleAction77
	ruleAction78
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"PegText",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
	"Action71",
	"Action72",
	"Action73",
	"Action74",
	"Action75",
	"Action76",
	"Action77",
	"Action78",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [127]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(time.Minute)

		case ruleAction1:

			p.t = p.t.Add(-time.Minute)

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction5:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction6:

			p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction9:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction10:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction11:

			p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))

		case ruleAction12:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction13:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction14:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction15:

			p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))

		case ruleAction16:

			p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))

		case ruleAction17:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction18:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction19:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction20:

			p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))

		case ruleAction21:

			p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))

		case ruleAction22:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction23:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction24:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction25:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction26:

			p.t = prevMonth(p.t, p.month)

		case ruleAction27:

			p.t = nextMonth(p.t, p.month)

		case ruleAction28:

			if p.direction < 0 {
				p.t = prevMonth(p.t, p.month)
			} else {
				p.t = nextMonth(p.t, p.month)
			}

		case ruleAction29:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction30:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction31:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction32:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction33:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction34:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction35:

			p.t = truncateDay(p.t)

		case ruleAction36:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction37:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction38:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction39:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction40:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction41:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction42:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction43:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction44:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction45:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction46:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction47:
			p.number = 1
		case ruleAction48:
			p.number = 2
		case ruleAction49:
			p.number = 3
		case ruleAction50:
			p.number = 4
		case ruleAction51:
			p.number = 5
		case ruleAction52:
			p.number = 6
		case ruleAction53:
			p.number = 7
		case ruleAction54:
			p.number = 8
		case ruleAction55:
			p.number = 9
		case ruleAction56:
			p.number = 10
		case ruleAction57:
			p.weekday = time.Sunday
		case ruleAction58:
			p.weekday = time.Monday
		case ruleAction59:
			p.weekday = time.Tuesday
		case ruleAction60:
			p.weekday = time.Wednesday
		case ruleAction61:
			p.weekday = time.Thursday
		case ruleAction62:
			p.weekday = time.Friday
		case ruleAction63:
			p.weekday = time.Saturday
		case ruleAction64:
			p.month = time.January
		case ruleAction65:
			p.month = time.February
		case ruleAction66:
			p.month = time.March
		case ruleAction67:
			p.month = time.April
		case ruleAction68:
			p.month = time.May
		case ruleAction69:
			p.month = time.June
		case ruleAction70:
			p.month = time.July
		case ruleAction71:
			p.month = time.August
		case ruleAction72:
			p.month = time.September
		case ruleAction73:
			p.month = time.October
		case ruleAction74:
			p.month = time.November
		case ruleAction75:
			p.month = time.December
		case ruleAction76:
			p.number = 1
		case ruleAction77:
			p.number = 1
		case ruleAction78:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / (NEXT MINUTE Action0) / (LAST MINUTE Action1) / RelativeMinutes / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleNEXT]() {
						goto l8
					}
					if !_rules[ruleMINUTE]() {
						goto l8
					}
					if !_rules[ruleAction0]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleLAST]() {
						goto l9
					}
					if !_rules[ruleMINUTE]() {
						goto l9
					}
					if !_rules[ruleAction1]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l11
					}
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l12
					}
					goto l6
				l12:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l13
					}
					goto l6
				l13:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l14
					}
					goto l6
				l14:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l15
					}
					goto l6
				l15:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l16
					}
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l17
					}
					goto l6
				l17:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l18
					}
					{
						position19, tokenIndex19 := position, tokenIndex
						{
							position21, tokenIndex21 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l21
							}
							goto l22
						l21:
							position, tokenIndex = position21, tokenIndex21
						}
					l22:
						if !_rules[ruleTime]() {
							goto l19
						}
						goto l20
					l19:
						position, tokenIndex = position19, tokenIndex19
					}
				l20:
					goto l6
				l18:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position23, tokenIndex23 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l23
						}
						goto l24
					l23:
						position, tokenIndex = position23, tokenIndex23
					}
				l24:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action2) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action3) / (Last Number? MINUTES Action4) / (Next Number? MINUTES Action5) / (Number MINUTES Action6))> */
		func() bool {
			position25, tokenIndex25 := position, tokenIndex
			{
				position26 := position
				{
					position27, tokenIndex27 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l28
					}
					if !_rules[ruleMINUTES]() {
						goto l28
					}
					if !_rules[ruleAGO]() {
						goto l28
					}
					if !_rules[ruleAction2]() {
						goto l28
					}
					goto l27
				l28:
					position, tokenIndex = position27, tokenIndex27
					{
						position30, tokenIndex30 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l31
						}
						if !_rules[ruleMINUTES]() {
							goto l31
						}
						if !_rules[ruleFROM_NOW]() {
							goto l31
						}
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if !_rules[ruleIn]() {
							goto l29
						}
						{
							position32, tokenIndex32 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l32
							}
							goto l33
						l32:
							position, tokenIndex = position32, tokenIndex32
						}
					l33:
						if !_rules[ruleMINUTES]() {
							goto l29
						}
						{
							position34, tokenIndex34 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l34
							}
							goto l35
						l34:
							position, tokenIndex = position34, tokenIndex34
						}
					l35:
					}
				l30:
					if !_rules[ruleAction3]() {
						goto l29
					}
					goto l27
				l29:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleLast]() {
						goto l36
					}
					{
						position37, tokenIndex37 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l37
						}
						goto l38
					l37:
						position, tokenIndex = position37, tokenIndex37
					}
				l38:
					if !_rules[ruleMINUTES]() {
						goto l36
					}
					if !_rules[ruleAction4]() {
						goto l36
					}
					goto l27
				l36:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNext]() {
						goto l39
					}
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l40
						}
						goto l41
					l40:
						position, tokenIndex = position40, tokenIndex40
					}
				l41:
					if !_rules[ruleMINUTES]() {
						goto l39
					}
					if !_rules[ruleAction5]() {
						goto l39
					}
					goto l27
				l39:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNumber]() {
						goto l25
					}
					if !_rules[ruleMINUTES]() {
						goto l25
					}
					if !_rules[ruleAction6]() {
						goto l25
					}
				}
			l27:
				add(ruleRelativeMinutes, position26)
			}
			return true
		l25:
			position, tokenIndex = position25, tokenIndex25
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action7) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action8) / (Last Number? HOURS Action9) / (Next Number? HOURS Action10) / (Number HOURS Action11))> */
		func() bool {
			position42, tokenIndex42 := position, tokenIndex
			{
				position43 := position
				{
					position44, tokenIndex44 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l45
					}
					if !_rules[ruleHOURS]() {
						goto l45
					}
					if !_rules[ruleAGO]() {
						goto l45
					}
					if !_rules[ruleAction7]() {
						goto l45
					}
					goto l44
				l45:
					position, tokenIndex = position44, tokenIndex44
					{
						position47, tokenIndex47 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l48
						}
						if !_rules[ruleHOURS]() {
							goto l48
						}
						if !_rules[ruleFROM_NOW]() {
							goto l48
						}
						goto l47
					l48:
						position, tokenIndex = position47, tokenIndex47
						if !_rules[ruleIn]() {
							goto l46
						}
						{
							position49, tokenIndex49 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l49
							}
							goto l50
						l49:
							position, tokenIndex = position49, tokenIndex49
						}
					l50:
						if !_rules[ruleHOURS]() {
							goto l46
						}
						{
							position51, tokenIndex51 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l51
							}
							goto l52
						l51:
							position, tokenIndex = position51, tokenIndex51
						}
					l52:
					}
				l47:
					if !_rules[ruleAction8]() {
						goto l46
					}
					goto l44
				l46:
					position, tokenIndex = position44, tokenIndex44
					if !_rules[ruleLast]() {
						goto l53
					}
					{
						position54, tokenIndex54 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l54
						}
						goto l55
					l54:
						position, tokenIndex = position54, tokenIndex54
					}
				l55:
					if !_rules[ruleHOURS]() {
						goto l53
					}
					if !_rules[ruleAction9]() {
						goto l53
					}
					goto l44
				l53:
					position, tokenIndex = position44, tokenIndex44
					if !_rules[ruleNext]() {
						goto l56
					}
					{
						position57, tokenIndex57 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l57
						}
						goto l58
					l57:
						position, tokenIndex = position57, tokenIndex57
					}
				l58:
					if !_rules[ruleHOURS]() {
						goto l56
					}
					if !_rules[ruleAction10]() {
						goto l56
					}
					goto l44
				l56:
					position, tokenIndex = position44, tokenIndex44
					if !_rules[ruleNumber]() {
						goto l42
					}
					if !_rules[ruleHOURS]() {
						goto l42
					}
					if !_rules[ruleAction11]() {
						goto l42
					}
				}
			l44:
				add(ruleRelativeHours, position43)
			}
			return true
		l42:
			position, tokenIndex = position42, tokenIndex42
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action12) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action13) / (Last Number? DAYS Action14) / (Next Number? DAYS Action15) / (Number DAYS Action16))> */
		func() bool {
			position59, tokenIndex59 := position, tokenIndex
			{
				position60 := position
				{
					position61, tokenIndex61 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l62
					}
					if !_rules[ruleDAYS]() {
						goto l62
					}
					if !_rules[ruleAGO]() {
						goto l62
					}
					if !_rules[ruleAction12]() {
						goto l62
					}
					goto l61
				l62:
					position, tokenIndex = position61, tokenIndex61
					{
						position64, tokenIndex64 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l65
						}
						if !_rules[ruleDAYS]() {
							goto l65
						}
						if !_rules[ruleFROM_NOW]() {
							goto l65
						}
						goto l64
					l65:
						position, tokenIndex = position64, tokenIndex64
						if !_rules[ruleIn]() {
							goto l63
						}
						{
							position66, tokenIndex66 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l66
							}
							goto l67
						l66:
							position, tokenIndex = position66, tokenIndex66
						}
					l67:
						if !_rules[ruleDAYS]() {
							goto l63
						}
						{
							position68, tokenIndex68 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l68
							}
							goto l69
						l68:
							position, tokenIndex = position68, tokenIndex68
						}
					l69:
					}
				l64:
					if !_rules[ruleAction13]() {
						goto l63
					}
					goto l61
				l63:
					position, tokenIndex = position61, tokenIndex61
					if !_rules[ruleLast]() {
						goto l70
					}
					{
						position71, tokenIndex71 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l71
						}
						goto l72
					l71:
						position, tokenIndex = position71, tokenIndex71
					}
				l72:
					if !_rules[ruleDAYS]() {
						goto l70
					}
					if !_rules[ruleAction14]() {
						goto l70
					}
					goto l61
				l70:
					position, tokenIndex = position61, tokenIndex61
					if !_rules[ruleNext]() {
						goto l73
					}
					{
						position74, tokenIndex74 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l74
						}
						goto l75
					l74:
						position, tokenIndex = position74, tokenIndex74
					}
				l75:
					if !_rules[ruleDAYS]() {
						goto l73
					}
					if !_rules[ruleAction15]() {
						goto l73
					}
					goto l61
				l73:
					position, tokenIndex = position61, tokenIndex61
					if !_rules[ruleNumber]() {
						goto l59
					}
					if !_rules[ruleDAYS]() {
						goto l59
					}
					if !_rules[ruleAction16]() {
						goto l59
					}
				}
			l61:
				add(ruleRelativeDays, position60)
			}
			return true
		l59:
			position, tokenIndex = position59, tokenIndex59
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action17) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action18) / (Last Number? WEEKS Action19) / (Next Number? WEEKS Action20) / (Number WEEKS Action21))> */
		func() bool {
			position76, tokenIndex76 := position, tokenIndex
			{
				position77 := position
				{
					position78, tokenIndex78 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l79
					}
					if !_rules[ruleWEEKS]() {
						goto l79
					}
					if !_rules[ruleAGO]() {
						goto l79
					}
					if !_rules[ruleAction17]() {
						goto l79
					}
					goto l78
				l79:
					position, tokenIndex = position78, tokenIndex78
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l82
						}
						if !_rules[ruleWEEKS]() {
							goto l82
						}
						if !_rules[ruleFROM_NOW]() {
							goto l82
						}
						goto l81
					l82:
						position, tokenIndex = position81, tokenIndex81
						if !_rules[ruleIn]() {
							goto l80
						}
						{
							position83, tokenIndex83 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l83
							}
							goto l84
						l83:
							position, tokenIndex = position83, tokenIndex83
						}
					l84:
						if !_rules[ruleWEEKS]() {
							goto l80
						}
						{
							position85, tokenIndex85 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l85
							}
							goto l86
						l85:
							position, tokenIndex = position85, tokenIndex85
						}
					l86:
					}
				l81:
					if !_rules[ruleAction18]() {
						goto l80
					}
					goto l78
				l80:
					position, tokenIndex = position78, tokenIndex78
					if !_rules[ruleLast]() {
						goto l87
					}
					{
						position88, tokenIndex88 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l88
						}
						goto l89
					l88:
						position, tokenIndex = position88, tokenIndex88
					}
				l89:
					if !_rules[ruleWEEKS]() {
						goto l87
					}
					if !_rules[ruleAction19]() {
						goto l87
					}
					goto l78
				l87:
					position, tokenIndex = position78, tokenIndex78
					if !_rules[ruleNext]() {
						goto l90
					}
					{
						position91, tokenIndex91 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l91
						}
						goto l92
					l91:
						position, tokenIndex = position91, tokenIndex91
					}
				l92:
					if !_rules[ruleWEEKS]() {
						goto l90
					}
					if !_rules[ruleAction20]() {
						goto l90
					}
					goto l78
				l90:
					position, tokenIndex = position78, tokenIndex78
					if !_rules[ruleNumber]() {
						goto l76
					}
					if !_rules[ruleWEEKS]() {
						goto l76
					}
					if !_rules[ruleAction21]() {
						goto l76
					}
				}
			l78:
				add(ruleRelativeWeeks, position77)
			}
			return true
		l76:
			position, tokenIndex = position76, tokenIndex76
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action22) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action23) / (Last Number? MONTHS Action24) / (Next Number? MONTHS Action25) / (LAST Month Action26) / (NEXT Month Action27) / (Month Action28))> */
		func() bool {
			position93, tokenIndex93 := position, tokenIndex
			{
				position94 := position
				{
					position95, tokenIndex95 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l96
					}
					if !_rules[ruleMONTHS]() {
						goto l96
					}
					if !_rules[ruleAGO]() {
						goto l96
					}
					if !_rules[ruleAction22]() {
						goto l96
					}
					goto l95
				l96:
					position, tokenIndex = position95, tokenIndex95
					{
						position98, tokenIndex98 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l99
						}
						if !_rules[ruleMONTHS]() {
							goto l99
						}
						if !_rules[ruleFROM_NOW]() {
							goto l99
						}
						goto l98
					l99:
						position, tokenIndex = position98, tokenIndex98
						if !_rules[ruleIn]() {
							goto l97
						}
						{
							position100, tokenIndex100 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l100
							}
							goto l101
						l100:
							position, tokenIndex = position100, tokenIndex100
						}
					l101:
						if !_rules[ruleMONTHS]() {
							goto l97
						}
						{
							position102, tokenIndex102 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l102
							}
							goto l103
						l102:
							position, tokenIndex = position102, tokenIndex102
						}
					l103:
					}
				l98:
					if !_rules[ruleAction23]() {
						goto l97
					}
					goto l95
				l97:
					position, tokenIndex = position95, tokenIndex95
					if !_rules[ruleLast]() {
						goto l104
					}
					{
						position105, tokenIndex105 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l105
						}
						goto l106
					l105:
						position, tokenIndex = position105, tokenIndex105
					}
				l106:
					if !_rules[ruleMONTHS]() {
						goto l104
					}
					if !_rules[ruleAction24]() {
						goto l104
					}
					goto l95
				l104:
					position, tokenIndex = position95, tokenIndex95
					if !_rules[ruleNext]() {
						goto l107
					}
					{
						position108, tokenIndex108 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l108
						}
						goto l109
					l108:
						position, tokenIndex = position108, tokenIndex108
					}
				l109:
					if !_rules[ruleMONTHS]() {
						goto l107
					}
					if !_rules[ruleAction25]() {
						goto l107
					}
					goto l95
				l107:
					position, tokenIndex = position95, tokenIndex95
					if !_rules[ruleLAST]() {
						goto l110
					}
					if !_rules[ruleMonth]() {
						goto l110
					}
					if !_rules[ruleAction26]() {
						goto l110
					}
					goto l95
				l110:
					position, tokenIndex = position95, tokenIndex95
					if !_rules[ruleNEXT]() {
						goto l111
					}
					if !_rules[ruleMonth]() {
						goto l111
					}
					if !_rules[ruleAction27]() {
						goto l111
					}
					goto l95
				l111:
					position, tokenIndex = position95, tokenIndex95
					if !_rules[ruleMonth]() {
						goto l93
					}
					if !_rules[ruleAction28]() {
						goto l93
					}
				}
			l95:
				add(ruleRelativeMonth, position94)
			}
			return true
		l93:
			position, tokenIndex = position93, tokenIndex93
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action29) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action30) / (Last Number? YEARS Action31) / (Next Number? YEARS Action32) / (LAST YEARS Action33) / (NEXT YEARS Action34))> */
		func() bool {
			position112, tokenIndex112 := position, tokenIndex
			{
				position113 := position
				{
					position114, tokenIndex114 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l115
					}
					if !_rules[ruleYEARS]() {
						goto l115
					}
					if !_rules[ruleAGO]() {
						goto l115
					}
					if !_rules[ruleAction29]() {
						goto l115
					}
					goto l114
				l115:
					position, tokenIndex = position114, tokenIndex114
					{
						position117, tokenIndex117 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l118
						}
						if !_rules[ruleYEARS]() {
							goto l118
						}
						if !_rules[ruleFROM_NOW]() {
							goto l118
						}
						goto l117
					l118:
						position, tokenIndex = position117, tokenIndex117
						if !_rules[ruleIn]() {
							goto l116
						}
						{
							position119, tokenIndex119 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l119
							}
							goto l120
						l119:
							position, tokenIndex = position119, tokenIndex119
						}
					l120:
						if !_rules[ruleYEARS]() {
							goto l116
						}
						{
							position121, tokenIndex121 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l121
							}
							goto l122
						l121:
							position, tokenIndex = position121, tokenIndex121
						}
					l122:
					}
				l117:
					if !_rules[ruleAction30]() {
						goto l116
					}
					goto l114
				l116:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleLast]() {
						goto l123
					}
					{
						position124, tokenIndex124 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l124
						}
						goto l125
					l124:
						position, tokenIndex = position124, tokenIndex124
					}
				l125:
					if !_rules[ruleYEARS]() {
						goto l123
					}
					if !_rules[ruleAction31]() {
						goto l123
					}
					goto l114
				l123:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleNext]() {
						goto l126
					}
					{
						position127, tokenIndex127 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l127
						}
						goto l128
					l127:
						position, tokenIndex = position127, tokenIndex127
					}
				l128:
					if !_rules[ruleYEARS]() {
						goto l126
					}
					if !_rules[ruleAction32]() {
						goto l126
					}
					goto l114
				l126:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleLAST]() {
						goto l129
					}
					if !_rules[ruleYEARS]() {
						goto l129
					}
					if !_rules[ruleAction33]() {
						goto l129
					}
					goto l114
				l129:
					position, tokenIndex = position114, tokenIndex114
					if !_rules[ruleNEXT]() {
						goto l112
					}
					if !_rules[ruleYEARS]() {
						goto l112
					}
					if !_rules[ruleAction34]() {
						goto l112
					}
				}
			l114:
				add(ruleRelativeYear, position113)
			}
			return true
		l112:
			position, tokenIndex = position112, tokenIndex112
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action35) / (YESTERDAY Action36) / (TOMORROW Action37) / (LAST Weekday Action38) / (NEXT Weekday Action39))> */
		func() bool {
			position130, tokenIndex130 := position, tokenIndex
			{
				position131 := position
				{
					position132, tokenIndex132 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l133
					}
					if !_rules[ruleAction35]() {
						goto l133
					}
					goto l132
				l133:
					position, tokenIndex = position132, tokenIndex132
					if !_rules[ruleYESTERDAY]() {
						goto l134
					}
					if !_rules[ruleAction36]() {
						goto l134
					}
					goto l132
				l134:
					position, tokenIndex = position132, tokenIndex132
					if !_rules[ruleTOMORROW]() {
						goto l135
					}
					if !_rules[ruleAction37]() {
						goto l135
					}
					goto l132
				l135:
					position, tokenIndex = position132, tokenIndex132
					if !_rules[ruleLAST]() {
						goto l136
					}
					if !_rules[ruleWeekday]() {
						goto l136
					}
					if !_rules[ruleAction38]() {
						goto l136
					}
					goto l132
				l136:
					position, tokenIndex = position132, tokenIndex132
					if !_rules[ruleNEXT]() {
						goto l130
					}
					if !_rules[ruleWeekday]() {
						goto l130
					}
					if !_rules[ruleAction39]() {
						goto l130
					}
				}
			l132:
				add(ruleRelativeWeekdays, position131)
			}
			return true
		l130:
			position, tokenIndex = position130, tokenIndex130
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action40)> */
		func() bool {
			position137, tokenIndex137 := position, tokenIndex
			{
				position138 := position
				{
					position139, tokenIndex139 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l140
					}
					if !_rules[ruleOrdinal]() {
						goto l140
					}
					goto l139
				l140:
					position, tokenIndex = position139, tokenIndex139
					if !_rules[ruleLast]() {
						goto l137
					}
					{
						position141, tokenIndex141 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l141
						}
						goto l142
					l141:
						position, tokenIndex = position141, tokenIndex141
					}
				l142:
					if !_rules[ruleNumber]() {
						goto l137
					}
				}
			l139:
				if !_rules[ruleAction40]() {
					goto l137
				}
				add(ruleDate, position138)
			}
			return true
		l137:
			position, tokenIndex = position137, tokenIndex137
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position143, tokenIndex143 := position, tokenIndex
			{
				position144 := position
				{
					position145, tokenIndex145 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l146
					}
					goto l145
				l146:
					position, tokenIndex = position145, tokenIndex145
					if !_rules[ruleClock24Hour]() {
						goto l143
					}
				}
			l145:
				add(ruleTime, position144)
			}
			return true
		l143:
			position, tokenIndex = position143, tokenIndex143
			return false
		},
		/* 11 Clock12Hour <- <((Number Action41 (Minutes Seconds?)? AM) / (Number Action42 (Minutes Seconds?)? PM))> */
		func() bool {
			position147, tokenIndex147 := position, tokenIndex
			{
				position148 := position
				{
					position149, tokenIndex149 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l150
					}
					if !_rules[ruleAction41]() {
						goto l150
					}
					{
						position151, tokenIndex151 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l151
						}
						{
							position153, tokenIndex153 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l153
							}
							goto l154
						l153:
							position, tokenIndex = position153, tokenIndex153
						}
					l154:
						goto l152
					l151:
						position, tokenIndex = position151, tokenIndex151
					}
				l152:
					if !_rules[ruleAM]() {
						goto l150
					}
					goto l149
				l150:
					position, tokenIndex = position149, tokenIndex149
					if !_rules[ruleNumber]() {
						goto l147
					}
					if !_rules[ruleAction42]() {
						goto l147
					}
					{
						position155, tokenIndex155 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l155
						}
						{
							position157, tokenIndex157 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l157
							}
							goto l158
						l157:
							position, tokenIndex = position157, tokenIndex157
						}
					l158:
						goto l156
					l155:
						position, tokenIndex = position155, tokenIndex155
					}
				l156:
					if !_rules[rulePM]() {
						goto l147
					}
				}
			l149:
				add(ruleClock12Hour, position148)
			}
			return true
		l147:
			position, tokenIndex = position147, tokenIndex147
			return false
		},
		/* 12 Clock24Hour <- <(Number Action43 (Minutes Seconds?)?)> */
		func() bool {
			position159, tokenIndex159 := position, tokenIndex
			{
				position160 := position
				if !_rules[ruleNumber]() {
					goto l159
				}
				if !_rules[ruleAction43]() {
					goto l159
				}
				{
					position161, tokenIndex161 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l161
					}
					{
						position163, tokenIndex163 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l163
						}
						goto l164
					l163:
						position, tokenIndex = position163, tokenIndex163
					}
				l164:
					goto l162
				l161:
					position, tokenIndex = position161, tokenIndex161
				}
			l162:
				add(ruleClock24Hour, position160)
			}
			return true
		l159:
			position, tokenIndex = position159, tokenIndex159
			return false
		},
		/* 13 Minutes <- <(':' Number Action44)> */
		func() bool {
			position165, tokenIndex165 := position, tokenIndex
			{
				position166 := position
				if buffer[position] != rune(':') {
					goto l165
				}
				position++
				if !_rules[ruleNumber]() {
					goto l165
				}
				if !_rules[ruleAction44]() {
					goto l165
				}
				add(ruleMinutes, position166)
			}
			return true
		l165:
			position, tokenIndex = position165, tokenIndex165
			return false
		},
		/* 14 Seconds <- <(':' Number Action45)> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				if buffer[position] != rune(':') {
					goto l167
				}
				position++
				if !_rules[ruleNumber]() {
					goto l167
				}
				if !_rules[ruleAction45]() {
					goto l167
				}
				add(ruleSeconds, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action46) / ('o' 'n' 'e' _ Action47) / ('t' 'w' 'o' _ Action48) / ('t' 'h' 'r' 'e' 'e' _ Action49) / ('f' 'o' 'u' 'r' _ Action50) / ('f' 'i' 'v' 'e' _ Action51) / ('s' 'i' 'x' _ Action52) / ('s' 'e' 'v' 'e' 'n' _ Action53) / ('e' 'i' 'g' 'h' 't' _ Action54) / ('n' 'i' 'n' 'e' _ Action55) / ('t' 'e' 'n' _ Action56))> */
		func() bool {
			position169, tokenIndex169 := position, tokenIndex
			{
				position170 := position
				{
					position171, tokenIndex171 := position, tokenIndex
					{
						position173 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l172
						}
						position++
					l174:
						{
							position175, tokenIndex175 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l175
							}
							position++
							goto l174
						l175:
							position, tokenIndex = position175, tokenIndex175
						}
						add(rulePegText, position173)
					}
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction46]() {
						goto l172
					}
					goto l171
				l172:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('o') {
						goto l176
					}
					position++
					if buffer[position] != rune('n') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if !_rules[rule_]() {
						goto l176
					}
					if !_rules[ruleAction47]() {
						goto l176
					}
					goto l171
				l176:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('t') {
						goto l177
					}
					position++
					if buffer[position] != rune('w') {
						goto l177
					}
					position++
					if buffer[position] != rune('o') {
						goto l177
					}
					position++
					if !_rules[rule_]() {
						goto l177
					}
					if !_rules[ruleAction48]() {
						goto l177
					}
					goto l171
				l177:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('t') {
						goto l178
					}
					position++
					if buffer[position] != rune('h') {
						goto l178
					}
					position++
					if buffer[position] != rune('r') {
						goto l178
					}
					position++
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					if !_rules[rule_]() {
						goto l178
					}
					if !_rules[ruleAction49]() {
						goto l178
					}
					goto l171
				l178:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('f') {
						goto l179
					}
					position++
					if buffer[position] != rune('o') {
						goto l179
					}
					position++
					if buffer[position] != rune('u') {
						goto l179
					}
					position++
					if buffer[position] != rune('r') {
						goto l179
					}
					position++
					if !_rules[rule_]() {
						goto l179
					}
					if !_rules[ruleAction50]() {
						goto l179
					}
					goto l171
				l179:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('f') {
						goto l180
					}
					position++
					if buffer[position] != rune('i') {
						goto l180
					}
					position++
					if buffer[position] != rune('v') {
						goto l180
					}
					position++
					if buffer[position] != rune('e') {
						goto l180
					}
					position++
					if !_rules[rule_]() {
						goto l180
					}
					if !_rules[ruleAction51]() {
						goto l180
					}
					goto l171
				l180:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l181
					}
					position++
					if buffer[position] != rune('i') {
						goto l181
					}
					position++
					if buffer[position] != rune('x') {
						goto l181
					}
					position++
					if !_rules[rule_]() {
						goto l181
					}
					if !_rules[ruleAction52]() {
						goto l181
					}
					goto l171
				l181:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('s') {
						goto l182
					}
					position++
					if buffer[position] != rune('e') {
						goto l182
					}
					position++
					if buffer[position] != rune('v') {
						goto l182
					}
					position++
					if buffer[position] != rune('e') {
						goto l182
					}
					position++
					if buffer[position] != rune('n') {
						goto l182
					}
					position++
					if !_rules[rule_]() {
						goto l182
					}
					if !_rules[ruleAction53]() {
						goto l182
					}
					goto l171
				l182:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('e') {
						goto l183
					}
					position++
					if buffer[position] != rune('i') {
						goto l183
					}
					position++
					if buffer[position] != rune('g') {
						goto l183
					}
					position++
					if buffer[position] != rune('h') {
						goto l183
					}
					position++
					if buffer[position] != rune('t') {
						goto l183
					}
					position++
					if !_rules[rule_]() {
						goto l183
					}
					if !_rules[ruleAction54]() {
						goto l183
					}
					goto l171
				l183:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('i') {
						goto l184
					}
					position++
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('e') {
						goto l184
					}
					position++
					if !_rules[rule_]() {
						goto l184
					}
					if !_rules[ruleAction55]() {
						goto l184
					}
					goto l171
				l184:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('t') {
						goto l169
					}
					position++
					if buffer[position] != rune('e') {
						goto l169
					}
					position++
					if buffer[position] != rune('n') {
						goto l169
					}
					position++
					if !_rules[rule_]() {
						goto l169
					}
					if !_rules[ruleAction56]() {
						goto l169
					}
				}
			l171:
				add(ruleNumber, position170)
			}
			return true
		l169:
			position, tokenIndex = position169, tokenIndex169
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action57) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action58) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action59) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action60) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action61) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action62) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action63))> */
		func() bool {
			position185, tokenIndex185 := position, tokenIndex
			{
				position186 := position
				{
					position187, tokenIndex187 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l188
					}
					position++
					if buffer[position] != rune('u') {
						goto l188
					}
					position++
					if buffer[position] != rune('n') {
						goto l188
					}
					position++
					if buffer[position] != rune('d') {
						goto l188
					}
					position++
					if buffer[position] != rune('a') {
						goto l188
					}
					position++
					if buffer[position] != rune('y') {
						goto l188
					}
					position++
					if !_rules[rule_]() {
						goto l188
					}
					if !_rules[ruleAction57]() {
						goto l188
					}
					goto l187
				l188:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('m') {
						goto l189
					}
					position++
					if buffer[position] != rune('o') {
						goto l189
					}
					position++
					if buffer[position] != rune('n') {
						goto l189
					}
					position++
					if buffer[position] != rune('d') {
						goto l189
					}
					position++
					if buffer[position] != rune('a') {
						goto l189
					}
					position++
					if buffer[position] != rune('y') {
						goto l189
					}
					position++
					if !_rules[rule_]() {
						goto l189
					}
					if !_rules[ruleAction58]() {
						goto l189
					}
					goto l187
				l189:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('t') {
						goto l190
					}
					position++
					if buffer[position] != rune('u') {
						goto l190
					}
					position++
					if buffer[position] != rune('e') {
						goto l190
					}
					position++
					if buffer[position] != rune('s') {
						goto l190
					}
					position++
					if buffer[position] != rune('d') {
						goto l190
					}
					position++
					if buffer[position] != rune('a') {
						goto l190
					}
					position++
					if buffer[position] != rune('y') {
						goto l190
					}
					position++
					if !_rules[rule_]() {
						goto l190
					}
					if !_rules[ruleAction59]() {
						goto l190
					}
					goto l187
				l190:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('w') {
						goto l191
					}
					position++
					if buffer[position] != rune('e') {
						goto l191
					}
					position++
					if buffer[position] != rune('d') {
						goto l191
					}
					position++
					if buffer[position] != rune('n') {
						goto l191
					}
					position++
					if buffer[position] != rune('e') {
						goto l191
					}
					position++
					if buffer[position] != rune('s') {
						goto l191
					}
					position++
					if buffer[position] != rune('d') {
						goto l191
					}
					position++
					if buffer[position] != rune('a') {
						goto l191
					}
					position++
					if buffer[position] != rune('y') {
						goto l191
					}
					position++
					if !_rules[rule_]() {
						goto l191
					}
					if !_rules[ruleAction60]() {
						goto l191
					}
					goto l187
				l191:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('t') {
						goto l192
					}
					position++
					if buffer[position] != rune('h') {
						goto l192
					}
					position++
					if buffer[position] != rune('u') {
						goto l192
					}
					position++
					if buffer[position] != rune('r') {
						goto l192
					}
					position++
					if buffer[position] != rune('s') {
						goto l192
					}
					position++
					if buffer[position] != rune('d') {
						goto l192
					}
					position++
					if buffer[position] != rune('a') {
						goto l192
					}
					position++
					if buffer[position] != rune('y') {
						goto l192
					}
					position++
					if !_rules[rule_]() {
						goto l192
					}
					if !_rules[ruleAction61]() {
						goto l192
					}
					goto l187
				l192:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('f') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('i') {
						goto l193
					}
					position++
					if buffer[position] != rune('d') {
						goto l193
					}
					position++
					if buffer[position] != rune('a') {
						goto l193
					}
					position++
					if buffer[position] != rune('y') {
						goto l193
					}
					position++
					if !_rules[rule_]() {
						goto l193
					}
					if !_rules[ruleAction62]() {
						goto l193
					}
					goto l187
				l193:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('s') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('u') {
						goto l185
					}
					position++
					if buffer[position] != rune('r') {
						goto l185
					}
					position++
					if buffer[position] != rune('d') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('y') {
						goto l185
					}
					position++
					if !_rules[rule_]() {
						goto l185
					}
					if !_rules[ruleAction63]() {
						goto l185
					}
				}
			l187:
				add(ruleWeekday, position186)
			}
			return true
		l185:
			position, tokenIndex = position185, tokenIndex185
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action64) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action65) / ('m' 'a' 'r' 'c' 'h' _ Action66) / ('a' 'p' 'r' 'i' 'l' _ Action67) / ('m' 'a' 'y' _ Action68) / ('j' 'u' 'n' 'e' _ Action69) / ('j' 'u' 'l' 'y' _ Action70) / ('a' 'u' 'g' 'u' 's' 't' _ Action71) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action72) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action73) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action74) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action75))> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				{
					position196, tokenIndex196 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l197
					}
					position++
					if buffer[position] != rune('a') {
						goto l197
					}
					position++
					if buffer[position] != rune('n') {
						goto l197
					}
					position++
					if buffer[position] != rune('u') {
						goto l197
					}
					position++
					if buffer[position] != rune('a') {
						goto l197
					}
					position++
					if buffer[position] != rune('r') {
						goto l197
					}
					position++
					if buffer[position] != rune('y') {
						goto l197
					}
					position++
					if !_rules[rule_]() {
						goto l197
					}
					if !_rules[ruleAction64]() {
						goto l197
					}
					goto l196
				l197:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('f') {
						goto l198
					}
					position++
					if buffer[position] != rune('e') {
						goto l198
					}
					position++
					if buffer[position] != rune('b') {
						goto l198
					}
					position++
					if buffer[position] != rune('r') {
						goto l198
					}
					position++
					if buffer[position] != rune('u') {
						goto l198
					}
					position++
					if buffer[position] != rune('a') {
						goto l198
					}
					position++
					if buffer[position] != rune('r') {
						goto l198
					}
					position++
					if buffer[position] != rune('y') {
						goto l198
					}
					position++
					if !_rules[rule_]() {
						goto l198
					}
					if !_rules[ruleAction65]() {
						goto l198
					}
					goto l196
				l198:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('m') {
						goto l199
					}
					position++
					if buffer[position] != rune('a') {
						goto l199
					}
					position++
					if buffer[position] != rune('r') {
						goto l199
					}
					position++
					if buffer[position] != rune('c') {
						goto l199
					}
					position++
					if buffer[position] != rune('h') {
						goto l199
					}
					position++
					if !_rules[rule_]() {
						goto l199
					}
					if !_rules[ruleAction66]() {
						goto l199
					}
					goto l196
				l199:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('a') {
						goto l200
					}
					position++
					if buffer[position] != rune('p') {
						goto l200
					}
					position++
					if buffer[position] != rune('r') {
						goto l200
					}
					position++
					if buffer[position] != rune('i') {
						goto l200
					}
					position++
					if buffer[position] != rune('l') {
						goto l200
					}
					position++
					if !_rules[rule_]() {
						goto l200
					}
					if !_rules[ruleAction67]() {
						goto l200
					}
					goto l196
				l200:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('m') {
						goto l201
					}
					position++
					if buffer[position] != rune('a') {
						goto l201
					}
					position++
					if buffer[position] != rune('y') {
						goto l201
					}
					position++
					if !_rules[rule_]() {
						goto l201
					}
					if !_rules[ruleAction68]() {
						goto l201
					}
					goto l196
				l201:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('j') {
						goto l202
					}
					position++
					if buffer[position] != rune('u') {
						goto l202
					}
					position++
					if buffer[position] != rune('n') {
						goto l202
					}
					position++
					if buffer[position] != rune('e') {
						goto l202
					}
					position++
					if !_rules[rule_]() {
						goto l202
					}
					if !_rules[ruleAction69]() {
						goto l202
					}
					goto l196
				l202:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('j') {
						goto l203
					}
					position++
					if buffer[position] != rune('u') {
						goto l203
					}
					position++
					if buffer[position] != rune('l') {
						goto l203
					}
					position++
					if buffer[position] != rune('y') {
						goto l203
					}
					position++
					if !_rules[rule_]() {
						goto l203
					}
					if !_rules[ruleAction70]() {
						goto l203
					}
					goto l196
				l203:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('a') {
						goto l204
					}
					position++
					if buffer[position] != rune('u') {
						goto l204
					}
					position++
					if buffer[position] != rune('g') {
						goto l204
					}
					position++
					if buffer[position] != rune('u') {
						goto l204
					}
					position++
					if buffer[position] != rune('s') {
						goto l204
					}
					position++
					if buffer[position] != rune('t') {
						goto l204
					}
					position++
					if !_rules[rule_]() {
						goto l204
					}
					if !_rules[ruleAction71]() {
						goto l204
					}
					goto l196
				l204:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('s') {
						goto l205
					}
					position++
					if buffer[position] != rune('e') {
						goto l205
					}
					position++
					if buffer[position] != rune('p') {
						goto l205
					}
					position++
					if buffer[position] != rune('t') {
						goto l205
					}
					position++
					if buffer[position] != rune('e') {
						goto l205
					}
					position++
					if buffer[position] != rune('m') {
						goto l205
					}
					position++
					if buffer[position] != rune('b') {
						goto l205
					}
					position++
					if buffer[position] != rune('e') {
						goto l205
					}
					position++
					if buffer[position] != rune('r') {
						goto l205
					}
					position++
					if !_rules[rule_]() {
						goto l205
					}
					if !_rules[ruleAction72]() {
						goto l205
					}
					goto l196
				l205:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('o') {
						goto l206
					}
					position++
					if buffer[position] != rune('c') {
						goto l206
					}
					position++
					if buffer[position] != rune('t') {
						goto l206
					}
					position++
					if buffer[position] != rune('o') {
						goto l206
					}
					position++
					if buffer[position] != rune('b') {
						goto l206
					}
					position++
					if buffer[position] != rune('e') {
						goto l206
					}
					position++
					if buffer[position] != rune('r') {
						goto l206
					}
					position++
					if !_rules[rule_]() {
						goto l206
					}
					if !_rules[ruleAction73]() {
						goto l206
					}
					goto l196
				l206:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('n') {
						goto l207
					}
					position++
					if buffer[position] != rune('o') {
						goto l207
					}
					position++
					if buffer[position] != rune('v') {
						goto l207
					}
					position++
					if buffer[position] != rune('e') {
						goto l207
					}
					position++
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					if buffer[position] != rune('b') {
						goto l207
					}
					position++
					if buffer[position] != rune('e') {
						goto l207
					}
					position++
					if buffer[position] != rune('r') {
						goto l207
					}
					position++
					if !_rules[rule_]() {
						goto l207
					}
					if !_rules[ruleAction74]() {
						goto l207
					}
					goto l196
				l207:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('d') {
						goto l194
					}
					position++
					if buffer[position] != rune('e') {
						goto l194
					}
					position++
					if buffer[position] != rune('c') {
						goto l194
					}
					position++
					if buffer[position] != rune('e') {
						goto l194
					}
					position++
					if buffer[position] != rune('m') {
						goto l194
					}
					position++
					if buffer[position] != rune('b') {
						goto l194
					}
					position++
					if buffer[position] != rune('e') {
						goto l194
					}
					position++
					if buffer[position] != rune('r') {
						goto l194
					}
					position++
					if !_rules[rule_]() {
						goto l194
					}
					if !_rules[ruleAction75]() {
						goto l194
					}
				}
			l196:
				add(ruleMonth, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 18 In <- <(IN Action76)> */
		func() bool {
			position208, tokenIndex208 := position, tokenIndex
			{
				position209 := position
				if !_rules[ruleIN]() {
					goto l208
				}
				if !_rules[ruleAction76]() {
					goto l208
				}
				add(ruleIn, position209)
			}
			return true
		l208:
			position, tokenIndex = position208, tokenIndex208
			return false
		},
		/* 19 Last <- <(LAST Action77)> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				if !_rules[ruleLAST]() {
					goto l210
				}
				if !_rules[ruleAction77]() {
					goto l210
				}
				add(ruleLast, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 20 Next <- <(NEXT Action78)> */
		func() bool {
			position212, tokenIndex212 := position, tokenIndex
			{
				position213 := position
				if !_rules[ruleNEXT]() {
					goto l212
				}
				if !_rules[ruleAction78]() {
					goto l212
				}
				add(ruleNext, position213)
			}
			return true
		l212:
			position, tokenIndex = position212, tokenIndex212
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position214, tokenIndex214 := position, tokenIndex
			{
				position215 := position
				{
					position216, tokenIndex216 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('t') {
						goto l217
					}
					position++
					goto l216
				l217:
					position, tokenIndex = position216, tokenIndex216
					if buffer[position] != rune('n') {
						goto l218
					}
					position++
					if buffer[position] != rune('d') {
						goto l218
					}
					position++
					goto l216
				l218:
					position, tokenIndex = position216, tokenIndex216
					if buffer[position] != rune('r') {
						goto l219
					}
					position++
					if buffer[position] != rune('d') {
						goto l219
					}
					position++
					goto l216
				l219:
					position, tokenIndex = position216, tokenIndex216
					if buffer[position] != rune('t') {
						goto l214
					}
					position++
					if buffer[position] != rune('h') {
						goto l214
					}
					position++
				}
			l216:
				if !_rules[rule_]() {
					goto l214
				}
				add(ruleOrdinal, position215)
			}
			return true
		l214:
			position, tokenIndex = position214, tokenIndex214
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position220, tokenIndex220 := position, tokenIndex
			{
				position221 := position
				if buffer[position] != rune('y') {
					goto l220
				}
				position++
				if buffer[position] != rune('e') {
					goto l220
				}
				position++
				if buffer[position] != rune('a') {
					goto l220
				}
				position++
				if buffer[position] != rune('r') {
					goto l220
				}
				position++
				{
					position222, tokenIndex222 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l222
					}
					position++
					goto l223
				l222:
					position, tokenIndex = position222, tokenIndex222
				}
			l223:
				if !_rules[rule_]() {
					goto l220
				}
				add(ruleYEARS, position221)
			}
			return true
		l220:
			position, tokenIndex = position220, tokenIndex220
			return false
		},
		/* 23 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('m') {
					goto l224
				}
				position++
				if buffer[position] != rune('o') {
					goto l224
				}
				position++
				if buffer[position] != rune('n') {
					goto l224
				}
				position++
				if buffer[position] != rune('t') {
					goto l224
				}
				position++
				if buffer[position] != rune('h') {
					goto l224
				}
				position++
				{
					position226, tokenIndex226 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l226
					}
					position++
					goto l227
				l226:
					position, tokenIndex = position226, tokenIndex226
				}
			l227:
				if !_rules[rule_]() {
					goto l224
				}
				add(ruleMONTHS, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 24 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('w') {
					goto l228
				}
				position++
				if buffer[position] != rune('e') {
					goto l228
				}
				position++
				if buffer[position] != rune('e') {
					goto l228
				}
				position++
				if buffer[position] != rune('k') {
					goto l228
				}
				position++
				{
					position230, tokenIndex230 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l230
					}
					position++
					goto l231
				l230:
					position, tokenIndex = position230, tokenIndex230
				}
			l231:
				if !_rules[rule_]() {
					goto l228
				}
				add(ruleWEEKS, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 25 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				if buffer[position] != rune('d') {
					goto l232
				}
				position++
				if buffer[position] != rune('a') {
					goto l232
				}
				position++
				if buffer[position] != rune('y') {
					goto l232
				}
				position++
				{
					position234, tokenIndex234 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l234
					}
					position++
					goto l235
				l234:
					position, tokenIndex = position234, tokenIndex234
				}
			l235:
				if !_rules[rule_]() {
					goto l232
				}
				add(ruleDAYS, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 26 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position236, tokenIndex236 := position, tokenIndex
			{
				position237 := position
				if buffer[position] != rune('h') {
					goto l236
				}
				position++
				if buffer[position] != rune('o') {
					goto l236
				}
				position++
				if buffer[position] != rune('u') {
					goto l236
				}
				position++
				if buffer[position] != rune('r') {
					goto l236
				}
				position++
				{
					position238, tokenIndex238 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l238
					}
					position++
					goto l239
				l238:
					position, tokenIndex = position238, tokenIndex238
				}
			l239:
				if !_rules[rule_]() {
					goto l236
				}
				add(ruleHOURS, position237)
			}
			return true
		l236:
			position, tokenIndex = position236, tokenIndex236
			return false
		},
		/* 27 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's' _)> */
		func() bool {
			position240, tokenIndex240 := position, tokenIndex
			{
				position241 := position
				if buffer[position] != rune('m') {
					goto l240
				}
				position++
				if buffer[position] != rune('i') {
					goto l240
				}
				position++
				if buffer[position] != rune('n') {
					goto l240
				}
				position++
				if buffer[position] != rune('u') {
					goto l240
				}
				position++
				if buffer[position] != rune('t') {
					goto l240
				}
				position++
				if buffer[position] != rune('e') {
					goto l240
				}
				position++
				if buffer[position] != rune('s') {
					goto l240
				}
				position++
				if !_rules[rule_]() {
					goto l240
				}
				add(ruleMINUTES, position241)
			}
			return true
		l240:
			position, tokenIndex = position240, tokenIndex240
			return false
		},
		/* 28 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				if buffer[position] != rune('m') {
					goto l242
				}
				position++
				if buffer[position] != rune('i') {
					goto l242
				}
				position++
				if buffer[position] != rune('n') {
					goto l242
				}
				position++
				if buffer[position] != rune('u') {
					goto l242
				}
				position++
				if buffer[position] != rune('t') {
					goto l242
				}
				position++
				if buffer[position] != rune('e') {
					goto l242
				}
				position++
				if !_rules[rule_]() {
					goto l242
				}
				add(ruleMINUTE, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 29 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position244, tokenIndex244 := position, tokenIndex
			{
				position245 := position
				if buffer[position] != rune('y') {
					goto l244
				}
				position++
				if buffer[position] != rune('e') {
					goto l244
				}
				position++
				if buffer[position] != rune('s') {
					goto l244
				}
				position++
				if buffer[position] != rune('t') {
					goto l244
				}
				position++
				if buffer[position] != rune('e') {
					goto l244
				}
				position++
				if buffer[position] != rune('r') {
					goto l244
				}
				position++
				if buffer[position] != rune('d') {
					goto l244
				}
				position++
				if buffer[position] != rune('a') {
					goto l244
				}
				position++
				if buffer[position] != rune('y') {
					goto l244
				}
				position++
				if !_rules[rule_]() {
					goto l244
				}
				add(ruleYESTERDAY, position245)
			}
			return true
		l244:
			position, tokenIndex = position244, tokenIndex244
			return false
		},
		/* 30 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position246, tokenIndex246 := position, tokenIndex
			{
				position247 := position
				if buffer[position] != rune('t') {
					goto l246
				}
				position++
				if buffer[position] != rune('o') {
					goto l246
				}
				position++
				if buffer[position] != rune('m') {
					goto l246
				}
				position++
				if buffer[position] != rune('o') {
					goto l246
				}
				position++
				if buffer[position] != rune('r') {
					goto l246
				}
				position++
				if buffer[position] != rune('r') {
					goto l246
				}
				position++
				if buffer[position] != rune('o') {
					goto l246
				}
				position++
				if buffer[position] != rune('w') {
					goto l246
				}
				position++
				if !_rules[rule_]() {
					goto l246
				}
				add(ruleTOMORROW, position247)
			}
			return true
		l246:
			position, tokenIndex = position246, tokenIndex246
			return false
		},
		/* 31 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				if buffer[position] != rune('t') {
					goto l248
				}
				position++
				if buffer[position] != rune('o') {
					goto l248
				}
				position++
				if buffer[position] != rune('d') {
					goto l248
				}
				position++
				if buffer[position] != rune('a') {
					goto l248
				}
				position++
				if buffer[position] != rune('y') {
					goto l248
				}
				position++
				if !_rules[rule_]() {
					goto l248
				}
				add(ruleTODAY, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 32 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				if buffer[position] != rune('a') {
					goto l250
				}
				position++
				if buffer[position] != rune('g') {
					goto l250
				}
				position++
				if buffer[position] != rune('o') {
					goto l250
				}
				position++
				if !_rules[rule_]() {
					goto l250
				}
				add(ruleAGO, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 33 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position252, tokenIndex252 := position, tokenIndex
			{
				position253 := position
				if buffer[position] != rune('f') {
					goto l252
				}
				position++
				if buffer[position] != rune('r') {
					goto l252
				}
				position++
				if buffer[position] != rune('o') {
					goto l252
				}
				position++
				if buffer[position] != rune('m') {
					goto l252
				}
				position++
				if buffer[position] != rune(' ') {
					goto l252
				}
				position++
				if buffer[position] != rune('n') {
					goto l252
				}
				position++
				if buffer[position] != rune('o') {
					goto l252
				}
				position++
				if buffer[position] != rune('w') {
					goto l252
				}
				position++
				if !_rules[rule_]() {
					goto l252
				}
				add(ruleFROM_NOW, position253)
			}
			return true
		l252:
			position, tokenIndex = position252, tokenIndex252
			return false
		},
		/* 34 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position254, tokenIndex254 := position, tokenIndex
			{
				position255 := position
				if buffer[position] != rune('n') {
					goto l254
				}
				position++
				if buffer[position] != rune('o') {
					goto l254
				}
				position++
				if buffer[position] != rune('w') {
					goto l254
				}
				position++
				if !_rules[rule_]() {
					goto l254
				}
				add(ruleNOW, position255)
			}
			return true
		l254:
			position, tokenIndex = position254, tokenIndex254
			return false
		},
		/* 35 AM <- <('a' 'm' _)> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				if buffer[position] != rune('a') {
					goto l256
				}
				position++
				if buffer[position] != rune('m') {
					goto l256
				}
				position++
				if !_rules[rule_]() {
					goto l256
				}
				add(ruleAM, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 36 PM <- <('p' 'm' _)> */
		func() bool {
			position258, tokenIndex258 := position, tokenIndex
			{
				position259 := position
				if buffer[position] != rune('p') {
					goto l258
				}
				position++
				if buffer[position] != rune('m') {
					goto l258
				}
				position++
				if !_rules[rule_]() {
					goto l258
				}
				add(rulePM, position259)
			}
			return true
		l258:
			position, tokenIndex = position258, tokenIndex258
			return false
		},
		/* 37 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position260, tokenIndex260 := position, tokenIndex
			{
				position261 := position
				if buffer[position] != rune('n') {
					goto l260
				}
				position++
				if buffer[position] != rune('e') {
					goto l260
				}
				position++
				if buffer[position] != rune('x') {
					goto l260
				}
				position++
				if buffer[position] != rune('t') {
					goto l260
				}
				position++
				if !_rules[rule_]() {
					goto l260
				}
				add(ruleNEXT, position261)
			}
			return true
		l260:
			position, tokenIndex = position260, tokenIndex260
			return false
		},
		/* 38 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position262, tokenIndex262 := position, tokenIndex
			{
				position263 := position
				{
					position264, tokenIndex264 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l265
					}
					position++
					if buffer[position] != rune('n') {
						goto l265
					}
					position++
					if buffer[position] != rune(' ') {
						goto l265
					}
					position++
					if buffer[position] != rune('a') {
						goto l265
					}
					position++
					if buffer[position] != rune('n') {
						goto l265
					}
					position++
					goto l264
				l265:
					position, tokenIndex = position264, tokenIndex264
					if buffer[position] != rune('i') {
						goto l266
					}
					position++
					if buffer[position] != rune('n') {
						goto l266
					}
					position++
					if buffer[position] != rune(' ') {
						goto l266
					}
					position++
					if buffer[position] != rune('a') {
						goto l266
					}
					position++
					goto l264
				l266:
					position, tokenIndex = position264, tokenIndex264
					if buffer[position] != rune('i') {
						goto l262
					}
					position++
					if buffer[position] != rune('n') {
						goto l262
					}
					position++
				}
			l264:
				if !_rules[rule_]() {
					goto l262
				}
				add(ruleIN, position263)
			}
			return true
		l262:
			position, tokenIndex = position262, tokenIndex262
			return false
		},
		/* 39 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position267, tokenIndex267 := position, tokenIndex
			{
				position268 := position
				{
					position269, tokenIndex269 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l270
					}
					position++
					if buffer[position] != rune('a') {
						goto l270
					}
					position++
					if buffer[position] != rune('s') {
						goto l270
					}
					position++
					if buffer[position] != rune('t') {
						goto l270
					}
					position++
					goto l269
				l270:
					position, tokenIndex = position269, tokenIndex269
					if buffer[position] != rune('p') {
						goto l271
					}
					position++
					if buffer[position] != rune('a') {
						goto l271
					}
					position++
					if buffer[position] != rune('s') {
						goto l271
					}
					position++
					if buffer[position] != rune('t') {
						goto l271
					}
					position++
					goto l269
				l271:
					position, tokenIndex = position269, tokenIndex269
					if buffer[position] != rune('p') {
						goto l267
					}
					position++
					if buffer[position] != rune('r') {
						goto l267
					}
					position++
					if buffer[position] != rune('e') {
						goto l267
					}
					position++
					if buffer[position] != rune('v') {
						goto l267
					}
					position++
					if buffer[position] != rune('i') {
						goto l267
					}
					position++
					if buffer[position] != rune('o') {
						goto l267
					}
					position++
					if buffer[position] != rune('u') {
						goto l267
					}
					position++
					if buffer[position] != rune('s') {
						goto l267
					}
					position++
				}
			l269:
				if !_rules[rule_]() {
					goto l267
				}
				add(ruleLAST, position268)
			}
			return true
		l267:
			position, tokenIndex = position267, tokenIndex267
			return false
		},
		/* 40 AT <- <('a' 't' _)> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				if buffer[position] != rune('a') {
					goto l272
				}
				position++
				if buffer[position] != rune('t') {
					goto l272
				}
				position++
				if !_rules[rule_]() {
					goto l272
				}
				add(ruleAT, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 41 ON <- <('o' 'n' _)> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				if buffer[position] != rune('o') {
					goto l274
				}
				position++
				if buffer[position] != rune('n') {
					goto l274
				}
				position++
				if !_rules[rule_]() {
					goto l274
				}
				add(ruleON, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 42 _ <- <Whitespace*> */
		func() bool {
			{
				position277 := position
			l278:
				{
					position279, tokenIndex279 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l279
					}
					goto l278
				l279:
					position, tokenIndex = position279, tokenIndex279
				}
				add(rule_, position277)
			}
			return true
		},
		/* 43 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position280, tokenIndex280 := position, tokenIndex
			{
				position281 := position
				{
					position282, tokenIndex282 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l283
					}
					position++
					goto l282
				l283:
					position, tokenIndex = position282, tokenIndex282
					if buffer[position] != rune('\t') {
						goto l284
					}
					position++
					goto l282
				l284:
					position, tokenIndex = position282, tokenIndex282
					if !_rules[ruleEOL]() {
						goto l280
					}
				}
			l282:
				add(ruleWhitespace, position281)
			}
			return true
		l280:
			position, tokenIndex = position280, tokenIndex280
			return false
		},
		/* 44 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position285, tokenIndex285 := position, tokenIndex
			{
				position286 := position
				{
					position287, tokenIndex287 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l288
					}
					position++
					if buffer[position] != rune('\n') {
						goto l288
					}
					position++
					goto l287
				l288:
					position, tokenIndex = position287, tokenIndex287
					if buffer[position] != rune('\n') {
						goto l289
					}
					position++
					goto l287
				l289:
					position, tokenIndex = position287, tokenIndex287
					if buffer[position] != rune('\r') {
						goto l285
					}
					position++
				}
			l287:
				add(ruleEOL, position286)
			}
			return true
		l285:
			position, tokenIndex = position285, tokenIndex285
			return false
		},
		/* 45 EOF <- <!.> */
		func() bool {
			position290, tokenIndex290 := position, tokenIndex
			{
				position291 := position
				{
					position292, tokenIndex292 := position, tokenIndex
					if !matchDot() {
						goto l292
					}
					goto l290
				l292:
					position, tokenIndex = position292, tokenIndex292
				}
				add(ruleEOF, position291)
			}
			return true
		l290:
			position, tokenIndex = position290, tokenIndex290
			return false
		},
		/* 47 Action0 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 48 Action1 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 49 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 50 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 51 Action4 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 52 Action5 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 53 Action6 <- <{
		   p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 54 Action7 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 55 Action8 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 56 Action9 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 57 Action10 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 58 Action11 <- <{
		   p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 59 Action12 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 60 Action13 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 61 Action14 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 62 Action15 <- <{
		   p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 63 Action16 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 64 Action17 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 65 Action18 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 66 Action19 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 67 Action20 <- <{
		   p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 68 Action21 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 69 Action22 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 70 Action23 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 71 Action24 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 72 Action25 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 73 Action26 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 74 Action27 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 75 Action28 <- <{
		   if p.direction < 0 {
		     p.t = prevMonth(p.t, p.month)
		   } else {
		     p.t = nextMonth(p.t, p.month)
		   }
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 76 Action29 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 77 Action30 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 78 Action31 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 79 Action32 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		/* 80 Action33 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 81 Action34 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 82 Action35 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 83 Action36 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 84 Action37 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 85 Action38 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 86 Action39 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 87 Action40 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 88 Action41 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 89 Action42 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 90 Action43 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 91 Action44 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 92 Action45 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		nil,
		/* 94 Action46 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 95 Action47 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 96 Action48 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 97 Action49 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 98 Action50 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 99 Action51 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 100 Action52 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 101 Action53 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 102 Action54 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 103 Action55 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 104 Action56 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 105 Action57 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 106 Action58 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 107 Action59 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 108 Action60 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 109 Action61 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 110 Action62 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 111 Action63 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 112 Action64 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 113 Action65 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 114 Action66 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
		/* 115 Action67 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction67, position)
			}
			return true
		},
		/* 116 Action68 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction68, position)
			}
			return true
		},
		/* 117 Action69 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction69, position)
			}
			return true
		},
		/* 118 Action70 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction70, position)
			}
			return true
		},
		/* 119 Action71 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction71, position)
			}
			return true
		},
		/* 120 Action72 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction72, position)
			}
			return true
		},
		/* 121 Action73 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction73, position)
			}
			return true
		},
		/* 122 Action74 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction74, position)
			}
			return true
		},
		/* 123 Action75 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction75, position)
			}
			return true
		},
		/* 124 Action76 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction76, position)
			}
			return true
		},
		/* 125 Action77 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction77, position)
			}
			return true
		},
		/* 126 Action78 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction78, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
