package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleYEAR
	ruleMONTHS
	ruleMONTH
	ruleWEEKS
	ruleWEEK
	ruleDAYS
	ruleHOURS
	ruleHOUR
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	rulePegText
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"YEAR",
	"MONTHS",
	"MONTH",
	"WEEKS",
	"WEEK",
	"DAYS",
	"HOURS",
	"HOUR",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"PegText",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int
	hasTime   bool

	Buffer string
	buffer []rune
	rules  [123]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction1:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(time.Minute)

		case ruleAction5:

			p.t = p.t.Add(-time.Minute)

		case ruleAction6:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(-time.Hour)

		case ruleAction9:

			p.t = p.t.Add(time.Hour)

		case ruleAction10:

			p.t = p.t.Add(-day * time.Duration(p.number))
			truncateDayIfNoTime(p)

		case ruleAction11:

			p.t = p.t.Add(day * time.Duration(p.number))
			truncateDayIfNoTime(p)

		case ruleAction12:

			p.t = p.t.Add(-week * time.Duration(p.number))
			truncateDayIfNoTime(p)

		case ruleAction13:

			p.t = p.t.Add(week * time.Duration(p.number))
			truncateDayIfNoTime(p)

		case ruleAction14:

			p.t = p.t.Add(week)
			truncateDayIfNoTime(p)

		case ruleAction15:

			p.t = p.t.Add(-week)
			truncateDayIfNoTime(p)

		case ruleAction16:

			p.t = p.t.AddDate(0, -p.number, 0)
			truncateDayIfNoTime(p)

		case ruleAction17:

			p.t = p.t.AddDate(0, p.number, 0)
			truncateDayIfNoTime(p)

		case ruleAction18:

			p.t = prevMonth(p.t, p.month)
			truncateDayIfNoTime(p)

		case ruleAction19:

			p.t = nextMonth(p.t, p.month)
			truncateDayIfNoTime(p)

		case ruleAction20:

			p.t = p.t.AddDate(0, -1, 0)
			truncateDayIfNoTime(p)

		case ruleAction21:

			p.t = p.t.AddDate(0, 1, 0)
			truncateDayIfNoTime(p)

		case ruleAction22:

			p.t = truncateYear(p.t.AddDate(-p.number, 0, 0))

		case ruleAction23:

			p.t = truncateYear(p.t.AddDate(p.number, 0, 0))

		case ruleAction24:

			p.t = truncateYear(p.t.AddDate(-1, 0, 0))

		case ruleAction25:

			p.t = truncateYear(p.t.AddDate(1, 0, 0))

		case ruleAction26:

			truncateDayIfNoTime(p)

		case ruleAction27:

			p.t = p.t.Add(-day)
			truncateDayIfNoTime(p)

		case ruleAction28:

			p.t = p.t.Add(+day)
			truncateDayIfNoTime(p)

		case ruleAction29:

			p.t = prevWeekday(p.t, p.weekday)
			truncateDayIfNoTime(p)

		case ruleAction30:

			p.t = nextWeekday(p.t, p.weekday)
			truncateDayIfNoTime(p)

		case ruleAction31:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction32:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
			p.hasTime = true

		case ruleAction33:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())
			p.hasTime = true

		case ruleAction34:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
			p.hasTime = true

		case ruleAction35:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction36:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction37:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction38:
			p.number = 1
		case ruleAction39:
			p.number = 1
		case ruleAction40:
			p.number = 2
		case ruleAction41:
			p.number = 3
		case ruleAction42:
			p.number = 4
		case ruleAction43:
			p.number = 5
		case ruleAction44:
			p.number = 6
		case ruleAction45:
			p.number = 7
		case ruleAction46:
			p.number = 8
		case ruleAction47:
			p.number = 9
		case ruleAction48:
			p.number = 10
		case ruleAction49:
			p.weekday = time.Sunday
		case ruleAction50:
			p.weekday = time.Monday
		case ruleAction51:
			p.weekday = time.Tuesday
		case ruleAction52:
			p.weekday = time.Wednesday
		case ruleAction53:
			p.weekday = time.Thursday
		case ruleAction54:
			p.weekday = time.Friday
		case ruleAction55:
			p.weekday = time.Saturday
		case ruleAction56:
			p.month = time.January
		case ruleAction57:
			p.month = time.February
		case ruleAction58:
			p.month = time.March
		case ruleAction59:
			p.month = time.April
		case ruleAction60:
			p.month = time.May
		case ruleAction61:
			p.month = time.June
		case ruleAction62:
			p.month = time.July
		case ruleAction63:
			p.month = time.August
		case ruleAction64:
			p.month = time.September
		case ruleAction65:
			p.month = time.October
		case ruleAction66:
			p.month = time.November
		case ruleAction67:
			p.month = time.December
		case ruleAction68:
			p.number = 1
		case ruleAction69:
			p.number = 1
		case ruleAction70:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / RelativeMinutes / RelativeMinutes / RelativeHours / (RelativeDays (AT? Time)?) / (Time? RelativeDays) / (RelativeWeeks (AT? Time)?) / (Time? RelativeWeeks) / (RelativeWeekdays (AT? Time)?) / (Time? RelativeWeekdays) / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l11
					}
					{
						position12, tokenIndex12 := position, tokenIndex
						{
							position14, tokenIndex14 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l14
							}
							goto l15
						l14:
							position, tokenIndex = position14, tokenIndex14
						}
					l15:
						if !_rules[ruleTime]() {
							goto l12
						}
						goto l13
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
				l13:
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					{
						position17, tokenIndex17 := position, tokenIndex
						if !_rules[ruleTime]() {
							goto l17
						}
						goto l18
					l17:
						position, tokenIndex = position17, tokenIndex17
					}
				l18:
					if !_rules[ruleRelativeDays]() {
						goto l16
					}
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l19
					}
					{
						position20, tokenIndex20 := position, tokenIndex
						{
							position22, tokenIndex22 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l22
							}
							goto l23
						l22:
							position, tokenIndex = position22, tokenIndex22
						}
					l23:
						if !_rules[ruleTime]() {
							goto l20
						}
						goto l21
					l20:
						position, tokenIndex = position20, tokenIndex20
					}
				l21:
					goto l6
				l19:
					position, tokenIndex = position6, tokenIndex6
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleTime]() {
							goto l25
						}
						goto l26
					l25:
						position, tokenIndex = position25, tokenIndex25
					}
				l26:
					if !_rules[ruleRelativeWeeks]() {
						goto l24
					}
					goto l6
				l24:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l27
					}
					{
						position28, tokenIndex28 := position, tokenIndex
						{
							position30, tokenIndex30 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l30
							}
							goto l31
						l30:
							position, tokenIndex = position30, tokenIndex30
						}
					l31:
						if !_rules[ruleTime]() {
							goto l28
						}
						goto l29
					l28:
						position, tokenIndex = position28, tokenIndex28
					}
				l29:
					goto l6
				l27:
					position, tokenIndex = position6, tokenIndex6
					{
						position33, tokenIndex33 := position, tokenIndex
						if !_rules[ruleTime]() {
							goto l33
						}
						goto l34
					l33:
						position, tokenIndex = position33, tokenIndex33
					}
				l34:
					if !_rules[ruleRelativeWeekdays]() {
						goto l32
					}
					goto l6
				l32:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l35
					}
					goto l6
				l35:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l36
					}
					goto l6
				l36:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l37
					}
					{
						position38, tokenIndex38 := position, tokenIndex
						{
							position40, tokenIndex40 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l40
							}
							goto l41
						l40:
							position, tokenIndex = position40, tokenIndex40
						}
					l41:
						if !_rules[ruleTime]() {
							goto l38
						}
						goto l39
					l38:
						position, tokenIndex = position38, tokenIndex38
					}
				l39:
					goto l6
				l37:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position42, tokenIndex42 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l42
						}
						goto l43
					l42:
						position, tokenIndex = position42, tokenIndex42
					}
				l43:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action0) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action1) / (Last Number? MINUTES Action2) / (Next Number? MINUTES Action3) / (NEXT MINUTE Action4) / (LAST MINUTE Action5))> */
		func() bool {
			position44, tokenIndex44 := position, tokenIndex
			{
				position45 := position
				{
					position46, tokenIndex46 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l47
					}
					if !_rules[ruleMINUTES]() {
						goto l47
					}
					if !_rules[ruleAGO]() {
						goto l47
					}
					if !_rules[ruleAction0]() {
						goto l47
					}
					goto l46
				l47:
					position, tokenIndex = position46, tokenIndex46
					{
						position49, tokenIndex49 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l50
						}
						if !_rules[ruleMINUTES]() {
							goto l50
						}
						if !_rules[ruleFROM_NOW]() {
							goto l50
						}
						goto l49
					l50:
						position, tokenIndex = position49, tokenIndex49
						if !_rules[ruleIn]() {
							goto l48
						}
						{
							position51, tokenIndex51 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l51
							}
							goto l52
						l51:
							position, tokenIndex = position51, tokenIndex51
						}
					l52:
						if !_rules[ruleMINUTES]() {
							goto l48
						}
						{
							position53, tokenIndex53 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l53
							}
							goto l54
						l53:
							position, tokenIndex = position53, tokenIndex53
						}
					l54:
					}
				l49:
					if !_rules[ruleAction1]() {
						goto l48
					}
					goto l46
				l48:
					position, tokenIndex = position46, tokenIndex46
					if !_rules[ruleLast]() {
						goto l55
					}
					{
						position56, tokenIndex56 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l56
						}
						goto l57
					l56:
						position, tokenIndex = position56, tokenIndex56
					}
				l57:
					if !_rules[ruleMINUTES]() {
						goto l55
					}
					if !_rules[ruleAction2]() {
						goto l55
					}
					goto l46
				l55:
					position, tokenIndex = position46, tokenIndex46
					if !_rules[ruleNext]() {
						goto l58
					}
					{
						position59, tokenIndex59 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l59
						}
						goto l60
					l59:
						position, tokenIndex = position59, tokenIndex59
					}
				l60:
					if !_rules[ruleMINUTES]() {
						goto l58
					}
					if !_rules[ruleAction3]() {
						goto l58
					}
					goto l46
				l58:
					position, tokenIndex = position46, tokenIndex46
					if !_rules[ruleNEXT]() {
						goto l61
					}
					if !_rules[ruleMINUTE]() {
						goto l61
					}
					if !_rules[ruleAction4]() {
						goto l61
					}
					goto l46
				l61:
					position, tokenIndex = position46, tokenIndex46
					if !_rules[ruleLAST]() {
						goto l44
					}
					if !_rules[ruleMINUTE]() {
						goto l44
					}
					if !_rules[ruleAction5]() {
						goto l44
					}
				}
			l46:
				add(ruleRelativeMinutes, position45)
			}
			return true
		l44:
			position, tokenIndex = position44, tokenIndex44
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action6) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action7) / (LAST HOUR Action8) / (NEXT HOUR Action9))> */
		func() bool {
			position62, tokenIndex62 := position, tokenIndex
			{
				position63 := position
				{
					position64, tokenIndex64 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l65
					}
					if !_rules[ruleHOURS]() {
						goto l65
					}
					if !_rules[ruleAGO]() {
						goto l65
					}
					if !_rules[ruleAction6]() {
						goto l65
					}
					goto l64
				l65:
					position, tokenIndex = position64, tokenIndex64
					{
						position67, tokenIndex67 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l68
						}
						if !_rules[ruleHOURS]() {
							goto l68
						}
						if !_rules[ruleFROM_NOW]() {
							goto l68
						}
						goto l67
					l68:
						position, tokenIndex = position67, tokenIndex67
						if !_rules[ruleIn]() {
							goto l66
						}
						{
							position69, tokenIndex69 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l69
							}
							goto l70
						l69:
							position, tokenIndex = position69, tokenIndex69
						}
					l70:
						if !_rules[ruleHOURS]() {
							goto l66
						}
						{
							position71, tokenIndex71 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l71
							}
							goto l72
						l71:
							position, tokenIndex = position71, tokenIndex71
						}
					l72:
					}
				l67:
					if !_rules[ruleAction7]() {
						goto l66
					}
					goto l64
				l66:
					position, tokenIndex = position64, tokenIndex64
					if !_rules[ruleLAST]() {
						goto l73
					}
					if !_rules[ruleHOUR]() {
						goto l73
					}
					if !_rules[ruleAction8]() {
						goto l73
					}
					goto l64
				l73:
					position, tokenIndex = position64, tokenIndex64
					if !_rules[ruleNEXT]() {
						goto l62
					}
					if !_rules[ruleHOUR]() {
						goto l62
					}
					if !_rules[ruleAction9]() {
						goto l62
					}
				}
			l64:
				add(ruleRelativeHours, position63)
			}
			return true
		l62:
			position, tokenIndex = position62, tokenIndex62
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action10) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action11))> */
		func() bool {
			position74, tokenIndex74 := position, tokenIndex
			{
				position75 := position
				{
					position76, tokenIndex76 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l77
					}
					if !_rules[ruleDAYS]() {
						goto l77
					}
					if !_rules[ruleAGO]() {
						goto l77
					}
					if !_rules[ruleAction10]() {
						goto l77
					}
					goto l76
				l77:
					position, tokenIndex = position76, tokenIndex76
					{
						position78, tokenIndex78 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l79
						}
						if !_rules[ruleDAYS]() {
							goto l79
						}
						if !_rules[ruleFROM_NOW]() {
							goto l79
						}
						goto l78
					l79:
						position, tokenIndex = position78, tokenIndex78
						if !_rules[ruleIn]() {
							goto l74
						}
						{
							position80, tokenIndex80 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l80
							}
							goto l81
						l80:
							position, tokenIndex = position80, tokenIndex80
						}
					l81:
						if !_rules[ruleDAYS]() {
							goto l74
						}
						{
							position82, tokenIndex82 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l82
							}
							goto l83
						l82:
							position, tokenIndex = position82, tokenIndex82
						}
					l83:
					}
				l78:
					if !_rules[ruleAction11]() {
						goto l74
					}
				}
			l76:
				add(ruleRelativeDays, position75)
			}
			return true
		l74:
			position, tokenIndex = position74, tokenIndex74
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action12) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action13) / (NEXT WEEK Action14) / (LAST WEEK Action15))> */
		func() bool {
			position84, tokenIndex84 := position, tokenIndex
			{
				position85 := position
				{
					position86, tokenIndex86 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l87
					}
					if !_rules[ruleWEEKS]() {
						goto l87
					}
					if !_rules[ruleAGO]() {
						goto l87
					}
					if !_rules[ruleAction12]() {
						goto l87
					}
					goto l86
				l87:
					position, tokenIndex = position86, tokenIndex86
					{
						position89, tokenIndex89 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l90
						}
						if !_rules[ruleWEEKS]() {
							goto l90
						}
						if !_rules[ruleFROM_NOW]() {
							goto l90
						}
						goto l89
					l90:
						position, tokenIndex = position89, tokenIndex89
						if !_rules[ruleIn]() {
							goto l88
						}
						{
							position91, tokenIndex91 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l91
							}
							goto l92
						l91:
							position, tokenIndex = position91, tokenIndex91
						}
					l92:
						if !_rules[ruleWEEKS]() {
							goto l88
						}
						{
							position93, tokenIndex93 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l93
							}
							goto l94
						l93:
							position, tokenIndex = position93, tokenIndex93
						}
					l94:
					}
				l89:
					if !_rules[ruleAction13]() {
						goto l88
					}
					goto l86
				l88:
					position, tokenIndex = position86, tokenIndex86
					if !_rules[ruleNEXT]() {
						goto l95
					}
					if !_rules[ruleWEEK]() {
						goto l95
					}
					if !_rules[ruleAction14]() {
						goto l95
					}
					goto l86
				l95:
					position, tokenIndex = position86, tokenIndex86
					if !_rules[ruleLAST]() {
						goto l84
					}
					if !_rules[ruleWEEK]() {
						goto l84
					}
					if !_rules[ruleAction15]() {
						goto l84
					}
				}
			l86:
				add(ruleRelativeWeeks, position85)
			}
			return true
		l84:
			position, tokenIndex = position84, tokenIndex84
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action16) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action17) / (LAST Month Action18) / (NEXT Month Action19) / (LAST MONTH Action20) / (NEXT MONTH Action21))> */
		func() bool {
			position96, tokenIndex96 := position, tokenIndex
			{
				position97 := position
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l99
					}
					if !_rules[ruleMONTHS]() {
						goto l99
					}
					if !_rules[ruleAGO]() {
						goto l99
					}
					if !_rules[ruleAction16]() {
						goto l99
					}
					goto l98
				l99:
					position, tokenIndex = position98, tokenIndex98
					{
						position101, tokenIndex101 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l102
						}
						if !_rules[ruleMONTHS]() {
							goto l102
						}
						if !_rules[ruleFROM_NOW]() {
							goto l102
						}
						goto l101
					l102:
						position, tokenIndex = position101, tokenIndex101
						if !_rules[ruleIn]() {
							goto l100
						}
						{
							position103, tokenIndex103 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l103
							}
							goto l104
						l103:
							position, tokenIndex = position103, tokenIndex103
						}
					l104:
						if !_rules[ruleMONTHS]() {
							goto l100
						}
						{
							position105, tokenIndex105 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l105
							}
							goto l106
						l105:
							position, tokenIndex = position105, tokenIndex105
						}
					l106:
					}
				l101:
					if !_rules[ruleAction17]() {
						goto l100
					}
					goto l98
				l100:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleLAST]() {
						goto l107
					}
					if !_rules[ruleMonth]() {
						goto l107
					}
					if !_rules[ruleAction18]() {
						goto l107
					}
					goto l98
				l107:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleNEXT]() {
						goto l108
					}
					if !_rules[ruleMonth]() {
						goto l108
					}
					if !_rules[ruleAction19]() {
						goto l108
					}
					goto l98
				l108:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleLAST]() {
						goto l109
					}
					if !_rules[ruleMONTH]() {
						goto l109
					}
					if !_rules[ruleAction20]() {
						goto l109
					}
					goto l98
				l109:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleNEXT]() {
						goto l96
					}
					if !_rules[ruleMONTH]() {
						goto l96
					}
					if !_rules[ruleAction21]() {
						goto l96
					}
				}
			l98:
				add(ruleRelativeMonth, position97)
			}
			return true
		l96:
			position, tokenIndex = position96, tokenIndex96
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action22) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action23) / (LAST YEAR Action24) / (NEXT YEAR Action25))> */
		func() bool {
			position110, tokenIndex110 := position, tokenIndex
			{
				position111 := position
				{
					position112, tokenIndex112 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l113
					}
					if !_rules[ruleYEARS]() {
						goto l113
					}
					if !_rules[ruleAGO]() {
						goto l113
					}
					if !_rules[ruleAction22]() {
						goto l113
					}
					goto l112
				l113:
					position, tokenIndex = position112, tokenIndex112
					{
						position115, tokenIndex115 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l116
						}
						if !_rules[ruleYEARS]() {
							goto l116
						}
						if !_rules[ruleFROM_NOW]() {
							goto l116
						}
						goto l115
					l116:
						position, tokenIndex = position115, tokenIndex115
						if !_rules[ruleIn]() {
							goto l114
						}
						{
							position117, tokenIndex117 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l117
							}
							goto l118
						l117:
							position, tokenIndex = position117, tokenIndex117
						}
					l118:
						if !_rules[ruleYEARS]() {
							goto l114
						}
						{
							position119, tokenIndex119 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l119
							}
							goto l120
						l119:
							position, tokenIndex = position119, tokenIndex119
						}
					l120:
					}
				l115:
					if !_rules[ruleAction23]() {
						goto l114
					}
					goto l112
				l114:
					position, tokenIndex = position112, tokenIndex112
					if !_rules[ruleLAST]() {
						goto l121
					}
					if !_rules[ruleYEAR]() {
						goto l121
					}
					if !_rules[ruleAction24]() {
						goto l121
					}
					goto l112
				l121:
					position, tokenIndex = position112, tokenIndex112
					if !_rules[ruleNEXT]() {
						goto l110
					}
					if !_rules[ruleYEAR]() {
						goto l110
					}
					if !_rules[ruleAction25]() {
						goto l110
					}
				}
			l112:
				add(ruleRelativeYear, position111)
			}
			return true
		l110:
			position, tokenIndex = position110, tokenIndex110
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action26) / (YESTERDAY Action27) / (TOMORROW Action28) / (LAST Weekday Action29) / (NEXT Weekday Action30))> */
		func() bool {
			position122, tokenIndex122 := position, tokenIndex
			{
				position123 := position
				{
					position124, tokenIndex124 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l125
					}
					if !_rules[ruleAction26]() {
						goto l125
					}
					goto l124
				l125:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleYESTERDAY]() {
						goto l126
					}
					if !_rules[ruleAction27]() {
						goto l126
					}
					goto l124
				l126:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleTOMORROW]() {
						goto l127
					}
					if !_rules[ruleAction28]() {
						goto l127
					}
					goto l124
				l127:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleLAST]() {
						goto l128
					}
					if !_rules[ruleWeekday]() {
						goto l128
					}
					if !_rules[ruleAction29]() {
						goto l128
					}
					goto l124
				l128:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleNEXT]() {
						goto l122
					}
					if !_rules[ruleWeekday]() {
						goto l122
					}
					if !_rules[ruleAction30]() {
						goto l122
					}
				}
			l124:
				add(ruleRelativeWeekdays, position123)
			}
			return true
		l122:
			position, tokenIndex = position122, tokenIndex122
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action31)> */
		func() bool {
			position129, tokenIndex129 := position, tokenIndex
			{
				position130 := position
				{
					position131, tokenIndex131 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l132
					}
					if !_rules[ruleOrdinal]() {
						goto l132
					}
					goto l131
				l132:
					position, tokenIndex = position131, tokenIndex131
					if !_rules[ruleLast]() {
						goto l129
					}
					{
						position133, tokenIndex133 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l133
						}
						goto l134
					l133:
						position, tokenIndex = position133, tokenIndex133
					}
				l134:
					if !_rules[ruleNumber]() {
						goto l129
					}
				}
			l131:
				if !_rules[ruleAction31]() {
					goto l129
				}
				add(ruleDate, position130)
			}
			return true
		l129:
			position, tokenIndex = position129, tokenIndex129
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position135, tokenIndex135 := position, tokenIndex
			{
				position136 := position
				{
					position137, tokenIndex137 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l138
					}
					goto l137
				l138:
					position, tokenIndex = position137, tokenIndex137
					if !_rules[ruleClock24Hour]() {
						goto l135
					}
				}
			l137:
				add(ruleTime, position136)
			}
			return true
		l135:
			position, tokenIndex = position135, tokenIndex135
			return false
		},
		/* 11 Clock12Hour <- <((Number Action32 (Minutes Seconds?)? AM) / (Number Action33 (Minutes Seconds?)? PM))> */
		func() bool {
			position139, tokenIndex139 := position, tokenIndex
			{
				position140 := position
				{
					position141, tokenIndex141 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l142
					}
					if !_rules[ruleAction32]() {
						goto l142
					}
					{
						position143, tokenIndex143 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l143
						}
						{
							position145, tokenIndex145 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l145
							}
							goto l146
						l145:
							position, tokenIndex = position145, tokenIndex145
						}
					l146:
						goto l144
					l143:
						position, tokenIndex = position143, tokenIndex143
					}
				l144:
					if !_rules[ruleAM]() {
						goto l142
					}
					goto l141
				l142:
					position, tokenIndex = position141, tokenIndex141
					if !_rules[ruleNumber]() {
						goto l139
					}
					if !_rules[ruleAction33]() {
						goto l139
					}
					{
						position147, tokenIndex147 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l147
						}
						{
							position149, tokenIndex149 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l149
							}
							goto l150
						l149:
							position, tokenIndex = position149, tokenIndex149
						}
					l150:
						goto l148
					l147:
						position, tokenIndex = position147, tokenIndex147
					}
				l148:
					if !_rules[rulePM]() {
						goto l139
					}
				}
			l141:
				add(ruleClock12Hour, position140)
			}
			return true
		l139:
			position, tokenIndex = position139, tokenIndex139
			return false
		},
		/* 12 Clock24Hour <- <(Number Action34 (Minutes Seconds?)?)> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				if !_rules[ruleNumber]() {
					goto l151
				}
				if !_rules[ruleAction34]() {
					goto l151
				}
				{
					position153, tokenIndex153 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l153
					}
					{
						position155, tokenIndex155 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l155
						}
						goto l156
					l155:
						position, tokenIndex = position155, tokenIndex155
					}
				l156:
					goto l154
				l153:
					position, tokenIndex = position153, tokenIndex153
				}
			l154:
				add(ruleClock24Hour, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 13 Minutes <- <(':' Number Action35)> */
		func() bool {
			position157, tokenIndex157 := position, tokenIndex
			{
				position158 := position
				if buffer[position] != rune(':') {
					goto l157
				}
				position++
				if !_rules[ruleNumber]() {
					goto l157
				}
				if !_rules[ruleAction35]() {
					goto l157
				}
				add(ruleMinutes, position158)
			}
			return true
		l157:
			position, tokenIndex = position157, tokenIndex157
			return false
		},
		/* 14 Seconds <- <(':' Number Action36)> */
		func() bool {
			position159, tokenIndex159 := position, tokenIndex
			{
				position160 := position
				if buffer[position] != rune(':') {
					goto l159
				}
				position++
				if !_rules[ruleNumber]() {
					goto l159
				}
				if !_rules[ruleAction36]() {
					goto l159
				}
				add(ruleSeconds, position160)
			}
			return true
		l159:
			position, tokenIndex = position159, tokenIndex159
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action37) / ('a' 'n'? _ Action38) / ('o' 'n' 'e' _ Action39) / ('t' 'w' 'o' _ Action40) / ('t' 'h' 'r' 'e' 'e' _ Action41) / ('f' 'o' 'u' 'r' _ Action42) / ('f' 'i' 'v' 'e' _ Action43) / ('s' 'i' 'x' _ Action44) / ('s' 'e' 'v' 'e' 'n' _ Action45) / ('e' 'i' 'g' 'h' 't' _ Action46) / ('n' 'i' 'n' 'e' _ Action47) / ('t' 'e' 'n' _ Action48))> */
		func() bool {
			position161, tokenIndex161 := position, tokenIndex
			{
				position162 := position
				{
					position163, tokenIndex163 := position, tokenIndex
					{
						position165 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l164
						}
						position++
					l166:
						{
							position167, tokenIndex167 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l167
							}
							position++
							goto l166
						l167:
							position, tokenIndex = position167, tokenIndex167
						}
						add(rulePegText, position165)
					}
					if !_rules[rule_]() {
						goto l164
					}
					if !_rules[ruleAction37]() {
						goto l164
					}
					goto l163
				l164:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('a') {
						goto l168
					}
					position++
					{
						position169, tokenIndex169 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l169
						}
						position++
						goto l170
					l169:
						position, tokenIndex = position169, tokenIndex169
					}
				l170:
					if !_rules[rule_]() {
						goto l168
					}
					if !_rules[ruleAction38]() {
						goto l168
					}
					goto l163
				l168:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('o') {
						goto l171
					}
					position++
					if buffer[position] != rune('n') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction39]() {
						goto l171
					}
					goto l163
				l171:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					if buffer[position] != rune('w') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction40]() {
						goto l172
					}
					goto l163
				l172:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('t') {
						goto l173
					}
					position++
					if buffer[position] != rune('h') {
						goto l173
					}
					position++
					if buffer[position] != rune('r') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction41]() {
						goto l173
					}
					goto l163
				l173:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('f') {
						goto l174
					}
					position++
					if buffer[position] != rune('o') {
						goto l174
					}
					position++
					if buffer[position] != rune('u') {
						goto l174
					}
					position++
					if buffer[position] != rune('r') {
						goto l174
					}
					position++
					if !_rules[rule_]() {
						goto l174
					}
					if !_rules[ruleAction42]() {
						goto l174
					}
					goto l163
				l174:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('f') {
						goto l175
					}
					position++
					if buffer[position] != rune('i') {
						goto l175
					}
					position++
					if buffer[position] != rune('v') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if !_rules[rule_]() {
						goto l175
					}
					if !_rules[ruleAction43]() {
						goto l175
					}
					goto l163
				l175:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('s') {
						goto l176
					}
					position++
					if buffer[position] != rune('i') {
						goto l176
					}
					position++
					if buffer[position] != rune('x') {
						goto l176
					}
					position++
					if !_rules[rule_]() {
						goto l176
					}
					if !_rules[ruleAction44]() {
						goto l176
					}
					goto l163
				l176:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('s') {
						goto l177
					}
					position++
					if buffer[position] != rune('e') {
						goto l177
					}
					position++
					if buffer[position] != rune('v') {
						goto l177
					}
					position++
					if buffer[position] != rune('e') {
						goto l177
					}
					position++
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if !_rules[rule_]() {
						goto l177
					}
					if !_rules[ruleAction45]() {
						goto l177
					}
					goto l163
				l177:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					if buffer[position] != rune('i') {
						goto l178
					}
					position++
					if buffer[position] != rune('g') {
						goto l178
					}
					position++
					if buffer[position] != rune('h') {
						goto l178
					}
					position++
					if buffer[position] != rune('t') {
						goto l178
					}
					position++
					if !_rules[rule_]() {
						goto l178
					}
					if !_rules[ruleAction46]() {
						goto l178
					}
					goto l163
				l178:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('n') {
						goto l179
					}
					position++
					if buffer[position] != rune('i') {
						goto l179
					}
					position++
					if buffer[position] != rune('n') {
						goto l179
					}
					position++
					if buffer[position] != rune('e') {
						goto l179
					}
					position++
					if !_rules[rule_]() {
						goto l179
					}
					if !_rules[ruleAction47]() {
						goto l179
					}
					goto l163
				l179:
					position, tokenIndex = position163, tokenIndex163
					if buffer[position] != rune('t') {
						goto l161
					}
					position++
					if buffer[position] != rune('e') {
						goto l161
					}
					position++
					if buffer[position] != rune('n') {
						goto l161
					}
					position++
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleAction48]() {
						goto l161
					}
				}
			l163:
				add(ruleNumber, position162)
			}
			return true
		l161:
			position, tokenIndex = position161, tokenIndex161
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action49) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action50) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action51) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action52) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action53) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action54) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action55))> */
		func() bool {
			position180, tokenIndex180 := position, tokenIndex
			{
				position181 := position
				{
					position182, tokenIndex182 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l183
					}
					position++
					if buffer[position] != rune('u') {
						goto l183
					}
					position++
					if buffer[position] != rune('n') {
						goto l183
					}
					position++
					if buffer[position] != rune('d') {
						goto l183
					}
					position++
					if buffer[position] != rune('a') {
						goto l183
					}
					position++
					if buffer[position] != rune('y') {
						goto l183
					}
					position++
					if !_rules[rule_]() {
						goto l183
					}
					if !_rules[ruleAction49]() {
						goto l183
					}
					goto l182
				l183:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('m') {
						goto l184
					}
					position++
					if buffer[position] != rune('o') {
						goto l184
					}
					position++
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('d') {
						goto l184
					}
					position++
					if buffer[position] != rune('a') {
						goto l184
					}
					position++
					if buffer[position] != rune('y') {
						goto l184
					}
					position++
					if !_rules[rule_]() {
						goto l184
					}
					if !_rules[ruleAction50]() {
						goto l184
					}
					goto l182
				l184:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('u') {
						goto l185
					}
					position++
					if buffer[position] != rune('e') {
						goto l185
					}
					position++
					if buffer[position] != rune('s') {
						goto l185
					}
					position++
					if buffer[position] != rune('d') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('y') {
						goto l185
					}
					position++
					if !_rules[rule_]() {
						goto l185
					}
					if !_rules[ruleAction51]() {
						goto l185
					}
					goto l182
				l185:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('w') {
						goto l186
					}
					position++
					if buffer[position] != rune('e') {
						goto l186
					}
					position++
					if buffer[position] != rune('d') {
						goto l186
					}
					position++
					if buffer[position] != rune('n') {
						goto l186
					}
					position++
					if buffer[position] != rune('e') {
						goto l186
					}
					position++
					if buffer[position] != rune('s') {
						goto l186
					}
					position++
					if buffer[position] != rune('d') {
						goto l186
					}
					position++
					if buffer[position] != rune('a') {
						goto l186
					}
					position++
					if buffer[position] != rune('y') {
						goto l186
					}
					position++
					if !_rules[rule_]() {
						goto l186
					}
					if !_rules[ruleAction52]() {
						goto l186
					}
					goto l182
				l186:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('t') {
						goto l187
					}
					position++
					if buffer[position] != rune('h') {
						goto l187
					}
					position++
					if buffer[position] != rune('u') {
						goto l187
					}
					position++
					if buffer[position] != rune('r') {
						goto l187
					}
					position++
					if buffer[position] != rune('s') {
						goto l187
					}
					position++
					if buffer[position] != rune('d') {
						goto l187
					}
					position++
					if buffer[position] != rune('a') {
						goto l187
					}
					position++
					if buffer[position] != rune('y') {
						goto l187
					}
					position++
					if !_rules[rule_]() {
						goto l187
					}
					if !_rules[ruleAction53]() {
						goto l187
					}
					goto l182
				l187:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('f') {
						goto l188
					}
					position++
					if buffer[position] != rune('r') {
						goto l188
					}
					position++
					if buffer[position] != rune('i') {
						goto l188
					}
					position++
					if buffer[position] != rune('d') {
						goto l188
					}
					position++
					if buffer[position] != rune('a') {
						goto l188
					}
					position++
					if buffer[position] != rune('y') {
						goto l188
					}
					position++
					if !_rules[rule_]() {
						goto l188
					}
					if !_rules[ruleAction54]() {
						goto l188
					}
					goto l182
				l188:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('s') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('t') {
						goto l180
					}
					position++
					if buffer[position] != rune('u') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					if buffer[position] != rune('d') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('y') {
						goto l180
					}
					position++
					if !_rules[rule_]() {
						goto l180
					}
					if !_rules[ruleAction55]() {
						goto l180
					}
				}
			l182:
				add(ruleWeekday, position181)
			}
			return true
		l180:
			position, tokenIndex = position180, tokenIndex180
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action56) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action57) / ('m' 'a' 'r' 'c' 'h' _ Action58) / ('a' 'p' 'r' 'i' 'l' _ Action59) / ('m' 'a' 'y' _ Action60) / ('j' 'u' 'n' 'e' _ Action61) / ('j' 'u' 'l' 'y' _ Action62) / ('a' 'u' 'g' 'u' 's' 't' _ Action63) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action64) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action65) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action66) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action67))> */
		func() bool {
			position189, tokenIndex189 := position, tokenIndex
			{
				position190 := position
				{
					position191, tokenIndex191 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l192
					}
					position++
					if buffer[position] != rune('a') {
						goto l192
					}
					position++
					if buffer[position] != rune('n') {
						goto l192
					}
					position++
					if buffer[position] != rune('u') {
						goto l192
					}
					position++
					if buffer[position] != rune('a') {
						goto l192
					}
					position++
					if buffer[position] != rune('r') {
						goto l192
					}
					position++
					if buffer[position] != rune('y') {
						goto l192
					}
					position++
					if !_rules[rule_]() {
						goto l192
					}
					if !_rules[ruleAction56]() {
						goto l192
					}
					goto l191
				l192:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('f') {
						goto l193
					}
					position++
					if buffer[position] != rune('e') {
						goto l193
					}
					position++
					if buffer[position] != rune('b') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('u') {
						goto l193
					}
					position++
					if buffer[position] != rune('a') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('y') {
						goto l193
					}
					position++
					if !_rules[rule_]() {
						goto l193
					}
					if !_rules[ruleAction57]() {
						goto l193
					}
					goto l191
				l193:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('m') {
						goto l194
					}
					position++
					if buffer[position] != rune('a') {
						goto l194
					}
					position++
					if buffer[position] != rune('r') {
						goto l194
					}
					position++
					if buffer[position] != rune('c') {
						goto l194
					}
					position++
					if buffer[position] != rune('h') {
						goto l194
					}
					position++
					if !_rules[rule_]() {
						goto l194
					}
					if !_rules[ruleAction58]() {
						goto l194
					}
					goto l191
				l194:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('a') {
						goto l195
					}
					position++
					if buffer[position] != rune('p') {
						goto l195
					}
					position++
					if buffer[position] != rune('r') {
						goto l195
					}
					position++
					if buffer[position] != rune('i') {
						goto l195
					}
					position++
					if buffer[position] != rune('l') {
						goto l195
					}
					position++
					if !_rules[rule_]() {
						goto l195
					}
					if !_rules[ruleAction59]() {
						goto l195
					}
					goto l191
				l195:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('m') {
						goto l196
					}
					position++
					if buffer[position] != rune('a') {
						goto l196
					}
					position++
					if buffer[position] != rune('y') {
						goto l196
					}
					position++
					if !_rules[rule_]() {
						goto l196
					}
					if !_rules[ruleAction60]() {
						goto l196
					}
					goto l191
				l196:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('j') {
						goto l197
					}
					position++
					if buffer[position] != rune('u') {
						goto l197
					}
					position++
					if buffer[position] != rune('n') {
						goto l197
					}
					position++
					if buffer[position] != rune('e') {
						goto l197
					}
					position++
					if !_rules[rule_]() {
						goto l197
					}
					if !_rules[ruleAction61]() {
						goto l197
					}
					goto l191
				l197:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('j') {
						goto l198
					}
					position++
					if buffer[position] != rune('u') {
						goto l198
					}
					position++
					if buffer[position] != rune('l') {
						goto l198
					}
					position++
					if buffer[position] != rune('y') {
						goto l198
					}
					position++
					if !_rules[rule_]() {
						goto l198
					}
					if !_rules[ruleAction62]() {
						goto l198
					}
					goto l191
				l198:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('a') {
						goto l199
					}
					position++
					if buffer[position] != rune('u') {
						goto l199
					}
					position++
					if buffer[position] != rune('g') {
						goto l199
					}
					position++
					if buffer[position] != rune('u') {
						goto l199
					}
					position++
					if buffer[position] != rune('s') {
						goto l199
					}
					position++
					if buffer[position] != rune('t') {
						goto l199
					}
					position++
					if !_rules[rule_]() {
						goto l199
					}
					if !_rules[ruleAction63]() {
						goto l199
					}
					goto l191
				l199:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('s') {
						goto l200
					}
					position++
					if buffer[position] != rune('e') {
						goto l200
					}
					position++
					if buffer[position] != rune('p') {
						goto l200
					}
					position++
					if buffer[position] != rune('t') {
						goto l200
					}
					position++
					if buffer[position] != rune('e') {
						goto l200
					}
					position++
					if buffer[position] != rune('m') {
						goto l200
					}
					position++
					if buffer[position] != rune('b') {
						goto l200
					}
					position++
					if buffer[position] != rune('e') {
						goto l200
					}
					position++
					if buffer[position] != rune('r') {
						goto l200
					}
					position++
					if !_rules[rule_]() {
						goto l200
					}
					if !_rules[ruleAction64]() {
						goto l200
					}
					goto l191
				l200:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('o') {
						goto l201
					}
					position++
					if buffer[position] != rune('c') {
						goto l201
					}
					position++
					if buffer[position] != rune('t') {
						goto l201
					}
					position++
					if buffer[position] != rune('o') {
						goto l201
					}
					position++
					if buffer[position] != rune('b') {
						goto l201
					}
					position++
					if buffer[position] != rune('e') {
						goto l201
					}
					position++
					if buffer[position] != rune('r') {
						goto l201
					}
					position++
					if !_rules[rule_]() {
						goto l201
					}
					if !_rules[ruleAction65]() {
						goto l201
					}
					goto l191
				l201:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('n') {
						goto l202
					}
					position++
					if buffer[position] != rune('o') {
						goto l202
					}
					position++
					if buffer[position] != rune('v') {
						goto l202
					}
					position++
					if buffer[position] != rune('e') {
						goto l202
					}
					position++
					if buffer[position] != rune('m') {
						goto l202
					}
					position++
					if buffer[position] != rune('b') {
						goto l202
					}
					position++
					if buffer[position] != rune('e') {
						goto l202
					}
					position++
					if buffer[position] != rune('r') {
						goto l202
					}
					position++
					if !_rules[rule_]() {
						goto l202
					}
					if !_rules[ruleAction66]() {
						goto l202
					}
					goto l191
				l202:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('d') {
						goto l189
					}
					position++
					if buffer[position] != rune('e') {
						goto l189
					}
					position++
					if buffer[position] != rune('c') {
						goto l189
					}
					position++
					if buffer[position] != rune('e') {
						goto l189
					}
					position++
					if buffer[position] != rune('m') {
						goto l189
					}
					position++
					if buffer[position] != rune('b') {
						goto l189
					}
					position++
					if buffer[position] != rune('e') {
						goto l189
					}
					position++
					if buffer[position] != rune('r') {
						goto l189
					}
					position++
					if !_rules[rule_]() {
						goto l189
					}
					if !_rules[ruleAction67]() {
						goto l189
					}
				}
			l191:
				add(ruleMonth, position190)
			}
			return true
		l189:
			position, tokenIndex = position189, tokenIndex189
			return false
		},
		/* 18 In <- <(IN _ Action68)> */
		func() bool {
			position203, tokenIndex203 := position, tokenIndex
			{
				position204 := position
				if !_rules[ruleIN]() {
					goto l203
				}
				if !_rules[rule_]() {
					goto l203
				}
				if !_rules[ruleAction68]() {
					goto l203
				}
				add(ruleIn, position204)
			}
			return true
		l203:
			position, tokenIndex = position203, tokenIndex203
			return false
		},
		/* 19 Last <- <(LAST _ Action69)> */
		func() bool {
			position205, tokenIndex205 := position, tokenIndex
			{
				position206 := position
				if !_rules[ruleLAST]() {
					goto l205
				}
				if !_rules[rule_]() {
					goto l205
				}
				if !_rules[ruleAction69]() {
					goto l205
				}
				add(ruleLast, position206)
			}
			return true
		l205:
			position, tokenIndex = position205, tokenIndex205
			return false
		},
		/* 20 Next <- <(NEXT _ Action70)> */
		func() bool {
			position207, tokenIndex207 := position, tokenIndex
			{
				position208 := position
				if !_rules[ruleNEXT]() {
					goto l207
				}
				if !_rules[rule_]() {
					goto l207
				}
				if !_rules[ruleAction70]() {
					goto l207
				}
				add(ruleNext, position208)
			}
			return true
		l207:
			position, tokenIndex = position207, tokenIndex207
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position209, tokenIndex209 := position, tokenIndex
			{
				position210 := position
				{
					position211, tokenIndex211 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					if buffer[position] != rune('t') {
						goto l212
					}
					position++
					goto l211
				l212:
					position, tokenIndex = position211, tokenIndex211
					if buffer[position] != rune('n') {
						goto l213
					}
					position++
					if buffer[position] != rune('d') {
						goto l213
					}
					position++
					goto l211
				l213:
					position, tokenIndex = position211, tokenIndex211
					if buffer[position] != rune('r') {
						goto l214
					}
					position++
					if buffer[position] != rune('d') {
						goto l214
					}
					position++
					goto l211
				l214:
					position, tokenIndex = position211, tokenIndex211
					if buffer[position] != rune('t') {
						goto l209
					}
					position++
					if buffer[position] != rune('h') {
						goto l209
					}
					position++
				}
			l211:
				if !_rules[rule_]() {
					goto l209
				}
				add(ruleOrdinal, position210)
			}
			return true
		l209:
			position, tokenIndex = position209, tokenIndex209
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position215, tokenIndex215 := position, tokenIndex
			{
				position216 := position
				if buffer[position] != rune('y') {
					goto l215
				}
				position++
				if buffer[position] != rune('e') {
					goto l215
				}
				position++
				if buffer[position] != rune('a') {
					goto l215
				}
				position++
				if buffer[position] != rune('r') {
					goto l215
				}
				position++
				{
					position217, tokenIndex217 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					goto l218
				l217:
					position, tokenIndex = position217, tokenIndex217
				}
			l218:
				if !_rules[rule_]() {
					goto l215
				}
				add(ruleYEARS, position216)
			}
			return true
		l215:
			position, tokenIndex = position215, tokenIndex215
			return false
		},
		/* 23 YEAR <- <('y' 'e' 'a' 'r' _)> */
		func() bool {
			position219, tokenIndex219 := position, tokenIndex
			{
				position220 := position
				if buffer[position] != rune('y') {
					goto l219
				}
				position++
				if buffer[position] != rune('e') {
					goto l219
				}
				position++
				if buffer[position] != rune('a') {
					goto l219
				}
				position++
				if buffer[position] != rune('r') {
					goto l219
				}
				position++
				if !_rules[rule_]() {
					goto l219
				}
				add(ruleYEAR, position220)
			}
			return true
		l219:
			position, tokenIndex = position219, tokenIndex219
			return false
		},
		/* 24 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position221, tokenIndex221 := position, tokenIndex
			{
				position222 := position
				if buffer[position] != rune('m') {
					goto l221
				}
				position++
				if buffer[position] != rune('o') {
					goto l221
				}
				position++
				if buffer[position] != rune('n') {
					goto l221
				}
				position++
				if buffer[position] != rune('t') {
					goto l221
				}
				position++
				if buffer[position] != rune('h') {
					goto l221
				}
				position++
				{
					position223, tokenIndex223 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l223
					}
					position++
					goto l224
				l223:
					position, tokenIndex = position223, tokenIndex223
				}
			l224:
				if !_rules[rule_]() {
					goto l221
				}
				add(ruleMONTHS, position222)
			}
			return true
		l221:
			position, tokenIndex = position221, tokenIndex221
			return false
		},
		/* 25 MONTH <- <('m' 'o' 'n' 't' 'h' _)> */
		func() bool {
			position225, tokenIndex225 := position, tokenIndex
			{
				position226 := position
				if buffer[position] != rune('m') {
					goto l225
				}
				position++
				if buffer[position] != rune('o') {
					goto l225
				}
				position++
				if buffer[position] != rune('n') {
					goto l225
				}
				position++
				if buffer[position] != rune('t') {
					goto l225
				}
				position++
				if buffer[position] != rune('h') {
					goto l225
				}
				position++
				if !_rules[rule_]() {
					goto l225
				}
				add(ruleMONTH, position226)
			}
			return true
		l225:
			position, tokenIndex = position225, tokenIndex225
			return false
		},
		/* 26 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position227, tokenIndex227 := position, tokenIndex
			{
				position228 := position
				if buffer[position] != rune('w') {
					goto l227
				}
				position++
				if buffer[position] != rune('e') {
					goto l227
				}
				position++
				if buffer[position] != rune('e') {
					goto l227
				}
				position++
				if buffer[position] != rune('k') {
					goto l227
				}
				position++
				{
					position229, tokenIndex229 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l229
					}
					position++
					goto l230
				l229:
					position, tokenIndex = position229, tokenIndex229
				}
			l230:
				if !_rules[rule_]() {
					goto l227
				}
				add(ruleWEEKS, position228)
			}
			return true
		l227:
			position, tokenIndex = position227, tokenIndex227
			return false
		},
		/* 27 WEEK <- <('w' 'e' 'e' 'k' _)> */
		func() bool {
			position231, tokenIndex231 := position, tokenIndex
			{
				position232 := position
				if buffer[position] != rune('w') {
					goto l231
				}
				position++
				if buffer[position] != rune('e') {
					goto l231
				}
				position++
				if buffer[position] != rune('e') {
					goto l231
				}
				position++
				if buffer[position] != rune('k') {
					goto l231
				}
				position++
				if !_rules[rule_]() {
					goto l231
				}
				add(ruleWEEK, position232)
			}
			return true
		l231:
			position, tokenIndex = position231, tokenIndex231
			return false
		},
		/* 28 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position233, tokenIndex233 := position, tokenIndex
			{
				position234 := position
				if buffer[position] != rune('d') {
					goto l233
				}
				position++
				if buffer[position] != rune('a') {
					goto l233
				}
				position++
				if buffer[position] != rune('y') {
					goto l233
				}
				position++
				{
					position235, tokenIndex235 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l235
					}
					position++
					goto l236
				l235:
					position, tokenIndex = position235, tokenIndex235
				}
			l236:
				if !_rules[rule_]() {
					goto l233
				}
				add(ruleDAYS, position234)
			}
			return true
		l233:
			position, tokenIndex = position233, tokenIndex233
			return false
		},
		/* 29 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position237, tokenIndex237 := position, tokenIndex
			{
				position238 := position
				if buffer[position] != rune('h') {
					goto l237
				}
				position++
				if buffer[position] != rune('o') {
					goto l237
				}
				position++
				if buffer[position] != rune('u') {
					goto l237
				}
				position++
				if buffer[position] != rune('r') {
					goto l237
				}
				position++
				{
					position239, tokenIndex239 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l239
					}
					position++
					goto l240
				l239:
					position, tokenIndex = position239, tokenIndex239
				}
			l240:
				if !_rules[rule_]() {
					goto l237
				}
				add(ruleHOURS, position238)
			}
			return true
		l237:
			position, tokenIndex = position237, tokenIndex237
			return false
		},
		/* 30 HOUR <- <('h' 'o' 'u' 'r' _)> */
		func() bool {
			position241, tokenIndex241 := position, tokenIndex
			{
				position242 := position
				if buffer[position] != rune('h') {
					goto l241
				}
				position++
				if buffer[position] != rune('o') {
					goto l241
				}
				position++
				if buffer[position] != rune('u') {
					goto l241
				}
				position++
				if buffer[position] != rune('r') {
					goto l241
				}
				position++
				if !_rules[rule_]() {
					goto l241
				}
				add(ruleHOUR, position242)
			}
			return true
		l241:
			position, tokenIndex = position241, tokenIndex241
			return false
		},
		/* 31 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position243, tokenIndex243 := position, tokenIndex
			{
				position244 := position
				if buffer[position] != rune('m') {
					goto l243
				}
				position++
				if buffer[position] != rune('i') {
					goto l243
				}
				position++
				if buffer[position] != rune('n') {
					goto l243
				}
				position++
				if buffer[position] != rune('u') {
					goto l243
				}
				position++
				if buffer[position] != rune('t') {
					goto l243
				}
				position++
				if buffer[position] != rune('e') {
					goto l243
				}
				position++
				{
					position245, tokenIndex245 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l245
					}
					position++
					goto l246
				l245:
					position, tokenIndex = position245, tokenIndex245
				}
			l246:
				if !_rules[rule_]() {
					goto l243
				}
				add(ruleMINUTES, position244)
			}
			return true
		l243:
			position, tokenIndex = position243, tokenIndex243
			return false
		},
		/* 32 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position247, tokenIndex247 := position, tokenIndex
			{
				position248 := position
				if buffer[position] != rune('m') {
					goto l247
				}
				position++
				if buffer[position] != rune('i') {
					goto l247
				}
				position++
				if buffer[position] != rune('n') {
					goto l247
				}
				position++
				if buffer[position] != rune('u') {
					goto l247
				}
				position++
				if buffer[position] != rune('t') {
					goto l247
				}
				position++
				if buffer[position] != rune('e') {
					goto l247
				}
				position++
				if !_rules[rule_]() {
					goto l247
				}
				add(ruleMINUTE, position248)
			}
			return true
		l247:
			position, tokenIndex = position247, tokenIndex247
			return false
		},
		/* 33 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position249, tokenIndex249 := position, tokenIndex
			{
				position250 := position
				if buffer[position] != rune('y') {
					goto l249
				}
				position++
				if buffer[position] != rune('e') {
					goto l249
				}
				position++
				if buffer[position] != rune('s') {
					goto l249
				}
				position++
				if buffer[position] != rune('t') {
					goto l249
				}
				position++
				if buffer[position] != rune('e') {
					goto l249
				}
				position++
				if buffer[position] != rune('r') {
					goto l249
				}
				position++
				if buffer[position] != rune('d') {
					goto l249
				}
				position++
				if buffer[position] != rune('a') {
					goto l249
				}
				position++
				if buffer[position] != rune('y') {
					goto l249
				}
				position++
				if !_rules[rule_]() {
					goto l249
				}
				add(ruleYESTERDAY, position250)
			}
			return true
		l249:
			position, tokenIndex = position249, tokenIndex249
			return false
		},
		/* 34 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position251, tokenIndex251 := position, tokenIndex
			{
				position252 := position
				if buffer[position] != rune('t') {
					goto l251
				}
				position++
				if buffer[position] != rune('o') {
					goto l251
				}
				position++
				if buffer[position] != rune('m') {
					goto l251
				}
				position++
				if buffer[position] != rune('o') {
					goto l251
				}
				position++
				if buffer[position] != rune('r') {
					goto l251
				}
				position++
				if buffer[position] != rune('r') {
					goto l251
				}
				position++
				if buffer[position] != rune('o') {
					goto l251
				}
				position++
				if buffer[position] != rune('w') {
					goto l251
				}
				position++
				if !_rules[rule_]() {
					goto l251
				}
				add(ruleTOMORROW, position252)
			}
			return true
		l251:
			position, tokenIndex = position251, tokenIndex251
			return false
		},
		/* 35 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				if buffer[position] != rune('t') {
					goto l253
				}
				position++
				if buffer[position] != rune('o') {
					goto l253
				}
				position++
				if buffer[position] != rune('d') {
					goto l253
				}
				position++
				if buffer[position] != rune('a') {
					goto l253
				}
				position++
				if buffer[position] != rune('y') {
					goto l253
				}
				position++
				if !_rules[rule_]() {
					goto l253
				}
				add(ruleTODAY, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 36 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position255, tokenIndex255 := position, tokenIndex
			{
				position256 := position
				if buffer[position] != rune('a') {
					goto l255
				}
				position++
				if buffer[position] != rune('g') {
					goto l255
				}
				position++
				if buffer[position] != rune('o') {
					goto l255
				}
				position++
				if !_rules[rule_]() {
					goto l255
				}
				add(ruleAGO, position256)
			}
			return true
		l255:
			position, tokenIndex = position255, tokenIndex255
			return false
		},
		/* 37 FROM_NOW <- <((('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w') / ('f' 'r' 'o' 'm' ' ' 't' 'o' 'd' 'a' 'y')) _)> */
		func() bool {
			position257, tokenIndex257 := position, tokenIndex
			{
				position258 := position
				{
					position259, tokenIndex259 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l260
					}
					position++
					if buffer[position] != rune('r') {
						goto l260
					}
					position++
					if buffer[position] != rune('o') {
						goto l260
					}
					position++
					if buffer[position] != rune('m') {
						goto l260
					}
					position++
					if buffer[position] != rune(' ') {
						goto l260
					}
					position++
					if buffer[position] != rune('n') {
						goto l260
					}
					position++
					if buffer[position] != rune('o') {
						goto l260
					}
					position++
					if buffer[position] != rune('w') {
						goto l260
					}
					position++
					goto l259
				l260:
					position, tokenIndex = position259, tokenIndex259
					if buffer[position] != rune('f') {
						goto l257
					}
					position++
					if buffer[position] != rune('r') {
						goto l257
					}
					position++
					if buffer[position] != rune('o') {
						goto l257
					}
					position++
					if buffer[position] != rune('m') {
						goto l257
					}
					position++
					if buffer[position] != rune(' ') {
						goto l257
					}
					position++
					if buffer[position] != rune('t') {
						goto l257
					}
					position++
					if buffer[position] != rune('o') {
						goto l257
					}
					position++
					if buffer[position] != rune('d') {
						goto l257
					}
					position++
					if buffer[position] != rune('a') {
						goto l257
					}
					position++
					if buffer[position] != rune('y') {
						goto l257
					}
					position++
				}
			l259:
				if !_rules[rule_]() {
					goto l257
				}
				add(ruleFROM_NOW, position258)
			}
			return true
		l257:
			position, tokenIndex = position257, tokenIndex257
			return false
		},
		/* 38 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position261, tokenIndex261 := position, tokenIndex
			{
				position262 := position
				if buffer[position] != rune('n') {
					goto l261
				}
				position++
				if buffer[position] != rune('o') {
					goto l261
				}
				position++
				if buffer[position] != rune('w') {
					goto l261
				}
				position++
				if !_rules[rule_]() {
					goto l261
				}
				add(ruleNOW, position262)
			}
			return true
		l261:
			position, tokenIndex = position261, tokenIndex261
			return false
		},
		/* 39 AM <- <('a' 'm' _)> */
		func() bool {
			position263, tokenIndex263 := position, tokenIndex
			{
				position264 := position
				if buffer[position] != rune('a') {
					goto l263
				}
				position++
				if buffer[position] != rune('m') {
					goto l263
				}
				position++
				if !_rules[rule_]() {
					goto l263
				}
				add(ruleAM, position264)
			}
			return true
		l263:
			position, tokenIndex = position263, tokenIndex263
			return false
		},
		/* 40 PM <- <('p' 'm' _)> */
		func() bool {
			position265, tokenIndex265 := position, tokenIndex
			{
				position266 := position
				if buffer[position] != rune('p') {
					goto l265
				}
				position++
				if buffer[position] != rune('m') {
					goto l265
				}
				position++
				if !_rules[rule_]() {
					goto l265
				}
				add(rulePM, position266)
			}
			return true
		l265:
			position, tokenIndex = position265, tokenIndex265
			return false
		},
		/* 41 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position267, tokenIndex267 := position, tokenIndex
			{
				position268 := position
				if buffer[position] != rune('n') {
					goto l267
				}
				position++
				if buffer[position] != rune('e') {
					goto l267
				}
				position++
				if buffer[position] != rune('x') {
					goto l267
				}
				position++
				if buffer[position] != rune('t') {
					goto l267
				}
				position++
				if !_rules[rule_]() {
					goto l267
				}
				add(ruleNEXT, position268)
			}
			return true
		l267:
			position, tokenIndex = position267, tokenIndex267
			return false
		},
		/* 42 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position269, tokenIndex269 := position, tokenIndex
			{
				position270 := position
				{
					position271, tokenIndex271 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l272
					}
					position++
					if buffer[position] != rune('n') {
						goto l272
					}
					position++
					if buffer[position] != rune(' ') {
						goto l272
					}
					position++
					if buffer[position] != rune('a') {
						goto l272
					}
					position++
					if buffer[position] != rune('n') {
						goto l272
					}
					position++
					goto l271
				l272:
					position, tokenIndex = position271, tokenIndex271
					if buffer[position] != rune('i') {
						goto l273
					}
					position++
					if buffer[position] != rune('n') {
						goto l273
					}
					position++
					if buffer[position] != rune(' ') {
						goto l273
					}
					position++
					if buffer[position] != rune('a') {
						goto l273
					}
					position++
					goto l271
				l273:
					position, tokenIndex = position271, tokenIndex271
					if buffer[position] != rune('i') {
						goto l269
					}
					position++
					if buffer[position] != rune('n') {
						goto l269
					}
					position++
				}
			l271:
				if !_rules[rule_]() {
					goto l269
				}
				add(ruleIN, position270)
			}
			return true
		l269:
			position, tokenIndex = position269, tokenIndex269
			return false
		},
		/* 43 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				{
					position276, tokenIndex276 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l277
					}
					position++
					if buffer[position] != rune('a') {
						goto l277
					}
					position++
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('t') {
						goto l277
					}
					position++
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('p') {
						goto l278
					}
					position++
					if buffer[position] != rune('a') {
						goto l278
					}
					position++
					if buffer[position] != rune('s') {
						goto l278
					}
					position++
					if buffer[position] != rune('t') {
						goto l278
					}
					position++
					goto l276
				l278:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('p') {
						goto l274
					}
					position++
					if buffer[position] != rune('r') {
						goto l274
					}
					position++
					if buffer[position] != rune('e') {
						goto l274
					}
					position++
					if buffer[position] != rune('v') {
						goto l274
					}
					position++
					if buffer[position] != rune('i') {
						goto l274
					}
					position++
					if buffer[position] != rune('o') {
						goto l274
					}
					position++
					if buffer[position] != rune('u') {
						goto l274
					}
					position++
					if buffer[position] != rune('s') {
						goto l274
					}
					position++
				}
			l276:
				if !_rules[rule_]() {
					goto l274
				}
				add(ruleLAST, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 44 AT <- <('a' 't' _)> */
		func() bool {
			position279, tokenIndex279 := position, tokenIndex
			{
				position280 := position
				if buffer[position] != rune('a') {
					goto l279
				}
				position++
				if buffer[position] != rune('t') {
					goto l279
				}
				position++
				if !_rules[rule_]() {
					goto l279
				}
				add(ruleAT, position280)
			}
			return true
		l279:
			position, tokenIndex = position279, tokenIndex279
			return false
		},
		/* 45 ON <- <('o' 'n' _)> */
		func() bool {
			position281, tokenIndex281 := position, tokenIndex
			{
				position282 := position
				if buffer[position] != rune('o') {
					goto l281
				}
				position++
				if buffer[position] != rune('n') {
					goto l281
				}
				position++
				if !_rules[rule_]() {
					goto l281
				}
				add(ruleON, position282)
			}
			return true
		l281:
			position, tokenIndex = position281, tokenIndex281
			return false
		},
		/* 46 _ <- <Whitespace*> */
		func() bool {
			{
				position284 := position
			l285:
				{
					position286, tokenIndex286 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l286
					}
					goto l285
				l286:
					position, tokenIndex = position286, tokenIndex286
				}
				add(rule_, position284)
			}
			return true
		},
		/* 47 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position287, tokenIndex287 := position, tokenIndex
			{
				position288 := position
				{
					position289, tokenIndex289 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l290
					}
					position++
					goto l289
				l290:
					position, tokenIndex = position289, tokenIndex289
					if buffer[position] != rune('\t') {
						goto l291
					}
					position++
					goto l289
				l291:
					position, tokenIndex = position289, tokenIndex289
					if !_rules[ruleEOL]() {
						goto l287
					}
				}
			l289:
				add(ruleWhitespace, position288)
			}
			return true
		l287:
			position, tokenIndex = position287, tokenIndex287
			return false
		},
		/* 48 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position292, tokenIndex292 := position, tokenIndex
			{
				position293 := position
				{
					position294, tokenIndex294 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l295
					}
					position++
					if buffer[position] != rune('\n') {
						goto l295
					}
					position++
					goto l294
				l295:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('\n') {
						goto l296
					}
					position++
					goto l294
				l296:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('\r') {
						goto l292
					}
					position++
				}
			l294:
				add(ruleEOL, position293)
			}
			return true
		l292:
			position, tokenIndex = position292, tokenIndex292
			return false
		},
		/* 49 EOF <- <!.> */
		func() bool {
			position297, tokenIndex297 := position, tokenIndex
			{
				position298 := position
				{
					position299, tokenIndex299 := position, tokenIndex
					if !matchDot() {
						goto l299
					}
					goto l297
				l299:
					position, tokenIndex = position299, tokenIndex299
				}
				add(ruleEOF, position298)
			}
			return true
		l297:
			position, tokenIndex = position297, tokenIndex297
			return false
		},
		/* 51 Action0 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 52 Action1 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 53 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 54 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 55 Action4 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 56 Action5 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 57 Action6 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 58 Action7 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 59 Action8 <- <{
		   p.t = p.t.Add(-time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 60 Action9 <- <{
		   p.t = p.t.Add(time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 61 Action10 <- <{
		   p.t = p.t.Add(-day * time.Duration(p.number))
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 62 Action11 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 63 Action12 <- <{
		   p.t = p.t.Add(-week * time.Duration(p.number))
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 64 Action13 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 65 Action14 <- <{
		   p.t = p.t.Add(week)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 66 Action15 <- <{
		   p.t = p.t.Add(-week)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 67 Action16 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 68 Action17 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 69 Action18 <- <{
		   p.t = prevMonth(p.t, p.month)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 70 Action19 <- <{
		   p.t = nextMonth(p.t, p.month)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 71 Action20 <- <{
		   p.t = p.t.AddDate(0, -1, 0)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 72 Action21 <- <{
		   p.t = p.t.AddDate(0, 1, 0)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 73 Action22 <- <{
		   p.t = truncateYear(p.t.AddDate(-p.number, 0, 0))
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 74 Action23 <- <{
		   p.t = truncateYear(p.t.AddDate(p.number, 0, 0))
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 75 Action24 <- <{
		   p.t = truncateYear(p.t.AddDate(-1, 0, 0))
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 76 Action25 <- <{
		   p.t = truncateYear(p.t.AddDate(1, 0, 0))
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 77 Action26 <- <{
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 78 Action27 <- <{
		   p.t = p.t.Add(-day)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 79 Action28 <- <{
		   p.t = p.t.Add(+day)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 80 Action29 <- <{
		   p.t = prevWeekday(p.t, p.weekday)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 81 Action30 <- <{
		   p.t = nextWeekday(p.t, p.weekday)
		   truncateDayIfNoTime(p)
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 82 Action31 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 83 Action32 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		   p.hasTime = true
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		/* 84 Action33 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		   p.hasTime = true
		 }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 85 Action34 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		   p.hasTime = true
		 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 86 Action35 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 87 Action36 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		nil,
		/* 89 Action37 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 90 Action38 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 91 Action39 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 92 Action40 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 93 Action41 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 94 Action42 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 95 Action43 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 96 Action44 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 97 Action45 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 98 Action46 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 99 Action47 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 100 Action48 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 101 Action49 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 102 Action50 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 103 Action51 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 104 Action52 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 105 Action53 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 106 Action54 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 107 Action55 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 108 Action56 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 109 Action57 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 110 Action58 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 111 Action59 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 112 Action60 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 113 Action61 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 114 Action62 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 115 Action63 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 116 Action64 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 117 Action65 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 118 Action66 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
		/* 119 Action67 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction67, position)
			}
			return true
		},
		/* 120 Action68 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction68, position)
			}
			return true
		},
		/* 121 Action69 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction69, position)
			}
			return true
		},
		/* 122 Action70 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction70, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
