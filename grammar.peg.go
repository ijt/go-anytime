package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	rulePreposition
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleMINUTES
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	rulePegText
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
	ruleAction67
	ruleAction68
	ruleAction69
	ruleAction70
	ruleAction71
	ruleAction72
	ruleAction73
	ruleAction74
	ruleAction75
	ruleAction76
	ruleAction77
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"Preposition",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"MINUTES",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"PegText",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
	"Action67",
	"Action68",
	"Action69",
	"Action70",
	"Action71",
	"Action72",
	"Action73",
	"Action74",
	"Action75",
	"Action76",
	"Action77",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [124]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction1:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))

		case ruleAction5:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction6:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction9:

			p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))

		case ruleAction10:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction11:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction12:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction13:

			p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))

		case ruleAction14:

			p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))

		case ruleAction15:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction16:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction17:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction18:

			p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))

		case ruleAction19:

			p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))

		case ruleAction20:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction21:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction22:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction23:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction24:

			p.t = prevMonth(p.t, p.month)

		case ruleAction25:

			p.t = nextMonth(p.t, p.month)

		case ruleAction26:

			if p.direction < 0 {
				p.t = prevMonth(p.t, p.month)
			} else {
				p.t = nextMonth(p.t, p.month)
			}

		case ruleAction27:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction28:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction29:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction30:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction31:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction32:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction33:

			p.t = truncateDay(p.t)

		case ruleAction34:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction35:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction36:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction37:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction38:

			if p.direction < 0 {
				p.t = truncateDay(prevWeekday(p.t, p.weekday))
			} else {
				p.t = truncateDay(nextWeekday(p.t, p.weekday))
			}

		case ruleAction39:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction40:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction41:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction42:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction43:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction44:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction45:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction46:
			p.number = 1
		case ruleAction47:
			p.number = 2
		case ruleAction48:
			p.number = 3
		case ruleAction49:
			p.number = 4
		case ruleAction50:
			p.number = 5
		case ruleAction51:
			p.number = 6
		case ruleAction52:
			p.number = 7
		case ruleAction53:
			p.number = 8
		case ruleAction54:
			p.number = 9
		case ruleAction55:
			p.number = 10
		case ruleAction56:
			p.weekday = time.Sunday
		case ruleAction57:
			p.weekday = time.Monday
		case ruleAction58:
			p.weekday = time.Tuesday
		case ruleAction59:
			p.weekday = time.Wednesday
		case ruleAction60:
			p.weekday = time.Thursday
		case ruleAction61:
			p.weekday = time.Friday
		case ruleAction62:
			p.weekday = time.Saturday
		case ruleAction63:
			p.month = time.January
		case ruleAction64:
			p.month = time.February
		case ruleAction65:
			p.month = time.March
		case ruleAction66:
			p.month = time.April
		case ruleAction67:
			p.month = time.May
		case ruleAction68:
			p.month = time.June
		case ruleAction69:
			p.month = time.July
		case ruleAction70:
			p.month = time.August
		case ruleAction71:
			p.month = time.September
		case ruleAction72:
			p.month = time.October
		case ruleAction73:
			p.month = time.November
		case ruleAction74:
			p.month = time.December
		case ruleAction75:
			p.number = 1
		case ruleAction76:
			p.number = 1
		case ruleAction77:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / Date / Time / Preposition)> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l11
					}
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l12
					}
					goto l6
				l12:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l13
					}
					goto l6
				l13:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l14
					}
					goto l6
				l14:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l15
					}
					goto l6
				l15:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l16
					}
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[rulePreposition]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action0) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action1) / (Last Number? MINUTES Action2) / (Next Number? MINUTES Action3) / (Number MINUTES Action4))> */
		func() bool {
			position17, tokenIndex17 := position, tokenIndex
			{
				position18 := position
				{
					position19, tokenIndex19 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l20
					}
					if !_rules[ruleMINUTES]() {
						goto l20
					}
					if !_rules[ruleAGO]() {
						goto l20
					}
					if !_rules[ruleAction0]() {
						goto l20
					}
					goto l19
				l20:
					position, tokenIndex = position19, tokenIndex19
					{
						position22, tokenIndex22 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l23
						}
						if !_rules[ruleMINUTES]() {
							goto l23
						}
						if !_rules[ruleFROM_NOW]() {
							goto l23
						}
						goto l22
					l23:
						position, tokenIndex = position22, tokenIndex22
						if !_rules[ruleIn]() {
							goto l21
						}
						{
							position24, tokenIndex24 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l24
							}
							goto l25
						l24:
							position, tokenIndex = position24, tokenIndex24
						}
					l25:
						if !_rules[ruleMINUTES]() {
							goto l21
						}
						{
							position26, tokenIndex26 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l26
							}
							goto l27
						l26:
							position, tokenIndex = position26, tokenIndex26
						}
					l27:
					}
				l22:
					if !_rules[ruleAction1]() {
						goto l21
					}
					goto l19
				l21:
					position, tokenIndex = position19, tokenIndex19
					if !_rules[ruleLast]() {
						goto l28
					}
					{
						position29, tokenIndex29 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l29
						}
						goto l30
					l29:
						position, tokenIndex = position29, tokenIndex29
					}
				l30:
					if !_rules[ruleMINUTES]() {
						goto l28
					}
					if !_rules[ruleAction2]() {
						goto l28
					}
					goto l19
				l28:
					position, tokenIndex = position19, tokenIndex19
					if !_rules[ruleNext]() {
						goto l31
					}
					{
						position32, tokenIndex32 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l32
						}
						goto l33
					l32:
						position, tokenIndex = position32, tokenIndex32
					}
				l33:
					if !_rules[ruleMINUTES]() {
						goto l31
					}
					if !_rules[ruleAction3]() {
						goto l31
					}
					goto l19
				l31:
					position, tokenIndex = position19, tokenIndex19
					if !_rules[ruleNumber]() {
						goto l17
					}
					if !_rules[ruleMINUTES]() {
						goto l17
					}
					if !_rules[ruleAction4]() {
						goto l17
					}
				}
			l19:
				add(ruleRelativeMinutes, position18)
			}
			return true
		l17:
			position, tokenIndex = position17, tokenIndex17
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action5) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action6) / (Last Number? HOURS Action7) / (Next Number? HOURS Action8) / (Number HOURS Action9))> */
		func() bool {
			position34, tokenIndex34 := position, tokenIndex
			{
				position35 := position
				{
					position36, tokenIndex36 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l37
					}
					if !_rules[ruleHOURS]() {
						goto l37
					}
					if !_rules[ruleAGO]() {
						goto l37
					}
					if !_rules[ruleAction5]() {
						goto l37
					}
					goto l36
				l37:
					position, tokenIndex = position36, tokenIndex36
					{
						position39, tokenIndex39 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l40
						}
						if !_rules[ruleHOURS]() {
							goto l40
						}
						if !_rules[ruleFROM_NOW]() {
							goto l40
						}
						goto l39
					l40:
						position, tokenIndex = position39, tokenIndex39
						if !_rules[ruleIn]() {
							goto l38
						}
						{
							position41, tokenIndex41 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l41
							}
							goto l42
						l41:
							position, tokenIndex = position41, tokenIndex41
						}
					l42:
						if !_rules[ruleHOURS]() {
							goto l38
						}
						{
							position43, tokenIndex43 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l43
							}
							goto l44
						l43:
							position, tokenIndex = position43, tokenIndex43
						}
					l44:
					}
				l39:
					if !_rules[ruleAction6]() {
						goto l38
					}
					goto l36
				l38:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleLast]() {
						goto l45
					}
					{
						position46, tokenIndex46 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l46
						}
						goto l47
					l46:
						position, tokenIndex = position46, tokenIndex46
					}
				l47:
					if !_rules[ruleHOURS]() {
						goto l45
					}
					if !_rules[ruleAction7]() {
						goto l45
					}
					goto l36
				l45:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleNext]() {
						goto l48
					}
					{
						position49, tokenIndex49 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l49
						}
						goto l50
					l49:
						position, tokenIndex = position49, tokenIndex49
					}
				l50:
					if !_rules[ruleHOURS]() {
						goto l48
					}
					if !_rules[ruleAction8]() {
						goto l48
					}
					goto l36
				l48:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleNumber]() {
						goto l34
					}
					if !_rules[ruleHOURS]() {
						goto l34
					}
					if !_rules[ruleAction9]() {
						goto l34
					}
				}
			l36:
				add(ruleRelativeHours, position35)
			}
			return true
		l34:
			position, tokenIndex = position34, tokenIndex34
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action10) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action11) / (Last Number? DAYS Action12) / (Next Number? DAYS Action13) / (Number DAYS Action14))> */
		func() bool {
			position51, tokenIndex51 := position, tokenIndex
			{
				position52 := position
				{
					position53, tokenIndex53 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l54
					}
					if !_rules[ruleDAYS]() {
						goto l54
					}
					if !_rules[ruleAGO]() {
						goto l54
					}
					if !_rules[ruleAction10]() {
						goto l54
					}
					goto l53
				l54:
					position, tokenIndex = position53, tokenIndex53
					{
						position56, tokenIndex56 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l57
						}
						if !_rules[ruleDAYS]() {
							goto l57
						}
						if !_rules[ruleFROM_NOW]() {
							goto l57
						}
						goto l56
					l57:
						position, tokenIndex = position56, tokenIndex56
						if !_rules[ruleIn]() {
							goto l55
						}
						{
							position58, tokenIndex58 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l58
							}
							goto l59
						l58:
							position, tokenIndex = position58, tokenIndex58
						}
					l59:
						if !_rules[ruleDAYS]() {
							goto l55
						}
						{
							position60, tokenIndex60 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l60
							}
							goto l61
						l60:
							position, tokenIndex = position60, tokenIndex60
						}
					l61:
					}
				l56:
					if !_rules[ruleAction11]() {
						goto l55
					}
					goto l53
				l55:
					position, tokenIndex = position53, tokenIndex53
					if !_rules[ruleLast]() {
						goto l62
					}
					{
						position63, tokenIndex63 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l63
						}
						goto l64
					l63:
						position, tokenIndex = position63, tokenIndex63
					}
				l64:
					if !_rules[ruleDAYS]() {
						goto l62
					}
					if !_rules[ruleAction12]() {
						goto l62
					}
					goto l53
				l62:
					position, tokenIndex = position53, tokenIndex53
					if !_rules[ruleNext]() {
						goto l65
					}
					{
						position66, tokenIndex66 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l66
						}
						goto l67
					l66:
						position, tokenIndex = position66, tokenIndex66
					}
				l67:
					if !_rules[ruleDAYS]() {
						goto l65
					}
					if !_rules[ruleAction13]() {
						goto l65
					}
					goto l53
				l65:
					position, tokenIndex = position53, tokenIndex53
					if !_rules[ruleNumber]() {
						goto l51
					}
					if !_rules[ruleDAYS]() {
						goto l51
					}
					if !_rules[ruleAction14]() {
						goto l51
					}
				}
			l53:
				add(ruleRelativeDays, position52)
			}
			return true
		l51:
			position, tokenIndex = position51, tokenIndex51
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action15) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action16) / (Last Number? WEEKS Action17) / (Next Number? WEEKS Action18) / (Number WEEKS Action19))> */
		func() bool {
			position68, tokenIndex68 := position, tokenIndex
			{
				position69 := position
				{
					position70, tokenIndex70 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l71
					}
					if !_rules[ruleWEEKS]() {
						goto l71
					}
					if !_rules[ruleAGO]() {
						goto l71
					}
					if !_rules[ruleAction15]() {
						goto l71
					}
					goto l70
				l71:
					position, tokenIndex = position70, tokenIndex70
					{
						position73, tokenIndex73 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l74
						}
						if !_rules[ruleWEEKS]() {
							goto l74
						}
						if !_rules[ruleFROM_NOW]() {
							goto l74
						}
						goto l73
					l74:
						position, tokenIndex = position73, tokenIndex73
						if !_rules[ruleIn]() {
							goto l72
						}
						{
							position75, tokenIndex75 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l75
							}
							goto l76
						l75:
							position, tokenIndex = position75, tokenIndex75
						}
					l76:
						if !_rules[ruleWEEKS]() {
							goto l72
						}
						{
							position77, tokenIndex77 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l77
							}
							goto l78
						l77:
							position, tokenIndex = position77, tokenIndex77
						}
					l78:
					}
				l73:
					if !_rules[ruleAction16]() {
						goto l72
					}
					goto l70
				l72:
					position, tokenIndex = position70, tokenIndex70
					if !_rules[ruleLast]() {
						goto l79
					}
					{
						position80, tokenIndex80 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l80
						}
						goto l81
					l80:
						position, tokenIndex = position80, tokenIndex80
					}
				l81:
					if !_rules[ruleWEEKS]() {
						goto l79
					}
					if !_rules[ruleAction17]() {
						goto l79
					}
					goto l70
				l79:
					position, tokenIndex = position70, tokenIndex70
					if !_rules[ruleNext]() {
						goto l82
					}
					{
						position83, tokenIndex83 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l83
						}
						goto l84
					l83:
						position, tokenIndex = position83, tokenIndex83
					}
				l84:
					if !_rules[ruleWEEKS]() {
						goto l82
					}
					if !_rules[ruleAction18]() {
						goto l82
					}
					goto l70
				l82:
					position, tokenIndex = position70, tokenIndex70
					if !_rules[ruleNumber]() {
						goto l68
					}
					if !_rules[ruleWEEKS]() {
						goto l68
					}
					if !_rules[ruleAction19]() {
						goto l68
					}
				}
			l70:
				add(ruleRelativeWeeks, position69)
			}
			return true
		l68:
			position, tokenIndex = position68, tokenIndex68
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action20) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action21) / (Last Number? MONTHS Action22) / (Next Number? MONTHS Action23) / (LAST Month Action24) / (NEXT Month Action25) / (Month Action26))> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l88
					}
					if !_rules[ruleMONTHS]() {
						goto l88
					}
					if !_rules[ruleAGO]() {
						goto l88
					}
					if !_rules[ruleAction20]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					{
						position90, tokenIndex90 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l91
						}
						if !_rules[ruleMONTHS]() {
							goto l91
						}
						if !_rules[ruleFROM_NOW]() {
							goto l91
						}
						goto l90
					l91:
						position, tokenIndex = position90, tokenIndex90
						if !_rules[ruleIn]() {
							goto l89
						}
						{
							position92, tokenIndex92 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l92
							}
							goto l93
						l92:
							position, tokenIndex = position92, tokenIndex92
						}
					l93:
						if !_rules[ruleMONTHS]() {
							goto l89
						}
						{
							position94, tokenIndex94 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l94
							}
							goto l95
						l94:
							position, tokenIndex = position94, tokenIndex94
						}
					l95:
					}
				l90:
					if !_rules[ruleAction21]() {
						goto l89
					}
					goto l87
				l89:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleLast]() {
						goto l96
					}
					{
						position97, tokenIndex97 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l97
						}
						goto l98
					l97:
						position, tokenIndex = position97, tokenIndex97
					}
				l98:
					if !_rules[ruleMONTHS]() {
						goto l96
					}
					if !_rules[ruleAction22]() {
						goto l96
					}
					goto l87
				l96:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleNext]() {
						goto l99
					}
					{
						position100, tokenIndex100 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l100
						}
						goto l101
					l100:
						position, tokenIndex = position100, tokenIndex100
					}
				l101:
					if !_rules[ruleMONTHS]() {
						goto l99
					}
					if !_rules[ruleAction23]() {
						goto l99
					}
					goto l87
				l99:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleLAST]() {
						goto l102
					}
					if !_rules[ruleMonth]() {
						goto l102
					}
					if !_rules[ruleAction24]() {
						goto l102
					}
					goto l87
				l102:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleNEXT]() {
						goto l103
					}
					if !_rules[ruleMonth]() {
						goto l103
					}
					if !_rules[ruleAction25]() {
						goto l103
					}
					goto l87
				l103:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleMonth]() {
						goto l85
					}
					if !_rules[ruleAction26]() {
						goto l85
					}
				}
			l87:
				add(ruleRelativeMonth, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action27) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action28) / (Last Number? YEARS Action29) / (Next Number? YEARS Action30) / (LAST YEARS Action31) / (NEXT YEARS Action32))> */
		func() bool {
			position104, tokenIndex104 := position, tokenIndex
			{
				position105 := position
				{
					position106, tokenIndex106 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l107
					}
					if !_rules[ruleYEARS]() {
						goto l107
					}
					if !_rules[ruleAGO]() {
						goto l107
					}
					if !_rules[ruleAction27]() {
						goto l107
					}
					goto l106
				l107:
					position, tokenIndex = position106, tokenIndex106
					{
						position109, tokenIndex109 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l110
						}
						if !_rules[ruleYEARS]() {
							goto l110
						}
						if !_rules[ruleFROM_NOW]() {
							goto l110
						}
						goto l109
					l110:
						position, tokenIndex = position109, tokenIndex109
						if !_rules[ruleIn]() {
							goto l108
						}
						{
							position111, tokenIndex111 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l111
							}
							goto l112
						l111:
							position, tokenIndex = position111, tokenIndex111
						}
					l112:
						if !_rules[ruleYEARS]() {
							goto l108
						}
						{
							position113, tokenIndex113 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l113
							}
							goto l114
						l113:
							position, tokenIndex = position113, tokenIndex113
						}
					l114:
					}
				l109:
					if !_rules[ruleAction28]() {
						goto l108
					}
					goto l106
				l108:
					position, tokenIndex = position106, tokenIndex106
					if !_rules[ruleLast]() {
						goto l115
					}
					{
						position116, tokenIndex116 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l116
						}
						goto l117
					l116:
						position, tokenIndex = position116, tokenIndex116
					}
				l117:
					if !_rules[ruleYEARS]() {
						goto l115
					}
					if !_rules[ruleAction29]() {
						goto l115
					}
					goto l106
				l115:
					position, tokenIndex = position106, tokenIndex106
					if !_rules[ruleNext]() {
						goto l118
					}
					{
						position119, tokenIndex119 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l119
						}
						goto l120
					l119:
						position, tokenIndex = position119, tokenIndex119
					}
				l120:
					if !_rules[ruleYEARS]() {
						goto l118
					}
					if !_rules[ruleAction30]() {
						goto l118
					}
					goto l106
				l118:
					position, tokenIndex = position106, tokenIndex106
					if !_rules[ruleLAST]() {
						goto l121
					}
					if !_rules[ruleYEARS]() {
						goto l121
					}
					if !_rules[ruleAction31]() {
						goto l121
					}
					goto l106
				l121:
					position, tokenIndex = position106, tokenIndex106
					if !_rules[ruleNEXT]() {
						goto l104
					}
					if !_rules[ruleYEARS]() {
						goto l104
					}
					if !_rules[ruleAction32]() {
						goto l104
					}
				}
			l106:
				add(ruleRelativeYear, position105)
			}
			return true
		l104:
			position, tokenIndex = position104, tokenIndex104
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action33) / (YESTERDAY Action34) / (TOMORROW Action35) / (LAST Weekday Action36) / (NEXT Weekday Action37) / (Weekday Action38))> */
		func() bool {
			position122, tokenIndex122 := position, tokenIndex
			{
				position123 := position
				{
					position124, tokenIndex124 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l125
					}
					if !_rules[ruleAction33]() {
						goto l125
					}
					goto l124
				l125:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleYESTERDAY]() {
						goto l126
					}
					if !_rules[ruleAction34]() {
						goto l126
					}
					goto l124
				l126:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleTOMORROW]() {
						goto l127
					}
					if !_rules[ruleAction35]() {
						goto l127
					}
					goto l124
				l127:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleLAST]() {
						goto l128
					}
					if !_rules[ruleWeekday]() {
						goto l128
					}
					if !_rules[ruleAction36]() {
						goto l128
					}
					goto l124
				l128:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleNEXT]() {
						goto l129
					}
					if !_rules[ruleWeekday]() {
						goto l129
					}
					if !_rules[ruleAction37]() {
						goto l129
					}
					goto l124
				l129:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleWeekday]() {
						goto l122
					}
					if !_rules[ruleAction38]() {
						goto l122
					}
				}
			l124:
				add(ruleRelativeWeekdays, position123)
			}
			return true
		l122:
			position, tokenIndex = position122, tokenIndex122
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action39)> */
		func() bool {
			position130, tokenIndex130 := position, tokenIndex
			{
				position131 := position
				{
					position132, tokenIndex132 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l133
					}
					if !_rules[ruleOrdinal]() {
						goto l133
					}
					goto l132
				l133:
					position, tokenIndex = position132, tokenIndex132
					if !_rules[ruleLast]() {
						goto l130
					}
					{
						position134, tokenIndex134 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l134
						}
						goto l135
					l134:
						position, tokenIndex = position134, tokenIndex134
					}
				l135:
					if !_rules[ruleNumber]() {
						goto l130
					}
				}
			l132:
				if !_rules[ruleAction39]() {
					goto l130
				}
				add(ruleDate, position131)
			}
			return true
		l130:
			position, tokenIndex = position130, tokenIndex130
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position136, tokenIndex136 := position, tokenIndex
			{
				position137 := position
				{
					position138, tokenIndex138 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l139
					}
					goto l138
				l139:
					position, tokenIndex = position138, tokenIndex138
					if !_rules[ruleClock24Hour]() {
						goto l136
					}
				}
			l138:
				add(ruleTime, position137)
			}
			return true
		l136:
			position, tokenIndex = position136, tokenIndex136
			return false
		},
		/* 11 Clock12Hour <- <((Number Action40 (Minutes Seconds?)? AM) / (Number Action41 (Minutes Seconds?)? PM))> */
		func() bool {
			position140, tokenIndex140 := position, tokenIndex
			{
				position141 := position
				{
					position142, tokenIndex142 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l143
					}
					if !_rules[ruleAction40]() {
						goto l143
					}
					{
						position144, tokenIndex144 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l144
						}
						{
							position146, tokenIndex146 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l146
							}
							goto l147
						l146:
							position, tokenIndex = position146, tokenIndex146
						}
					l147:
						goto l145
					l144:
						position, tokenIndex = position144, tokenIndex144
					}
				l145:
					if !_rules[ruleAM]() {
						goto l143
					}
					goto l142
				l143:
					position, tokenIndex = position142, tokenIndex142
					if !_rules[ruleNumber]() {
						goto l140
					}
					if !_rules[ruleAction41]() {
						goto l140
					}
					{
						position148, tokenIndex148 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l148
						}
						{
							position150, tokenIndex150 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l150
							}
							goto l151
						l150:
							position, tokenIndex = position150, tokenIndex150
						}
					l151:
						goto l149
					l148:
						position, tokenIndex = position148, tokenIndex148
					}
				l149:
					if !_rules[rulePM]() {
						goto l140
					}
				}
			l142:
				add(ruleClock12Hour, position141)
			}
			return true
		l140:
			position, tokenIndex = position140, tokenIndex140
			return false
		},
		/* 12 Clock24Hour <- <(Number Action42 (Minutes Seconds?)?)> */
		func() bool {
			position152, tokenIndex152 := position, tokenIndex
			{
				position153 := position
				if !_rules[ruleNumber]() {
					goto l152
				}
				if !_rules[ruleAction42]() {
					goto l152
				}
				{
					position154, tokenIndex154 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l154
					}
					{
						position156, tokenIndex156 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l156
						}
						goto l157
					l156:
						position, tokenIndex = position156, tokenIndex156
					}
				l157:
					goto l155
				l154:
					position, tokenIndex = position154, tokenIndex154
				}
			l155:
				add(ruleClock24Hour, position153)
			}
			return true
		l152:
			position, tokenIndex = position152, tokenIndex152
			return false
		},
		/* 13 Minutes <- <(':' Number Action43)> */
		func() bool {
			position158, tokenIndex158 := position, tokenIndex
			{
				position159 := position
				if buffer[position] != rune(':') {
					goto l158
				}
				position++
				if !_rules[ruleNumber]() {
					goto l158
				}
				if !_rules[ruleAction43]() {
					goto l158
				}
				add(ruleMinutes, position159)
			}
			return true
		l158:
			position, tokenIndex = position158, tokenIndex158
			return false
		},
		/* 14 Seconds <- <(':' Number Action44)> */
		func() bool {
			position160, tokenIndex160 := position, tokenIndex
			{
				position161 := position
				if buffer[position] != rune(':') {
					goto l160
				}
				position++
				if !_rules[ruleNumber]() {
					goto l160
				}
				if !_rules[ruleAction44]() {
					goto l160
				}
				add(ruleSeconds, position161)
			}
			return true
		l160:
			position, tokenIndex = position160, tokenIndex160
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action45) / ('o' 'n' 'e' _ Action46) / ('t' 'w' 'o' _ Action47) / ('t' 'h' 'r' 'e' 'e' _ Action48) / ('f' 'o' 'u' 'r' _ Action49) / ('f' 'i' 'v' 'e' _ Action50) / ('s' 'i' 'x' _ Action51) / ('s' 'e' 'v' 'e' 'n' _ Action52) / ('e' 'i' 'g' 'h' 't' _ Action53) / ('n' 'i' 'n' 'e' _ Action54) / ('t' 'e' 'n' _ Action55))> */
		func() bool {
			position162, tokenIndex162 := position, tokenIndex
			{
				position163 := position
				{
					position164, tokenIndex164 := position, tokenIndex
					{
						position166 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l165
						}
						position++
					l167:
						{
							position168, tokenIndex168 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l168
							}
							position++
							goto l167
						l168:
							position, tokenIndex = position168, tokenIndex168
						}
						add(rulePegText, position166)
					}
					if !_rules[rule_]() {
						goto l165
					}
					if !_rules[ruleAction45]() {
						goto l165
					}
					goto l164
				l165:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('o') {
						goto l169
					}
					position++
					if buffer[position] != rune('n') {
						goto l169
					}
					position++
					if buffer[position] != rune('e') {
						goto l169
					}
					position++
					if !_rules[rule_]() {
						goto l169
					}
					if !_rules[ruleAction46]() {
						goto l169
					}
					goto l164
				l169:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('t') {
						goto l170
					}
					position++
					if buffer[position] != rune('w') {
						goto l170
					}
					position++
					if buffer[position] != rune('o') {
						goto l170
					}
					position++
					if !_rules[rule_]() {
						goto l170
					}
					if !_rules[ruleAction47]() {
						goto l170
					}
					goto l164
				l170:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('t') {
						goto l171
					}
					position++
					if buffer[position] != rune('h') {
						goto l171
					}
					position++
					if buffer[position] != rune('r') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction48]() {
						goto l171
					}
					goto l164
				l171:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('f') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('u') {
						goto l172
					}
					position++
					if buffer[position] != rune('r') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction49]() {
						goto l172
					}
					goto l164
				l172:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('f') {
						goto l173
					}
					position++
					if buffer[position] != rune('i') {
						goto l173
					}
					position++
					if buffer[position] != rune('v') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction50]() {
						goto l173
					}
					goto l164
				l173:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('s') {
						goto l174
					}
					position++
					if buffer[position] != rune('i') {
						goto l174
					}
					position++
					if buffer[position] != rune('x') {
						goto l174
					}
					position++
					if !_rules[rule_]() {
						goto l174
					}
					if !_rules[ruleAction51]() {
						goto l174
					}
					goto l164
				l174:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('s') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('v') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('n') {
						goto l175
					}
					position++
					if !_rules[rule_]() {
						goto l175
					}
					if !_rules[ruleAction52]() {
						goto l175
					}
					goto l164
				l175:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('i') {
						goto l176
					}
					position++
					if buffer[position] != rune('g') {
						goto l176
					}
					position++
					if buffer[position] != rune('h') {
						goto l176
					}
					position++
					if buffer[position] != rune('t') {
						goto l176
					}
					position++
					if !_rules[rule_]() {
						goto l176
					}
					if !_rules[ruleAction53]() {
						goto l176
					}
					goto l164
				l176:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if buffer[position] != rune('i') {
						goto l177
					}
					position++
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if buffer[position] != rune('e') {
						goto l177
					}
					position++
					if !_rules[rule_]() {
						goto l177
					}
					if !_rules[ruleAction54]() {
						goto l177
					}
					goto l164
				l177:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('t') {
						goto l162
					}
					position++
					if buffer[position] != rune('e') {
						goto l162
					}
					position++
					if buffer[position] != rune('n') {
						goto l162
					}
					position++
					if !_rules[rule_]() {
						goto l162
					}
					if !_rules[ruleAction55]() {
						goto l162
					}
				}
			l164:
				add(ruleNumber, position163)
			}
			return true
		l162:
			position, tokenIndex = position162, tokenIndex162
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action56) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action57) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action58) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action59) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action60) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action61) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action62))> */
		func() bool {
			position178, tokenIndex178 := position, tokenIndex
			{
				position179 := position
				{
					position180, tokenIndex180 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l181
					}
					position++
					if buffer[position] != rune('u') {
						goto l181
					}
					position++
					if buffer[position] != rune('n') {
						goto l181
					}
					position++
					if buffer[position] != rune('d') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('y') {
						goto l181
					}
					position++
					if !_rules[rule_]() {
						goto l181
					}
					if !_rules[ruleAction56]() {
						goto l181
					}
					goto l180
				l181:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('m') {
						goto l182
					}
					position++
					if buffer[position] != rune('o') {
						goto l182
					}
					position++
					if buffer[position] != rune('n') {
						goto l182
					}
					position++
					if buffer[position] != rune('d') {
						goto l182
					}
					position++
					if buffer[position] != rune('a') {
						goto l182
					}
					position++
					if buffer[position] != rune('y') {
						goto l182
					}
					position++
					if !_rules[rule_]() {
						goto l182
					}
					if !_rules[ruleAction57]() {
						goto l182
					}
					goto l180
				l182:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('t') {
						goto l183
					}
					position++
					if buffer[position] != rune('u') {
						goto l183
					}
					position++
					if buffer[position] != rune('e') {
						goto l183
					}
					position++
					if buffer[position] != rune('s') {
						goto l183
					}
					position++
					if buffer[position] != rune('d') {
						goto l183
					}
					position++
					if buffer[position] != rune('a') {
						goto l183
					}
					position++
					if buffer[position] != rune('y') {
						goto l183
					}
					position++
					if !_rules[rule_]() {
						goto l183
					}
					if !_rules[ruleAction58]() {
						goto l183
					}
					goto l180
				l183:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('w') {
						goto l184
					}
					position++
					if buffer[position] != rune('e') {
						goto l184
					}
					position++
					if buffer[position] != rune('d') {
						goto l184
					}
					position++
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('e') {
						goto l184
					}
					position++
					if buffer[position] != rune('s') {
						goto l184
					}
					position++
					if buffer[position] != rune('d') {
						goto l184
					}
					position++
					if buffer[position] != rune('a') {
						goto l184
					}
					position++
					if buffer[position] != rune('y') {
						goto l184
					}
					position++
					if !_rules[rule_]() {
						goto l184
					}
					if !_rules[ruleAction59]() {
						goto l184
					}
					goto l180
				l184:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('h') {
						goto l185
					}
					position++
					if buffer[position] != rune('u') {
						goto l185
					}
					position++
					if buffer[position] != rune('r') {
						goto l185
					}
					position++
					if buffer[position] != rune('s') {
						goto l185
					}
					position++
					if buffer[position] != rune('d') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('y') {
						goto l185
					}
					position++
					if !_rules[rule_]() {
						goto l185
					}
					if !_rules[ruleAction60]() {
						goto l185
					}
					goto l180
				l185:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('f') {
						goto l186
					}
					position++
					if buffer[position] != rune('r') {
						goto l186
					}
					position++
					if buffer[position] != rune('i') {
						goto l186
					}
					position++
					if buffer[position] != rune('d') {
						goto l186
					}
					position++
					if buffer[position] != rune('a') {
						goto l186
					}
					position++
					if buffer[position] != rune('y') {
						goto l186
					}
					position++
					if !_rules[rule_]() {
						goto l186
					}
					if !_rules[ruleAction61]() {
						goto l186
					}
					goto l180
				l186:
					position, tokenIndex = position180, tokenIndex180
					if buffer[position] != rune('s') {
						goto l178
					}
					position++
					if buffer[position] != rune('a') {
						goto l178
					}
					position++
					if buffer[position] != rune('t') {
						goto l178
					}
					position++
					if buffer[position] != rune('u') {
						goto l178
					}
					position++
					if buffer[position] != rune('r') {
						goto l178
					}
					position++
					if buffer[position] != rune('d') {
						goto l178
					}
					position++
					if buffer[position] != rune('a') {
						goto l178
					}
					position++
					if buffer[position] != rune('y') {
						goto l178
					}
					position++
					if !_rules[rule_]() {
						goto l178
					}
					if !_rules[ruleAction62]() {
						goto l178
					}
				}
			l180:
				add(ruleWeekday, position179)
			}
			return true
		l178:
			position, tokenIndex = position178, tokenIndex178
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action63) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action64) / ('m' 'a' 'r' 'c' 'h' _ Action65) / ('a' 'p' 'r' 'i' 'l' _ Action66) / ('m' 'a' 'y' _ Action67) / ('j' 'u' 'n' 'e' _ Action68) / ('j' 'u' 'l' 'y' _ Action69) / ('a' 'u' 'g' 'u' 's' 't' _ Action70) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action71) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action72) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action73) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action74))> */
		func() bool {
			position187, tokenIndex187 := position, tokenIndex
			{
				position188 := position
				{
					position189, tokenIndex189 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l190
					}
					position++
					if buffer[position] != rune('a') {
						goto l190
					}
					position++
					if buffer[position] != rune('n') {
						goto l190
					}
					position++
					if buffer[position] != rune('u') {
						goto l190
					}
					position++
					if buffer[position] != rune('a') {
						goto l190
					}
					position++
					if buffer[position] != rune('r') {
						goto l190
					}
					position++
					if buffer[position] != rune('y') {
						goto l190
					}
					position++
					if !_rules[rule_]() {
						goto l190
					}
					if !_rules[ruleAction63]() {
						goto l190
					}
					goto l189
				l190:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('f') {
						goto l191
					}
					position++
					if buffer[position] != rune('e') {
						goto l191
					}
					position++
					if buffer[position] != rune('b') {
						goto l191
					}
					position++
					if buffer[position] != rune('r') {
						goto l191
					}
					position++
					if buffer[position] != rune('u') {
						goto l191
					}
					position++
					if buffer[position] != rune('a') {
						goto l191
					}
					position++
					if buffer[position] != rune('r') {
						goto l191
					}
					position++
					if buffer[position] != rune('y') {
						goto l191
					}
					position++
					if !_rules[rule_]() {
						goto l191
					}
					if !_rules[ruleAction64]() {
						goto l191
					}
					goto l189
				l191:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('m') {
						goto l192
					}
					position++
					if buffer[position] != rune('a') {
						goto l192
					}
					position++
					if buffer[position] != rune('r') {
						goto l192
					}
					position++
					if buffer[position] != rune('c') {
						goto l192
					}
					position++
					if buffer[position] != rune('h') {
						goto l192
					}
					position++
					if !_rules[rule_]() {
						goto l192
					}
					if !_rules[ruleAction65]() {
						goto l192
					}
					goto l189
				l192:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('a') {
						goto l193
					}
					position++
					if buffer[position] != rune('p') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('i') {
						goto l193
					}
					position++
					if buffer[position] != rune('l') {
						goto l193
					}
					position++
					if !_rules[rule_]() {
						goto l193
					}
					if !_rules[ruleAction66]() {
						goto l193
					}
					goto l189
				l193:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('m') {
						goto l194
					}
					position++
					if buffer[position] != rune('a') {
						goto l194
					}
					position++
					if buffer[position] != rune('y') {
						goto l194
					}
					position++
					if !_rules[rule_]() {
						goto l194
					}
					if !_rules[ruleAction67]() {
						goto l194
					}
					goto l189
				l194:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('j') {
						goto l195
					}
					position++
					if buffer[position] != rune('u') {
						goto l195
					}
					position++
					if buffer[position] != rune('n') {
						goto l195
					}
					position++
					if buffer[position] != rune('e') {
						goto l195
					}
					position++
					if !_rules[rule_]() {
						goto l195
					}
					if !_rules[ruleAction68]() {
						goto l195
					}
					goto l189
				l195:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('j') {
						goto l196
					}
					position++
					if buffer[position] != rune('u') {
						goto l196
					}
					position++
					if buffer[position] != rune('l') {
						goto l196
					}
					position++
					if buffer[position] != rune('y') {
						goto l196
					}
					position++
					if !_rules[rule_]() {
						goto l196
					}
					if !_rules[ruleAction69]() {
						goto l196
					}
					goto l189
				l196:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('a') {
						goto l197
					}
					position++
					if buffer[position] != rune('u') {
						goto l197
					}
					position++
					if buffer[position] != rune('g') {
						goto l197
					}
					position++
					if buffer[position] != rune('u') {
						goto l197
					}
					position++
					if buffer[position] != rune('s') {
						goto l197
					}
					position++
					if buffer[position] != rune('t') {
						goto l197
					}
					position++
					if !_rules[rule_]() {
						goto l197
					}
					if !_rules[ruleAction70]() {
						goto l197
					}
					goto l189
				l197:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('s') {
						goto l198
					}
					position++
					if buffer[position] != rune('e') {
						goto l198
					}
					position++
					if buffer[position] != rune('p') {
						goto l198
					}
					position++
					if buffer[position] != rune('t') {
						goto l198
					}
					position++
					if buffer[position] != rune('e') {
						goto l198
					}
					position++
					if buffer[position] != rune('m') {
						goto l198
					}
					position++
					if buffer[position] != rune('b') {
						goto l198
					}
					position++
					if buffer[position] != rune('e') {
						goto l198
					}
					position++
					if buffer[position] != rune('r') {
						goto l198
					}
					position++
					if !_rules[rule_]() {
						goto l198
					}
					if !_rules[ruleAction71]() {
						goto l198
					}
					goto l189
				l198:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('o') {
						goto l199
					}
					position++
					if buffer[position] != rune('c') {
						goto l199
					}
					position++
					if buffer[position] != rune('t') {
						goto l199
					}
					position++
					if buffer[position] != rune('o') {
						goto l199
					}
					position++
					if buffer[position] != rune('b') {
						goto l199
					}
					position++
					if buffer[position] != rune('e') {
						goto l199
					}
					position++
					if buffer[position] != rune('r') {
						goto l199
					}
					position++
					if !_rules[rule_]() {
						goto l199
					}
					if !_rules[ruleAction72]() {
						goto l199
					}
					goto l189
				l199:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('n') {
						goto l200
					}
					position++
					if buffer[position] != rune('o') {
						goto l200
					}
					position++
					if buffer[position] != rune('v') {
						goto l200
					}
					position++
					if buffer[position] != rune('e') {
						goto l200
					}
					position++
					if buffer[position] != rune('m') {
						goto l200
					}
					position++
					if buffer[position] != rune('b') {
						goto l200
					}
					position++
					if buffer[position] != rune('e') {
						goto l200
					}
					position++
					if buffer[position] != rune('r') {
						goto l200
					}
					position++
					if !_rules[rule_]() {
						goto l200
					}
					if !_rules[ruleAction73]() {
						goto l200
					}
					goto l189
				l200:
					position, tokenIndex = position189, tokenIndex189
					if buffer[position] != rune('d') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('c') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('m') {
						goto l187
					}
					position++
					if buffer[position] != rune('b') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('r') {
						goto l187
					}
					position++
					if !_rules[rule_]() {
						goto l187
					}
					if !_rules[ruleAction74]() {
						goto l187
					}
				}
			l189:
				add(ruleMonth, position188)
			}
			return true
		l187:
			position, tokenIndex = position187, tokenIndex187
			return false
		},
		/* 18 In <- <(IN Action75)> */
		func() bool {
			position201, tokenIndex201 := position, tokenIndex
			{
				position202 := position
				if !_rules[ruleIN]() {
					goto l201
				}
				if !_rules[ruleAction75]() {
					goto l201
				}
				add(ruleIn, position202)
			}
			return true
		l201:
			position, tokenIndex = position201, tokenIndex201
			return false
		},
		/* 19 Last <- <(LAST Action76)> */
		func() bool {
			position203, tokenIndex203 := position, tokenIndex
			{
				position204 := position
				if !_rules[ruleLAST]() {
					goto l203
				}
				if !_rules[ruleAction76]() {
					goto l203
				}
				add(ruleLast, position204)
			}
			return true
		l203:
			position, tokenIndex = position203, tokenIndex203
			return false
		},
		/* 20 Next <- <(NEXT Action77)> */
		func() bool {
			position205, tokenIndex205 := position, tokenIndex
			{
				position206 := position
				if !_rules[ruleNEXT]() {
					goto l205
				}
				if !_rules[ruleAction77]() {
					goto l205
				}
				add(ruleNext, position206)
			}
			return true
		l205:
			position, tokenIndex = position205, tokenIndex205
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position207, tokenIndex207 := position, tokenIndex
			{
				position208 := position
				{
					position209, tokenIndex209 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l210
					}
					position++
					if buffer[position] != rune('t') {
						goto l210
					}
					position++
					goto l209
				l210:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l211
					}
					position++
					if buffer[position] != rune('d') {
						goto l211
					}
					position++
					goto l209
				l211:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('r') {
						goto l212
					}
					position++
					if buffer[position] != rune('d') {
						goto l212
					}
					position++
					goto l209
				l212:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('t') {
						goto l207
					}
					position++
					if buffer[position] != rune('h') {
						goto l207
					}
					position++
				}
			l209:
				if !_rules[rule_]() {
					goto l207
				}
				add(ruleOrdinal, position208)
			}
			return true
		l207:
			position, tokenIndex = position207, tokenIndex207
			return false
		},
		/* 22 Preposition <- <((('a' 't') / ('o' 'n') / ('o' 'f')) _)> */
		func() bool {
			position213, tokenIndex213 := position, tokenIndex
			{
				position214 := position
				{
					position215, tokenIndex215 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('t') {
						goto l216
					}
					position++
					goto l215
				l216:
					position, tokenIndex = position215, tokenIndex215
					if buffer[position] != rune('o') {
						goto l217
					}
					position++
					if buffer[position] != rune('n') {
						goto l217
					}
					position++
					goto l215
				l217:
					position, tokenIndex = position215, tokenIndex215
					if buffer[position] != rune('o') {
						goto l213
					}
					position++
					if buffer[position] != rune('f') {
						goto l213
					}
					position++
				}
			l215:
				if !_rules[rule_]() {
					goto l213
				}
				add(rulePreposition, position214)
			}
			return true
		l213:
			position, tokenIndex = position213, tokenIndex213
			return false
		},
		/* 23 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position218, tokenIndex218 := position, tokenIndex
			{
				position219 := position
				if buffer[position] != rune('y') {
					goto l218
				}
				position++
				if buffer[position] != rune('e') {
					goto l218
				}
				position++
				if buffer[position] != rune('a') {
					goto l218
				}
				position++
				if buffer[position] != rune('r') {
					goto l218
				}
				position++
				{
					position220, tokenIndex220 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l220
					}
					position++
					goto l221
				l220:
					position, tokenIndex = position220, tokenIndex220
				}
			l221:
				if !_rules[rule_]() {
					goto l218
				}
				add(ruleYEARS, position219)
			}
			return true
		l218:
			position, tokenIndex = position218, tokenIndex218
			return false
		},
		/* 24 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position222, tokenIndex222 := position, tokenIndex
			{
				position223 := position
				if buffer[position] != rune('m') {
					goto l222
				}
				position++
				if buffer[position] != rune('o') {
					goto l222
				}
				position++
				if buffer[position] != rune('n') {
					goto l222
				}
				position++
				if buffer[position] != rune('t') {
					goto l222
				}
				position++
				if buffer[position] != rune('h') {
					goto l222
				}
				position++
				{
					position224, tokenIndex224 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l224
					}
					position++
					goto l225
				l224:
					position, tokenIndex = position224, tokenIndex224
				}
			l225:
				if !_rules[rule_]() {
					goto l222
				}
				add(ruleMONTHS, position223)
			}
			return true
		l222:
			position, tokenIndex = position222, tokenIndex222
			return false
		},
		/* 25 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position226, tokenIndex226 := position, tokenIndex
			{
				position227 := position
				if buffer[position] != rune('w') {
					goto l226
				}
				position++
				if buffer[position] != rune('e') {
					goto l226
				}
				position++
				if buffer[position] != rune('e') {
					goto l226
				}
				position++
				if buffer[position] != rune('k') {
					goto l226
				}
				position++
				{
					position228, tokenIndex228 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l228
					}
					position++
					goto l229
				l228:
					position, tokenIndex = position228, tokenIndex228
				}
			l229:
				if !_rules[rule_]() {
					goto l226
				}
				add(ruleWEEKS, position227)
			}
			return true
		l226:
			position, tokenIndex = position226, tokenIndex226
			return false
		},
		/* 26 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position230, tokenIndex230 := position, tokenIndex
			{
				position231 := position
				if buffer[position] != rune('d') {
					goto l230
				}
				position++
				if buffer[position] != rune('a') {
					goto l230
				}
				position++
				if buffer[position] != rune('y') {
					goto l230
				}
				position++
				{
					position232, tokenIndex232 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l232
					}
					position++
					goto l233
				l232:
					position, tokenIndex = position232, tokenIndex232
				}
			l233:
				if !_rules[rule_]() {
					goto l230
				}
				add(ruleDAYS, position231)
			}
			return true
		l230:
			position, tokenIndex = position230, tokenIndex230
			return false
		},
		/* 27 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position234, tokenIndex234 := position, tokenIndex
			{
				position235 := position
				if buffer[position] != rune('h') {
					goto l234
				}
				position++
				if buffer[position] != rune('o') {
					goto l234
				}
				position++
				if buffer[position] != rune('u') {
					goto l234
				}
				position++
				if buffer[position] != rune('r') {
					goto l234
				}
				position++
				{
					position236, tokenIndex236 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l236
					}
					position++
					goto l237
				l236:
					position, tokenIndex = position236, tokenIndex236
				}
			l237:
				if !_rules[rule_]() {
					goto l234
				}
				add(ruleHOURS, position235)
			}
			return true
		l234:
			position, tokenIndex = position234, tokenIndex234
			return false
		},
		/* 28 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position238, tokenIndex238 := position, tokenIndex
			{
				position239 := position
				if buffer[position] != rune('m') {
					goto l238
				}
				position++
				if buffer[position] != rune('i') {
					goto l238
				}
				position++
				if buffer[position] != rune('n') {
					goto l238
				}
				position++
				if buffer[position] != rune('u') {
					goto l238
				}
				position++
				if buffer[position] != rune('t') {
					goto l238
				}
				position++
				if buffer[position] != rune('e') {
					goto l238
				}
				position++
				{
					position240, tokenIndex240 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l240
					}
					position++
					goto l241
				l240:
					position, tokenIndex = position240, tokenIndex240
				}
			l241:
				if !_rules[rule_]() {
					goto l238
				}
				add(ruleMINUTES, position239)
			}
			return true
		l238:
			position, tokenIndex = position238, tokenIndex238
			return false
		},
		/* 29 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				if buffer[position] != rune('y') {
					goto l242
				}
				position++
				if buffer[position] != rune('e') {
					goto l242
				}
				position++
				if buffer[position] != rune('s') {
					goto l242
				}
				position++
				if buffer[position] != rune('t') {
					goto l242
				}
				position++
				if buffer[position] != rune('e') {
					goto l242
				}
				position++
				if buffer[position] != rune('r') {
					goto l242
				}
				position++
				if buffer[position] != rune('d') {
					goto l242
				}
				position++
				if buffer[position] != rune('a') {
					goto l242
				}
				position++
				if buffer[position] != rune('y') {
					goto l242
				}
				position++
				if !_rules[rule_]() {
					goto l242
				}
				add(ruleYESTERDAY, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 30 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position244, tokenIndex244 := position, tokenIndex
			{
				position245 := position
				if buffer[position] != rune('t') {
					goto l244
				}
				position++
				if buffer[position] != rune('o') {
					goto l244
				}
				position++
				if buffer[position] != rune('m') {
					goto l244
				}
				position++
				if buffer[position] != rune('o') {
					goto l244
				}
				position++
				if buffer[position] != rune('r') {
					goto l244
				}
				position++
				if buffer[position] != rune('r') {
					goto l244
				}
				position++
				if buffer[position] != rune('o') {
					goto l244
				}
				position++
				if buffer[position] != rune('w') {
					goto l244
				}
				position++
				if !_rules[rule_]() {
					goto l244
				}
				add(ruleTOMORROW, position245)
			}
			return true
		l244:
			position, tokenIndex = position244, tokenIndex244
			return false
		},
		/* 31 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position246, tokenIndex246 := position, tokenIndex
			{
				position247 := position
				if buffer[position] != rune('t') {
					goto l246
				}
				position++
				if buffer[position] != rune('o') {
					goto l246
				}
				position++
				if buffer[position] != rune('d') {
					goto l246
				}
				position++
				if buffer[position] != rune('a') {
					goto l246
				}
				position++
				if buffer[position] != rune('y') {
					goto l246
				}
				position++
				if !_rules[rule_]() {
					goto l246
				}
				add(ruleTODAY, position247)
			}
			return true
		l246:
			position, tokenIndex = position246, tokenIndex246
			return false
		},
		/* 32 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				if buffer[position] != rune('a') {
					goto l248
				}
				position++
				if buffer[position] != rune('g') {
					goto l248
				}
				position++
				if buffer[position] != rune('o') {
					goto l248
				}
				position++
				if !_rules[rule_]() {
					goto l248
				}
				add(ruleAGO, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 33 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				if buffer[position] != rune('f') {
					goto l250
				}
				position++
				if buffer[position] != rune('r') {
					goto l250
				}
				position++
				if buffer[position] != rune('o') {
					goto l250
				}
				position++
				if buffer[position] != rune('m') {
					goto l250
				}
				position++
				if buffer[position] != rune(' ') {
					goto l250
				}
				position++
				if buffer[position] != rune('n') {
					goto l250
				}
				position++
				if buffer[position] != rune('o') {
					goto l250
				}
				position++
				if buffer[position] != rune('w') {
					goto l250
				}
				position++
				if !_rules[rule_]() {
					goto l250
				}
				add(ruleFROM_NOW, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 34 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position252, tokenIndex252 := position, tokenIndex
			{
				position253 := position
				if buffer[position] != rune('n') {
					goto l252
				}
				position++
				if buffer[position] != rune('o') {
					goto l252
				}
				position++
				if buffer[position] != rune('w') {
					goto l252
				}
				position++
				if !_rules[rule_]() {
					goto l252
				}
				add(ruleNOW, position253)
			}
			return true
		l252:
			position, tokenIndex = position252, tokenIndex252
			return false
		},
		/* 35 AM <- <('a' 'm' _)> */
		func() bool {
			position254, tokenIndex254 := position, tokenIndex
			{
				position255 := position
				if buffer[position] != rune('a') {
					goto l254
				}
				position++
				if buffer[position] != rune('m') {
					goto l254
				}
				position++
				if !_rules[rule_]() {
					goto l254
				}
				add(ruleAM, position255)
			}
			return true
		l254:
			position, tokenIndex = position254, tokenIndex254
			return false
		},
		/* 36 PM <- <('p' 'm' _)> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				if buffer[position] != rune('p') {
					goto l256
				}
				position++
				if buffer[position] != rune('m') {
					goto l256
				}
				position++
				if !_rules[rule_]() {
					goto l256
				}
				add(rulePM, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 37 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position258, tokenIndex258 := position, tokenIndex
			{
				position259 := position
				if buffer[position] != rune('n') {
					goto l258
				}
				position++
				if buffer[position] != rune('e') {
					goto l258
				}
				position++
				if buffer[position] != rune('x') {
					goto l258
				}
				position++
				if buffer[position] != rune('t') {
					goto l258
				}
				position++
				if !_rules[rule_]() {
					goto l258
				}
				add(ruleNEXT, position259)
			}
			return true
		l258:
			position, tokenIndex = position258, tokenIndex258
			return false
		},
		/* 38 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position260, tokenIndex260 := position, tokenIndex
			{
				position261 := position
				{
					position262, tokenIndex262 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l263
					}
					position++
					if buffer[position] != rune('n') {
						goto l263
					}
					position++
					if buffer[position] != rune(' ') {
						goto l263
					}
					position++
					if buffer[position] != rune('a') {
						goto l263
					}
					position++
					if buffer[position] != rune('n') {
						goto l263
					}
					position++
					goto l262
				l263:
					position, tokenIndex = position262, tokenIndex262
					if buffer[position] != rune('i') {
						goto l264
					}
					position++
					if buffer[position] != rune('n') {
						goto l264
					}
					position++
					if buffer[position] != rune(' ') {
						goto l264
					}
					position++
					if buffer[position] != rune('a') {
						goto l264
					}
					position++
					goto l262
				l264:
					position, tokenIndex = position262, tokenIndex262
					if buffer[position] != rune('i') {
						goto l260
					}
					position++
					if buffer[position] != rune('n') {
						goto l260
					}
					position++
				}
			l262:
				if !_rules[rule_]() {
					goto l260
				}
				add(ruleIN, position261)
			}
			return true
		l260:
			position, tokenIndex = position260, tokenIndex260
			return false
		},
		/* 39 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position265, tokenIndex265 := position, tokenIndex
			{
				position266 := position
				{
					position267, tokenIndex267 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l268
					}
					position++
					if buffer[position] != rune('a') {
						goto l268
					}
					position++
					if buffer[position] != rune('s') {
						goto l268
					}
					position++
					if buffer[position] != rune('t') {
						goto l268
					}
					position++
					goto l267
				l268:
					position, tokenIndex = position267, tokenIndex267
					if buffer[position] != rune('p') {
						goto l269
					}
					position++
					if buffer[position] != rune('a') {
						goto l269
					}
					position++
					if buffer[position] != rune('s') {
						goto l269
					}
					position++
					if buffer[position] != rune('t') {
						goto l269
					}
					position++
					goto l267
				l269:
					position, tokenIndex = position267, tokenIndex267
					if buffer[position] != rune('p') {
						goto l265
					}
					position++
					if buffer[position] != rune('r') {
						goto l265
					}
					position++
					if buffer[position] != rune('e') {
						goto l265
					}
					position++
					if buffer[position] != rune('v') {
						goto l265
					}
					position++
					if buffer[position] != rune('i') {
						goto l265
					}
					position++
					if buffer[position] != rune('o') {
						goto l265
					}
					position++
					if buffer[position] != rune('u') {
						goto l265
					}
					position++
					if buffer[position] != rune('s') {
						goto l265
					}
					position++
				}
			l267:
				if !_rules[rule_]() {
					goto l265
				}
				add(ruleLAST, position266)
			}
			return true
		l265:
			position, tokenIndex = position265, tokenIndex265
			return false
		},
		/* 40 _ <- <Whitespace*> */
		func() bool {
			{
				position271 := position
			l272:
				{
					position273, tokenIndex273 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l273
					}
					goto l272
				l273:
					position, tokenIndex = position273, tokenIndex273
				}
				add(rule_, position271)
			}
			return true
		},
		/* 41 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				{
					position276, tokenIndex276 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l277
					}
					position++
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('\t') {
						goto l278
					}
					position++
					goto l276
				l278:
					position, tokenIndex = position276, tokenIndex276
					if !_rules[ruleEOL]() {
						goto l274
					}
				}
			l276:
				add(ruleWhitespace, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 42 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position279, tokenIndex279 := position, tokenIndex
			{
				position280 := position
				{
					position281, tokenIndex281 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l282
					}
					position++
					if buffer[position] != rune('\n') {
						goto l282
					}
					position++
					goto l281
				l282:
					position, tokenIndex = position281, tokenIndex281
					if buffer[position] != rune('\n') {
						goto l283
					}
					position++
					goto l281
				l283:
					position, tokenIndex = position281, tokenIndex281
					if buffer[position] != rune('\r') {
						goto l279
					}
					position++
				}
			l281:
				add(ruleEOL, position280)
			}
			return true
		l279:
			position, tokenIndex = position279, tokenIndex279
			return false
		},
		/* 43 EOF <- <!.> */
		func() bool {
			position284, tokenIndex284 := position, tokenIndex
			{
				position285 := position
				{
					position286, tokenIndex286 := position, tokenIndex
					if !matchDot() {
						goto l286
					}
					goto l284
				l286:
					position, tokenIndex = position286, tokenIndex286
				}
				add(ruleEOF, position285)
			}
			return true
		l284:
			position, tokenIndex = position284, tokenIndex284
			return false
		},
		/* 45 Action0 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 46 Action1 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 47 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 48 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 49 Action4 <- <{
		   p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 50 Action5 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 51 Action6 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 52 Action7 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 53 Action8 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 54 Action9 <- <{
		   p.t = p.t.Add(p.withDirection(time.Hour) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 55 Action10 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 56 Action11 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 57 Action12 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 58 Action13 <- <{
		   p.t = truncateDay(p.t.Add(day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 59 Action14 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(day) * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 60 Action15 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 61 Action16 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 62 Action17 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 63 Action18 <- <{
		   p.t = truncateDay(p.t.Add(week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 64 Action19 <- <{
		   p.t = truncateDay(p.t.Add(p.withDirection(week) * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 65 Action20 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 66 Action21 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 67 Action22 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 68 Action23 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 69 Action24 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 70 Action25 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 71 Action26 <- <{
		   if p.direction < 0 {
		     p.t = prevMonth(p.t, p.month)
		   } else {
		     p.t = nextMonth(p.t, p.month)
		   }
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 72 Action27 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 73 Action28 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 74 Action29 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 75 Action30 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 76 Action31 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 77 Action32 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		/* 78 Action33 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 79 Action34 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 80 Action35 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 81 Action36 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 82 Action37 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 83 Action38 <- <{
		   if p.direction < 0 {
		     p.t = truncateDay(prevWeekday(p.t, p.weekday))
		   } else {
		     p.t = truncateDay(nextWeekday(p.t, p.weekday))
		   }
		 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 84 Action39 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 85 Action40 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 86 Action41 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 87 Action42 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 88 Action43 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 89 Action44 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		nil,
		/* 91 Action45 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 92 Action46 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 93 Action47 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 94 Action48 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 95 Action49 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 96 Action50 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 97 Action51 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 98 Action52 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 99 Action53 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 100 Action54 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 101 Action55 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 102 Action56 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 103 Action57 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 104 Action58 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 105 Action59 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 106 Action60 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 107 Action61 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 108 Action62 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 109 Action63 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 110 Action64 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 111 Action65 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 112 Action66 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
		/* 113 Action67 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction67, position)
			}
			return true
		},
		/* 114 Action68 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction68, position)
			}
			return true
		},
		/* 115 Action69 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction69, position)
			}
			return true
		},
		/* 116 Action70 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction70, position)
			}
			return true
		},
		/* 117 Action71 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction71, position)
			}
			return true
		},
		/* 118 Action72 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction72, position)
			}
			return true
		},
		/* 119 Action73 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction73, position)
			}
			return true
		},
		/* 120 Action74 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction74, position)
			}
			return true
		},
		/* 121 Action75 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction75, position)
			}
			return true
		},
		/* 122 Action76 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction76, position)
			}
			return true
		},
		/* 123 Action77 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction77, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
