package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleHOUR
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	rulePegText
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"HOUR",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"PegText",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [116]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction1:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(time.Minute)

		case ruleAction5:

			p.t = p.t.Add(-time.Minute)

		case ruleAction6:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(-time.Hour)

		case ruleAction9:

			p.t = p.t.Add(time.Hour)

		case ruleAction10:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction11:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction12:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction13:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction14:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction15:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction16:

			p.t = prevMonth(p.t, p.month)

		case ruleAction17:

			p.t = nextMonth(p.t, p.month)

		case ruleAction18:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction19:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction20:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction21:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction22:

			p.t = truncateDay(p.t)

		case ruleAction23:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction24:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction25:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction26:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction27:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction28:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction29:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction30:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction31:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction32:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction33:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction34:
			p.number = 1
		case ruleAction35:
			p.number = 1
		case ruleAction36:
			p.number = 2
		case ruleAction37:
			p.number = 3
		case ruleAction38:
			p.number = 4
		case ruleAction39:
			p.number = 5
		case ruleAction40:
			p.number = 6
		case ruleAction41:
			p.number = 7
		case ruleAction42:
			p.number = 8
		case ruleAction43:
			p.number = 9
		case ruleAction44:
			p.number = 10
		case ruleAction45:
			p.weekday = time.Sunday
		case ruleAction46:
			p.weekday = time.Monday
		case ruleAction47:
			p.weekday = time.Tuesday
		case ruleAction48:
			p.weekday = time.Wednesday
		case ruleAction49:
			p.weekday = time.Thursday
		case ruleAction50:
			p.weekday = time.Friday
		case ruleAction51:
			p.weekday = time.Saturday
		case ruleAction52:
			p.month = time.January
		case ruleAction53:
			p.month = time.February
		case ruleAction54:
			p.month = time.March
		case ruleAction55:
			p.month = time.April
		case ruleAction56:
			p.month = time.May
		case ruleAction57:
			p.month = time.June
		case ruleAction58:
			p.month = time.July
		case ruleAction59:
			p.month = time.August
		case ruleAction60:
			p.month = time.September
		case ruleAction61:
			p.month = time.October
		case ruleAction62:
			p.month = time.November
		case ruleAction63:
			p.month = time.December
		case ruleAction64:
			p.number = 1
		case ruleAction65:
			p.number = 1
		case ruleAction66:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / RelativeMinutes / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l11
					}
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l12
					}
					goto l6
				l12:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l13
					}
					goto l6
				l13:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l14
					}
					goto l6
				l14:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l15
					}
					goto l6
				l15:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l16
					}
					{
						position17, tokenIndex17 := position, tokenIndex
						{
							position19, tokenIndex19 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l19
							}
							goto l20
						l19:
							position, tokenIndex = position19, tokenIndex19
						}
					l20:
						if !_rules[ruleTime]() {
							goto l17
						}
						goto l18
					l17:
						position, tokenIndex = position17, tokenIndex17
					}
				l18:
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position21, tokenIndex21 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l21
						}
						goto l22
					l21:
						position, tokenIndex = position21, tokenIndex21
					}
				l22:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action0) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action1) / (Last Number? MINUTES Action2) / (Next Number? MINUTES Action3) / (NEXT MINUTE Action4) / (LAST MINUTE Action5))> */
		func() bool {
			position23, tokenIndex23 := position, tokenIndex
			{
				position24 := position
				{
					position25, tokenIndex25 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l26
					}
					if !_rules[ruleMINUTES]() {
						goto l26
					}
					if !_rules[ruleAGO]() {
						goto l26
					}
					if !_rules[ruleAction0]() {
						goto l26
					}
					goto l25
				l26:
					position, tokenIndex = position25, tokenIndex25
					{
						position28, tokenIndex28 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l29
						}
						if !_rules[ruleMINUTES]() {
							goto l29
						}
						if !_rules[ruleFROM_NOW]() {
							goto l29
						}
						goto l28
					l29:
						position, tokenIndex = position28, tokenIndex28
						if !_rules[ruleIn]() {
							goto l27
						}
						{
							position30, tokenIndex30 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l30
							}
							goto l31
						l30:
							position, tokenIndex = position30, tokenIndex30
						}
					l31:
						if !_rules[ruleMINUTES]() {
							goto l27
						}
						{
							position32, tokenIndex32 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l32
							}
							goto l33
						l32:
							position, tokenIndex = position32, tokenIndex32
						}
					l33:
					}
				l28:
					if !_rules[ruleAction1]() {
						goto l27
					}
					goto l25
				l27:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleLast]() {
						goto l34
					}
					{
						position35, tokenIndex35 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l35
						}
						goto l36
					l35:
						position, tokenIndex = position35, tokenIndex35
					}
				l36:
					if !_rules[ruleMINUTES]() {
						goto l34
					}
					if !_rules[ruleAction2]() {
						goto l34
					}
					goto l25
				l34:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleNext]() {
						goto l37
					}
					{
						position38, tokenIndex38 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l38
						}
						goto l39
					l38:
						position, tokenIndex = position38, tokenIndex38
					}
				l39:
					if !_rules[ruleMINUTES]() {
						goto l37
					}
					if !_rules[ruleAction3]() {
						goto l37
					}
					goto l25
				l37:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleNEXT]() {
						goto l40
					}
					if !_rules[ruleMINUTE]() {
						goto l40
					}
					if !_rules[ruleAction4]() {
						goto l40
					}
					goto l25
				l40:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleLAST]() {
						goto l23
					}
					if !_rules[ruleMINUTE]() {
						goto l23
					}
					if !_rules[ruleAction5]() {
						goto l23
					}
				}
			l25:
				add(ruleRelativeMinutes, position24)
			}
			return true
		l23:
			position, tokenIndex = position23, tokenIndex23
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action6) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action7) / (LAST HOUR Action8) / (NEXT HOUR Action9))> */
		func() bool {
			position41, tokenIndex41 := position, tokenIndex
			{
				position42 := position
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l44
					}
					if !_rules[ruleHOURS]() {
						goto l44
					}
					if !_rules[ruleAGO]() {
						goto l44
					}
					if !_rules[ruleAction6]() {
						goto l44
					}
					goto l43
				l44:
					position, tokenIndex = position43, tokenIndex43
					{
						position46, tokenIndex46 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l47
						}
						if !_rules[ruleHOURS]() {
							goto l47
						}
						if !_rules[ruleFROM_NOW]() {
							goto l47
						}
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						if !_rules[ruleIn]() {
							goto l45
						}
						{
							position48, tokenIndex48 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l48
							}
							goto l49
						l48:
							position, tokenIndex = position48, tokenIndex48
						}
					l49:
						if !_rules[ruleHOURS]() {
							goto l45
						}
						{
							position50, tokenIndex50 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l50
							}
							goto l51
						l50:
							position, tokenIndex = position50, tokenIndex50
						}
					l51:
					}
				l46:
					if !_rules[ruleAction7]() {
						goto l45
					}
					goto l43
				l45:
					position, tokenIndex = position43, tokenIndex43
					if !_rules[ruleLAST]() {
						goto l52
					}
					if !_rules[ruleHOUR]() {
						goto l52
					}
					if !_rules[ruleAction8]() {
						goto l52
					}
					goto l43
				l52:
					position, tokenIndex = position43, tokenIndex43
					if !_rules[ruleNEXT]() {
						goto l41
					}
					if !_rules[ruleHOUR]() {
						goto l41
					}
					if !_rules[ruleAction9]() {
						goto l41
					}
				}
			l43:
				add(ruleRelativeHours, position42)
			}
			return true
		l41:
			position, tokenIndex = position41, tokenIndex41
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action10) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action11))> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				{
					position55, tokenIndex55 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l56
					}
					if !_rules[ruleDAYS]() {
						goto l56
					}
					if !_rules[ruleAGO]() {
						goto l56
					}
					if !_rules[ruleAction10]() {
						goto l56
					}
					goto l55
				l56:
					position, tokenIndex = position55, tokenIndex55
					{
						position57, tokenIndex57 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l58
						}
						if !_rules[ruleDAYS]() {
							goto l58
						}
						if !_rules[ruleFROM_NOW]() {
							goto l58
						}
						goto l57
					l58:
						position, tokenIndex = position57, tokenIndex57
						if !_rules[ruleIn]() {
							goto l53
						}
						{
							position59, tokenIndex59 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l59
							}
							goto l60
						l59:
							position, tokenIndex = position59, tokenIndex59
						}
					l60:
						if !_rules[ruleDAYS]() {
							goto l53
						}
						{
							position61, tokenIndex61 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l61
							}
							goto l62
						l61:
							position, tokenIndex = position61, tokenIndex61
						}
					l62:
					}
				l57:
					if !_rules[ruleAction11]() {
						goto l53
					}
				}
			l55:
				add(ruleRelativeDays, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action12) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action13))> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l66
					}
					if !_rules[ruleWEEKS]() {
						goto l66
					}
					if !_rules[ruleAGO]() {
						goto l66
					}
					if !_rules[ruleAction12]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					{
						position67, tokenIndex67 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l68
						}
						if !_rules[ruleWEEKS]() {
							goto l68
						}
						if !_rules[ruleFROM_NOW]() {
							goto l68
						}
						goto l67
					l68:
						position, tokenIndex = position67, tokenIndex67
						if !_rules[ruleIn]() {
							goto l63
						}
						{
							position69, tokenIndex69 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l69
							}
							goto l70
						l69:
							position, tokenIndex = position69, tokenIndex69
						}
					l70:
						if !_rules[ruleWEEKS]() {
							goto l63
						}
						{
							position71, tokenIndex71 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l71
							}
							goto l72
						l71:
							position, tokenIndex = position71, tokenIndex71
						}
					l72:
					}
				l67:
					if !_rules[ruleAction13]() {
						goto l63
					}
				}
			l65:
				add(ruleRelativeWeeks, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action14) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action15) / (LAST Month Action16) / (NEXT Month Action17))> */
		func() bool {
			position73, tokenIndex73 := position, tokenIndex
			{
				position74 := position
				{
					position75, tokenIndex75 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l76
					}
					if !_rules[ruleMONTHS]() {
						goto l76
					}
					if !_rules[ruleAGO]() {
						goto l76
					}
					if !_rules[ruleAction14]() {
						goto l76
					}
					goto l75
				l76:
					position, tokenIndex = position75, tokenIndex75
					{
						position78, tokenIndex78 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l79
						}
						if !_rules[ruleMONTHS]() {
							goto l79
						}
						if !_rules[ruleFROM_NOW]() {
							goto l79
						}
						goto l78
					l79:
						position, tokenIndex = position78, tokenIndex78
						if !_rules[ruleIn]() {
							goto l77
						}
						{
							position80, tokenIndex80 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l80
							}
							goto l81
						l80:
							position, tokenIndex = position80, tokenIndex80
						}
					l81:
						if !_rules[ruleMONTHS]() {
							goto l77
						}
						{
							position82, tokenIndex82 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l82
							}
							goto l83
						l82:
							position, tokenIndex = position82, tokenIndex82
						}
					l83:
					}
				l78:
					if !_rules[ruleAction15]() {
						goto l77
					}
					goto l75
				l77:
					position, tokenIndex = position75, tokenIndex75
					if !_rules[ruleLAST]() {
						goto l84
					}
					if !_rules[ruleMonth]() {
						goto l84
					}
					if !_rules[ruleAction16]() {
						goto l84
					}
					goto l75
				l84:
					position, tokenIndex = position75, tokenIndex75
					if !_rules[ruleNEXT]() {
						goto l73
					}
					if !_rules[ruleMonth]() {
						goto l73
					}
					if !_rules[ruleAction17]() {
						goto l73
					}
				}
			l75:
				add(ruleRelativeMonth, position74)
			}
			return true
		l73:
			position, tokenIndex = position73, tokenIndex73
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action18) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action19) / (LAST YEARS Action20) / (NEXT YEARS Action21))> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l88
					}
					if !_rules[ruleYEARS]() {
						goto l88
					}
					if !_rules[ruleAGO]() {
						goto l88
					}
					if !_rules[ruleAction18]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					{
						position90, tokenIndex90 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l91
						}
						if !_rules[ruleYEARS]() {
							goto l91
						}
						if !_rules[ruleFROM_NOW]() {
							goto l91
						}
						goto l90
					l91:
						position, tokenIndex = position90, tokenIndex90
						if !_rules[ruleIn]() {
							goto l89
						}
						{
							position92, tokenIndex92 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l92
							}
							goto l93
						l92:
							position, tokenIndex = position92, tokenIndex92
						}
					l93:
						if !_rules[ruleYEARS]() {
							goto l89
						}
						{
							position94, tokenIndex94 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l94
							}
							goto l95
						l94:
							position, tokenIndex = position94, tokenIndex94
						}
					l95:
					}
				l90:
					if !_rules[ruleAction19]() {
						goto l89
					}
					goto l87
				l89:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleLAST]() {
						goto l96
					}
					if !_rules[ruleYEARS]() {
						goto l96
					}
					if !_rules[ruleAction20]() {
						goto l96
					}
					goto l87
				l96:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleNEXT]() {
						goto l85
					}
					if !_rules[ruleYEARS]() {
						goto l85
					}
					if !_rules[ruleAction21]() {
						goto l85
					}
				}
			l87:
				add(ruleRelativeYear, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action22) / (YESTERDAY Action23) / (TOMORROW Action24) / (LAST Weekday Action25) / (NEXT Weekday Action26))> */
		func() bool {
			position97, tokenIndex97 := position, tokenIndex
			{
				position98 := position
				{
					position99, tokenIndex99 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l100
					}
					if !_rules[ruleAction22]() {
						goto l100
					}
					goto l99
				l100:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleYESTERDAY]() {
						goto l101
					}
					if !_rules[ruleAction23]() {
						goto l101
					}
					goto l99
				l101:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleTOMORROW]() {
						goto l102
					}
					if !_rules[ruleAction24]() {
						goto l102
					}
					goto l99
				l102:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleLAST]() {
						goto l103
					}
					if !_rules[ruleWeekday]() {
						goto l103
					}
					if !_rules[ruleAction25]() {
						goto l103
					}
					goto l99
				l103:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleNEXT]() {
						goto l97
					}
					if !_rules[ruleWeekday]() {
						goto l97
					}
					if !_rules[ruleAction26]() {
						goto l97
					}
				}
			l99:
				add(ruleRelativeWeekdays, position98)
			}
			return true
		l97:
			position, tokenIndex = position97, tokenIndex97
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action27)> */
		func() bool {
			position104, tokenIndex104 := position, tokenIndex
			{
				position105 := position
				{
					position106, tokenIndex106 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l107
					}
					if !_rules[ruleOrdinal]() {
						goto l107
					}
					goto l106
				l107:
					position, tokenIndex = position106, tokenIndex106
					if !_rules[ruleLast]() {
						goto l104
					}
					{
						position108, tokenIndex108 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l108
						}
						goto l109
					l108:
						position, tokenIndex = position108, tokenIndex108
					}
				l109:
					if !_rules[ruleNumber]() {
						goto l104
					}
				}
			l106:
				if !_rules[ruleAction27]() {
					goto l104
				}
				add(ruleDate, position105)
			}
			return true
		l104:
			position, tokenIndex = position104, tokenIndex104
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position110, tokenIndex110 := position, tokenIndex
			{
				position111 := position
				{
					position112, tokenIndex112 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l113
					}
					goto l112
				l113:
					position, tokenIndex = position112, tokenIndex112
					if !_rules[ruleClock24Hour]() {
						goto l110
					}
				}
			l112:
				add(ruleTime, position111)
			}
			return true
		l110:
			position, tokenIndex = position110, tokenIndex110
			return false
		},
		/* 11 Clock12Hour <- <((Number Action28 (Minutes Seconds?)? AM) / (Number Action29 (Minutes Seconds?)? PM))> */
		func() bool {
			position114, tokenIndex114 := position, tokenIndex
			{
				position115 := position
				{
					position116, tokenIndex116 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l117
					}
					if !_rules[ruleAction28]() {
						goto l117
					}
					{
						position118, tokenIndex118 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l118
						}
						{
							position120, tokenIndex120 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l120
							}
							goto l121
						l120:
							position, tokenIndex = position120, tokenIndex120
						}
					l121:
						goto l119
					l118:
						position, tokenIndex = position118, tokenIndex118
					}
				l119:
					if !_rules[ruleAM]() {
						goto l117
					}
					goto l116
				l117:
					position, tokenIndex = position116, tokenIndex116
					if !_rules[ruleNumber]() {
						goto l114
					}
					if !_rules[ruleAction29]() {
						goto l114
					}
					{
						position122, tokenIndex122 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l122
						}
						{
							position124, tokenIndex124 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l124
							}
							goto l125
						l124:
							position, tokenIndex = position124, tokenIndex124
						}
					l125:
						goto l123
					l122:
						position, tokenIndex = position122, tokenIndex122
					}
				l123:
					if !_rules[rulePM]() {
						goto l114
					}
				}
			l116:
				add(ruleClock12Hour, position115)
			}
			return true
		l114:
			position, tokenIndex = position114, tokenIndex114
			return false
		},
		/* 12 Clock24Hour <- <(Number Action30 (Minutes Seconds?)?)> */
		func() bool {
			position126, tokenIndex126 := position, tokenIndex
			{
				position127 := position
				if !_rules[ruleNumber]() {
					goto l126
				}
				if !_rules[ruleAction30]() {
					goto l126
				}
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l128
					}
					{
						position130, tokenIndex130 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l130
						}
						goto l131
					l130:
						position, tokenIndex = position130, tokenIndex130
					}
				l131:
					goto l129
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
			l129:
				add(ruleClock24Hour, position127)
			}
			return true
		l126:
			position, tokenIndex = position126, tokenIndex126
			return false
		},
		/* 13 Minutes <- <(':' Number Action31)> */
		func() bool {
			position132, tokenIndex132 := position, tokenIndex
			{
				position133 := position
				if buffer[position] != rune(':') {
					goto l132
				}
				position++
				if !_rules[ruleNumber]() {
					goto l132
				}
				if !_rules[ruleAction31]() {
					goto l132
				}
				add(ruleMinutes, position133)
			}
			return true
		l132:
			position, tokenIndex = position132, tokenIndex132
			return false
		},
		/* 14 Seconds <- <(':' Number Action32)> */
		func() bool {
			position134, tokenIndex134 := position, tokenIndex
			{
				position135 := position
				if buffer[position] != rune(':') {
					goto l134
				}
				position++
				if !_rules[ruleNumber]() {
					goto l134
				}
				if !_rules[ruleAction32]() {
					goto l134
				}
				add(ruleSeconds, position135)
			}
			return true
		l134:
			position, tokenIndex = position134, tokenIndex134
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action33) / ('a' 'n'? _ Action34) / ('o' 'n' 'e' _ Action35) / ('t' 'w' 'o' _ Action36) / ('t' 'h' 'r' 'e' 'e' _ Action37) / ('f' 'o' 'u' 'r' _ Action38) / ('f' 'i' 'v' 'e' _ Action39) / ('s' 'i' 'x' _ Action40) / ('s' 'e' 'v' 'e' 'n' _ Action41) / ('e' 'i' 'g' 'h' 't' _ Action42) / ('n' 'i' 'n' 'e' _ Action43) / ('t' 'e' 'n' _ Action44))> */
		func() bool {
			position136, tokenIndex136 := position, tokenIndex
			{
				position137 := position
				{
					position138, tokenIndex138 := position, tokenIndex
					{
						position140 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l139
						}
						position++
					l141:
						{
							position142, tokenIndex142 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l142
							}
							position++
							goto l141
						l142:
							position, tokenIndex = position142, tokenIndex142
						}
						add(rulePegText, position140)
					}
					if !_rules[rule_]() {
						goto l139
					}
					if !_rules[ruleAction33]() {
						goto l139
					}
					goto l138
				l139:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('a') {
						goto l143
					}
					position++
					{
						position144, tokenIndex144 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l144
						}
						position++
						goto l145
					l144:
						position, tokenIndex = position144, tokenIndex144
					}
				l145:
					if !_rules[rule_]() {
						goto l143
					}
					if !_rules[ruleAction34]() {
						goto l143
					}
					goto l138
				l143:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('o') {
						goto l146
					}
					position++
					if buffer[position] != rune('n') {
						goto l146
					}
					position++
					if buffer[position] != rune('e') {
						goto l146
					}
					position++
					if !_rules[rule_]() {
						goto l146
					}
					if !_rules[ruleAction35]() {
						goto l146
					}
					goto l138
				l146:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('t') {
						goto l147
					}
					position++
					if buffer[position] != rune('w') {
						goto l147
					}
					position++
					if buffer[position] != rune('o') {
						goto l147
					}
					position++
					if !_rules[rule_]() {
						goto l147
					}
					if !_rules[ruleAction36]() {
						goto l147
					}
					goto l138
				l147:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('h') {
						goto l148
					}
					position++
					if buffer[position] != rune('r') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if !_rules[rule_]() {
						goto l148
					}
					if !_rules[ruleAction37]() {
						goto l148
					}
					goto l138
				l148:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('f') {
						goto l149
					}
					position++
					if buffer[position] != rune('o') {
						goto l149
					}
					position++
					if buffer[position] != rune('u') {
						goto l149
					}
					position++
					if buffer[position] != rune('r') {
						goto l149
					}
					position++
					if !_rules[rule_]() {
						goto l149
					}
					if !_rules[ruleAction38]() {
						goto l149
					}
					goto l138
				l149:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('f') {
						goto l150
					}
					position++
					if buffer[position] != rune('i') {
						goto l150
					}
					position++
					if buffer[position] != rune('v') {
						goto l150
					}
					position++
					if buffer[position] != rune('e') {
						goto l150
					}
					position++
					if !_rules[rule_]() {
						goto l150
					}
					if !_rules[ruleAction39]() {
						goto l150
					}
					goto l138
				l150:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('s') {
						goto l151
					}
					position++
					if buffer[position] != rune('i') {
						goto l151
					}
					position++
					if buffer[position] != rune('x') {
						goto l151
					}
					position++
					if !_rules[rule_]() {
						goto l151
					}
					if !_rules[ruleAction40]() {
						goto l151
					}
					goto l138
				l151:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('s') {
						goto l152
					}
					position++
					if buffer[position] != rune('e') {
						goto l152
					}
					position++
					if buffer[position] != rune('v') {
						goto l152
					}
					position++
					if buffer[position] != rune('e') {
						goto l152
					}
					position++
					if buffer[position] != rune('n') {
						goto l152
					}
					position++
					if !_rules[rule_]() {
						goto l152
					}
					if !_rules[ruleAction41]() {
						goto l152
					}
					goto l138
				l152:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('e') {
						goto l153
					}
					position++
					if buffer[position] != rune('i') {
						goto l153
					}
					position++
					if buffer[position] != rune('g') {
						goto l153
					}
					position++
					if buffer[position] != rune('h') {
						goto l153
					}
					position++
					if buffer[position] != rune('t') {
						goto l153
					}
					position++
					if !_rules[rule_]() {
						goto l153
					}
					if !_rules[ruleAction42]() {
						goto l153
					}
					goto l138
				l153:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('n') {
						goto l154
					}
					position++
					if buffer[position] != rune('i') {
						goto l154
					}
					position++
					if buffer[position] != rune('n') {
						goto l154
					}
					position++
					if buffer[position] != rune('e') {
						goto l154
					}
					position++
					if !_rules[rule_]() {
						goto l154
					}
					if !_rules[ruleAction43]() {
						goto l154
					}
					goto l138
				l154:
					position, tokenIndex = position138, tokenIndex138
					if buffer[position] != rune('t') {
						goto l136
					}
					position++
					if buffer[position] != rune('e') {
						goto l136
					}
					position++
					if buffer[position] != rune('n') {
						goto l136
					}
					position++
					if !_rules[rule_]() {
						goto l136
					}
					if !_rules[ruleAction44]() {
						goto l136
					}
				}
			l138:
				add(ruleNumber, position137)
			}
			return true
		l136:
			position, tokenIndex = position136, tokenIndex136
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action45) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action46) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action47) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action48) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action49) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action50) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action51))> */
		func() bool {
			position155, tokenIndex155 := position, tokenIndex
			{
				position156 := position
				{
					position157, tokenIndex157 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l158
					}
					position++
					if buffer[position] != rune('u') {
						goto l158
					}
					position++
					if buffer[position] != rune('n') {
						goto l158
					}
					position++
					if buffer[position] != rune('d') {
						goto l158
					}
					position++
					if buffer[position] != rune('a') {
						goto l158
					}
					position++
					if buffer[position] != rune('y') {
						goto l158
					}
					position++
					if !_rules[rule_]() {
						goto l158
					}
					if !_rules[ruleAction45]() {
						goto l158
					}
					goto l157
				l158:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('m') {
						goto l159
					}
					position++
					if buffer[position] != rune('o') {
						goto l159
					}
					position++
					if buffer[position] != rune('n') {
						goto l159
					}
					position++
					if buffer[position] != rune('d') {
						goto l159
					}
					position++
					if buffer[position] != rune('a') {
						goto l159
					}
					position++
					if buffer[position] != rune('y') {
						goto l159
					}
					position++
					if !_rules[rule_]() {
						goto l159
					}
					if !_rules[ruleAction46]() {
						goto l159
					}
					goto l157
				l159:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('t') {
						goto l160
					}
					position++
					if buffer[position] != rune('u') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if buffer[position] != rune('s') {
						goto l160
					}
					position++
					if buffer[position] != rune('d') {
						goto l160
					}
					position++
					if buffer[position] != rune('a') {
						goto l160
					}
					position++
					if buffer[position] != rune('y') {
						goto l160
					}
					position++
					if !_rules[rule_]() {
						goto l160
					}
					if !_rules[ruleAction47]() {
						goto l160
					}
					goto l157
				l160:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('w') {
						goto l161
					}
					position++
					if buffer[position] != rune('e') {
						goto l161
					}
					position++
					if buffer[position] != rune('d') {
						goto l161
					}
					position++
					if buffer[position] != rune('n') {
						goto l161
					}
					position++
					if buffer[position] != rune('e') {
						goto l161
					}
					position++
					if buffer[position] != rune('s') {
						goto l161
					}
					position++
					if buffer[position] != rune('d') {
						goto l161
					}
					position++
					if buffer[position] != rune('a') {
						goto l161
					}
					position++
					if buffer[position] != rune('y') {
						goto l161
					}
					position++
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleAction48]() {
						goto l161
					}
					goto l157
				l161:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('t') {
						goto l162
					}
					position++
					if buffer[position] != rune('h') {
						goto l162
					}
					position++
					if buffer[position] != rune('u') {
						goto l162
					}
					position++
					if buffer[position] != rune('r') {
						goto l162
					}
					position++
					if buffer[position] != rune('s') {
						goto l162
					}
					position++
					if buffer[position] != rune('d') {
						goto l162
					}
					position++
					if buffer[position] != rune('a') {
						goto l162
					}
					position++
					if buffer[position] != rune('y') {
						goto l162
					}
					position++
					if !_rules[rule_]() {
						goto l162
					}
					if !_rules[ruleAction49]() {
						goto l162
					}
					goto l157
				l162:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('f') {
						goto l163
					}
					position++
					if buffer[position] != rune('r') {
						goto l163
					}
					position++
					if buffer[position] != rune('i') {
						goto l163
					}
					position++
					if buffer[position] != rune('d') {
						goto l163
					}
					position++
					if buffer[position] != rune('a') {
						goto l163
					}
					position++
					if buffer[position] != rune('y') {
						goto l163
					}
					position++
					if !_rules[rule_]() {
						goto l163
					}
					if !_rules[ruleAction50]() {
						goto l163
					}
					goto l157
				l163:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('s') {
						goto l155
					}
					position++
					if buffer[position] != rune('a') {
						goto l155
					}
					position++
					if buffer[position] != rune('t') {
						goto l155
					}
					position++
					if buffer[position] != rune('u') {
						goto l155
					}
					position++
					if buffer[position] != rune('r') {
						goto l155
					}
					position++
					if buffer[position] != rune('d') {
						goto l155
					}
					position++
					if buffer[position] != rune('a') {
						goto l155
					}
					position++
					if buffer[position] != rune('y') {
						goto l155
					}
					position++
					if !_rules[rule_]() {
						goto l155
					}
					if !_rules[ruleAction51]() {
						goto l155
					}
				}
			l157:
				add(ruleWeekday, position156)
			}
			return true
		l155:
			position, tokenIndex = position155, tokenIndex155
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action52) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action53) / ('m' 'a' 'r' 'c' 'h' _ Action54) / ('a' 'p' 'r' 'i' 'l' _ Action55) / ('m' 'a' 'y' _ Action56) / ('j' 'u' 'n' 'e' _ Action57) / ('j' 'u' 'l' 'y' _ Action58) / ('a' 'u' 'g' 'u' 's' 't' _ Action59) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action60) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action61) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action62) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action63))> */
		func() bool {
			position164, tokenIndex164 := position, tokenIndex
			{
				position165 := position
				{
					position166, tokenIndex166 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('n') {
						goto l167
					}
					position++
					if buffer[position] != rune('u') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('r') {
						goto l167
					}
					position++
					if buffer[position] != rune('y') {
						goto l167
					}
					position++
					if !_rules[rule_]() {
						goto l167
					}
					if !_rules[ruleAction52]() {
						goto l167
					}
					goto l166
				l167:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('f') {
						goto l168
					}
					position++
					if buffer[position] != rune('e') {
						goto l168
					}
					position++
					if buffer[position] != rune('b') {
						goto l168
					}
					position++
					if buffer[position] != rune('r') {
						goto l168
					}
					position++
					if buffer[position] != rune('u') {
						goto l168
					}
					position++
					if buffer[position] != rune('a') {
						goto l168
					}
					position++
					if buffer[position] != rune('r') {
						goto l168
					}
					position++
					if buffer[position] != rune('y') {
						goto l168
					}
					position++
					if !_rules[rule_]() {
						goto l168
					}
					if !_rules[ruleAction53]() {
						goto l168
					}
					goto l166
				l168:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('m') {
						goto l169
					}
					position++
					if buffer[position] != rune('a') {
						goto l169
					}
					position++
					if buffer[position] != rune('r') {
						goto l169
					}
					position++
					if buffer[position] != rune('c') {
						goto l169
					}
					position++
					if buffer[position] != rune('h') {
						goto l169
					}
					position++
					if !_rules[rule_]() {
						goto l169
					}
					if !_rules[ruleAction54]() {
						goto l169
					}
					goto l166
				l169:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('a') {
						goto l170
					}
					position++
					if buffer[position] != rune('p') {
						goto l170
					}
					position++
					if buffer[position] != rune('r') {
						goto l170
					}
					position++
					if buffer[position] != rune('i') {
						goto l170
					}
					position++
					if buffer[position] != rune('l') {
						goto l170
					}
					position++
					if !_rules[rule_]() {
						goto l170
					}
					if !_rules[ruleAction55]() {
						goto l170
					}
					goto l166
				l170:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('m') {
						goto l171
					}
					position++
					if buffer[position] != rune('a') {
						goto l171
					}
					position++
					if buffer[position] != rune('y') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction56]() {
						goto l171
					}
					goto l166
				l171:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('j') {
						goto l172
					}
					position++
					if buffer[position] != rune('u') {
						goto l172
					}
					position++
					if buffer[position] != rune('n') {
						goto l172
					}
					position++
					if buffer[position] != rune('e') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction57]() {
						goto l172
					}
					goto l166
				l172:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('j') {
						goto l173
					}
					position++
					if buffer[position] != rune('u') {
						goto l173
					}
					position++
					if buffer[position] != rune('l') {
						goto l173
					}
					position++
					if buffer[position] != rune('y') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction58]() {
						goto l173
					}
					goto l166
				l173:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('a') {
						goto l174
					}
					position++
					if buffer[position] != rune('u') {
						goto l174
					}
					position++
					if buffer[position] != rune('g') {
						goto l174
					}
					position++
					if buffer[position] != rune('u') {
						goto l174
					}
					position++
					if buffer[position] != rune('s') {
						goto l174
					}
					position++
					if buffer[position] != rune('t') {
						goto l174
					}
					position++
					if !_rules[rule_]() {
						goto l174
					}
					if !_rules[ruleAction59]() {
						goto l174
					}
					goto l166
				l174:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('s') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('p') {
						goto l175
					}
					position++
					if buffer[position] != rune('t') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('m') {
						goto l175
					}
					position++
					if buffer[position] != rune('b') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('r') {
						goto l175
					}
					position++
					if !_rules[rule_]() {
						goto l175
					}
					if !_rules[ruleAction60]() {
						goto l175
					}
					goto l166
				l175:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('o') {
						goto l176
					}
					position++
					if buffer[position] != rune('c') {
						goto l176
					}
					position++
					if buffer[position] != rune('t') {
						goto l176
					}
					position++
					if buffer[position] != rune('o') {
						goto l176
					}
					position++
					if buffer[position] != rune('b') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					if !_rules[rule_]() {
						goto l176
					}
					if !_rules[ruleAction61]() {
						goto l176
					}
					goto l166
				l176:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if buffer[position] != rune('o') {
						goto l177
					}
					position++
					if buffer[position] != rune('v') {
						goto l177
					}
					position++
					if buffer[position] != rune('e') {
						goto l177
					}
					position++
					if buffer[position] != rune('m') {
						goto l177
					}
					position++
					if buffer[position] != rune('b') {
						goto l177
					}
					position++
					if buffer[position] != rune('e') {
						goto l177
					}
					position++
					if buffer[position] != rune('r') {
						goto l177
					}
					position++
					if !_rules[rule_]() {
						goto l177
					}
					if !_rules[ruleAction62]() {
						goto l177
					}
					goto l166
				l177:
					position, tokenIndex = position166, tokenIndex166
					if buffer[position] != rune('d') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('c') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('m') {
						goto l164
					}
					position++
					if buffer[position] != rune('b') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('r') {
						goto l164
					}
					position++
					if !_rules[rule_]() {
						goto l164
					}
					if !_rules[ruleAction63]() {
						goto l164
					}
				}
			l166:
				add(ruleMonth, position165)
			}
			return true
		l164:
			position, tokenIndex = position164, tokenIndex164
			return false
		},
		/* 18 In <- <(IN Action64)> */
		func() bool {
			position178, tokenIndex178 := position, tokenIndex
			{
				position179 := position
				if !_rules[ruleIN]() {
					goto l178
				}
				if !_rules[ruleAction64]() {
					goto l178
				}
				add(ruleIn, position179)
			}
			return true
		l178:
			position, tokenIndex = position178, tokenIndex178
			return false
		},
		/* 19 Last <- <(LAST Action65)> */
		func() bool {
			position180, tokenIndex180 := position, tokenIndex
			{
				position181 := position
				if !_rules[ruleLAST]() {
					goto l180
				}
				if !_rules[ruleAction65]() {
					goto l180
				}
				add(ruleLast, position181)
			}
			return true
		l180:
			position, tokenIndex = position180, tokenIndex180
			return false
		},
		/* 20 Next <- <(NEXT Action66)> */
		func() bool {
			position182, tokenIndex182 := position, tokenIndex
			{
				position183 := position
				if !_rules[ruleNEXT]() {
					goto l182
				}
				if !_rules[ruleAction66]() {
					goto l182
				}
				add(ruleNext, position183)
			}
			return true
		l182:
			position, tokenIndex = position182, tokenIndex182
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position184, tokenIndex184 := position, tokenIndex
			{
				position185 := position
				{
					position186, tokenIndex186 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l187
					}
					position++
					if buffer[position] != rune('t') {
						goto l187
					}
					position++
					goto l186
				l187:
					position, tokenIndex = position186, tokenIndex186
					if buffer[position] != rune('n') {
						goto l188
					}
					position++
					if buffer[position] != rune('d') {
						goto l188
					}
					position++
					goto l186
				l188:
					position, tokenIndex = position186, tokenIndex186
					if buffer[position] != rune('r') {
						goto l189
					}
					position++
					if buffer[position] != rune('d') {
						goto l189
					}
					position++
					goto l186
				l189:
					position, tokenIndex = position186, tokenIndex186
					if buffer[position] != rune('t') {
						goto l184
					}
					position++
					if buffer[position] != rune('h') {
						goto l184
					}
					position++
				}
			l186:
				if !_rules[rule_]() {
					goto l184
				}
				add(ruleOrdinal, position185)
			}
			return true
		l184:
			position, tokenIndex = position184, tokenIndex184
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				if buffer[position] != rune('y') {
					goto l190
				}
				position++
				if buffer[position] != rune('e') {
					goto l190
				}
				position++
				if buffer[position] != rune('a') {
					goto l190
				}
				position++
				if buffer[position] != rune('r') {
					goto l190
				}
				position++
				{
					position192, tokenIndex192 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l192
					}
					position++
					goto l193
				l192:
					position, tokenIndex = position192, tokenIndex192
				}
			l193:
				if !_rules[rule_]() {
					goto l190
				}
				add(ruleYEARS, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 23 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				if buffer[position] != rune('m') {
					goto l194
				}
				position++
				if buffer[position] != rune('o') {
					goto l194
				}
				position++
				if buffer[position] != rune('n') {
					goto l194
				}
				position++
				if buffer[position] != rune('t') {
					goto l194
				}
				position++
				if buffer[position] != rune('h') {
					goto l194
				}
				position++
				{
					position196, tokenIndex196 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l196
					}
					position++
					goto l197
				l196:
					position, tokenIndex = position196, tokenIndex196
				}
			l197:
				if !_rules[rule_]() {
					goto l194
				}
				add(ruleMONTHS, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 24 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position198, tokenIndex198 := position, tokenIndex
			{
				position199 := position
				if buffer[position] != rune('w') {
					goto l198
				}
				position++
				if buffer[position] != rune('e') {
					goto l198
				}
				position++
				if buffer[position] != rune('e') {
					goto l198
				}
				position++
				if buffer[position] != rune('k') {
					goto l198
				}
				position++
				{
					position200, tokenIndex200 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l200
					}
					position++
					goto l201
				l200:
					position, tokenIndex = position200, tokenIndex200
				}
			l201:
				if !_rules[rule_]() {
					goto l198
				}
				add(ruleWEEKS, position199)
			}
			return true
		l198:
			position, tokenIndex = position198, tokenIndex198
			return false
		},
		/* 25 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position202, tokenIndex202 := position, tokenIndex
			{
				position203 := position
				if buffer[position] != rune('d') {
					goto l202
				}
				position++
				if buffer[position] != rune('a') {
					goto l202
				}
				position++
				if buffer[position] != rune('y') {
					goto l202
				}
				position++
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l204
					}
					position++
					goto l205
				l204:
					position, tokenIndex = position204, tokenIndex204
				}
			l205:
				if !_rules[rule_]() {
					goto l202
				}
				add(ruleDAYS, position203)
			}
			return true
		l202:
			position, tokenIndex = position202, tokenIndex202
			return false
		},
		/* 26 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position206, tokenIndex206 := position, tokenIndex
			{
				position207 := position
				if buffer[position] != rune('h') {
					goto l206
				}
				position++
				if buffer[position] != rune('o') {
					goto l206
				}
				position++
				if buffer[position] != rune('u') {
					goto l206
				}
				position++
				if buffer[position] != rune('r') {
					goto l206
				}
				position++
				{
					position208, tokenIndex208 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					goto l209
				l208:
					position, tokenIndex = position208, tokenIndex208
				}
			l209:
				if !_rules[rule_]() {
					goto l206
				}
				add(ruleHOURS, position207)
			}
			return true
		l206:
			position, tokenIndex = position206, tokenIndex206
			return false
		},
		/* 27 HOUR <- <('h' 'o' 'u' 'r' _)> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				if buffer[position] != rune('h') {
					goto l210
				}
				position++
				if buffer[position] != rune('o') {
					goto l210
				}
				position++
				if buffer[position] != rune('u') {
					goto l210
				}
				position++
				if buffer[position] != rune('r') {
					goto l210
				}
				position++
				if !_rules[rule_]() {
					goto l210
				}
				add(ruleHOUR, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 28 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position212, tokenIndex212 := position, tokenIndex
			{
				position213 := position
				if buffer[position] != rune('m') {
					goto l212
				}
				position++
				if buffer[position] != rune('i') {
					goto l212
				}
				position++
				if buffer[position] != rune('n') {
					goto l212
				}
				position++
				if buffer[position] != rune('u') {
					goto l212
				}
				position++
				if buffer[position] != rune('t') {
					goto l212
				}
				position++
				if buffer[position] != rune('e') {
					goto l212
				}
				position++
				{
					position214, tokenIndex214 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l214
					}
					position++
					goto l215
				l214:
					position, tokenIndex = position214, tokenIndex214
				}
			l215:
				if !_rules[rule_]() {
					goto l212
				}
				add(ruleMINUTES, position213)
			}
			return true
		l212:
			position, tokenIndex = position212, tokenIndex212
			return false
		},
		/* 29 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position216, tokenIndex216 := position, tokenIndex
			{
				position217 := position
				if buffer[position] != rune('m') {
					goto l216
				}
				position++
				if buffer[position] != rune('i') {
					goto l216
				}
				position++
				if buffer[position] != rune('n') {
					goto l216
				}
				position++
				if buffer[position] != rune('u') {
					goto l216
				}
				position++
				if buffer[position] != rune('t') {
					goto l216
				}
				position++
				if buffer[position] != rune('e') {
					goto l216
				}
				position++
				if !_rules[rule_]() {
					goto l216
				}
				add(ruleMINUTE, position217)
			}
			return true
		l216:
			position, tokenIndex = position216, tokenIndex216
			return false
		},
		/* 30 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position218, tokenIndex218 := position, tokenIndex
			{
				position219 := position
				if buffer[position] != rune('y') {
					goto l218
				}
				position++
				if buffer[position] != rune('e') {
					goto l218
				}
				position++
				if buffer[position] != rune('s') {
					goto l218
				}
				position++
				if buffer[position] != rune('t') {
					goto l218
				}
				position++
				if buffer[position] != rune('e') {
					goto l218
				}
				position++
				if buffer[position] != rune('r') {
					goto l218
				}
				position++
				if buffer[position] != rune('d') {
					goto l218
				}
				position++
				if buffer[position] != rune('a') {
					goto l218
				}
				position++
				if buffer[position] != rune('y') {
					goto l218
				}
				position++
				if !_rules[rule_]() {
					goto l218
				}
				add(ruleYESTERDAY, position219)
			}
			return true
		l218:
			position, tokenIndex = position218, tokenIndex218
			return false
		},
		/* 31 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position220, tokenIndex220 := position, tokenIndex
			{
				position221 := position
				if buffer[position] != rune('t') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('m') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('r') {
					goto l220
				}
				position++
				if buffer[position] != rune('r') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('w') {
					goto l220
				}
				position++
				if !_rules[rule_]() {
					goto l220
				}
				add(ruleTOMORROW, position221)
			}
			return true
		l220:
			position, tokenIndex = position220, tokenIndex220
			return false
		},
		/* 32 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position222, tokenIndex222 := position, tokenIndex
			{
				position223 := position
				if buffer[position] != rune('t') {
					goto l222
				}
				position++
				if buffer[position] != rune('o') {
					goto l222
				}
				position++
				if buffer[position] != rune('d') {
					goto l222
				}
				position++
				if buffer[position] != rune('a') {
					goto l222
				}
				position++
				if buffer[position] != rune('y') {
					goto l222
				}
				position++
				if !_rules[rule_]() {
					goto l222
				}
				add(ruleTODAY, position223)
			}
			return true
		l222:
			position, tokenIndex = position222, tokenIndex222
			return false
		},
		/* 33 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('a') {
					goto l224
				}
				position++
				if buffer[position] != rune('g') {
					goto l224
				}
				position++
				if buffer[position] != rune('o') {
					goto l224
				}
				position++
				if !_rules[rule_]() {
					goto l224
				}
				add(ruleAGO, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 34 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position226, tokenIndex226 := position, tokenIndex
			{
				position227 := position
				if buffer[position] != rune('f') {
					goto l226
				}
				position++
				if buffer[position] != rune('r') {
					goto l226
				}
				position++
				if buffer[position] != rune('o') {
					goto l226
				}
				position++
				if buffer[position] != rune('m') {
					goto l226
				}
				position++
				if buffer[position] != rune(' ') {
					goto l226
				}
				position++
				if buffer[position] != rune('n') {
					goto l226
				}
				position++
				if buffer[position] != rune('o') {
					goto l226
				}
				position++
				if buffer[position] != rune('w') {
					goto l226
				}
				position++
				if !_rules[rule_]() {
					goto l226
				}
				add(ruleFROM_NOW, position227)
			}
			return true
		l226:
			position, tokenIndex = position226, tokenIndex226
			return false
		},
		/* 35 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('n') {
					goto l228
				}
				position++
				if buffer[position] != rune('o') {
					goto l228
				}
				position++
				if buffer[position] != rune('w') {
					goto l228
				}
				position++
				if !_rules[rule_]() {
					goto l228
				}
				add(ruleNOW, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 36 AM <- <('a' 'm' _)> */
		func() bool {
			position230, tokenIndex230 := position, tokenIndex
			{
				position231 := position
				if buffer[position] != rune('a') {
					goto l230
				}
				position++
				if buffer[position] != rune('m') {
					goto l230
				}
				position++
				if !_rules[rule_]() {
					goto l230
				}
				add(ruleAM, position231)
			}
			return true
		l230:
			position, tokenIndex = position230, tokenIndex230
			return false
		},
		/* 37 PM <- <('p' 'm' _)> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				if buffer[position] != rune('p') {
					goto l232
				}
				position++
				if buffer[position] != rune('m') {
					goto l232
				}
				position++
				if !_rules[rule_]() {
					goto l232
				}
				add(rulePM, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 38 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position234, tokenIndex234 := position, tokenIndex
			{
				position235 := position
				if buffer[position] != rune('n') {
					goto l234
				}
				position++
				if buffer[position] != rune('e') {
					goto l234
				}
				position++
				if buffer[position] != rune('x') {
					goto l234
				}
				position++
				if buffer[position] != rune('t') {
					goto l234
				}
				position++
				if !_rules[rule_]() {
					goto l234
				}
				add(ruleNEXT, position235)
			}
			return true
		l234:
			position, tokenIndex = position234, tokenIndex234
			return false
		},
		/* 39 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position236, tokenIndex236 := position, tokenIndex
			{
				position237 := position
				{
					position238, tokenIndex238 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l239
					}
					position++
					if buffer[position] != rune('n') {
						goto l239
					}
					position++
					if buffer[position] != rune(' ') {
						goto l239
					}
					position++
					if buffer[position] != rune('a') {
						goto l239
					}
					position++
					if buffer[position] != rune('n') {
						goto l239
					}
					position++
					goto l238
				l239:
					position, tokenIndex = position238, tokenIndex238
					if buffer[position] != rune('i') {
						goto l240
					}
					position++
					if buffer[position] != rune('n') {
						goto l240
					}
					position++
					if buffer[position] != rune(' ') {
						goto l240
					}
					position++
					if buffer[position] != rune('a') {
						goto l240
					}
					position++
					goto l238
				l240:
					position, tokenIndex = position238, tokenIndex238
					if buffer[position] != rune('i') {
						goto l236
					}
					position++
					if buffer[position] != rune('n') {
						goto l236
					}
					position++
				}
			l238:
				if !_rules[rule_]() {
					goto l236
				}
				add(ruleIN, position237)
			}
			return true
		l236:
			position, tokenIndex = position236, tokenIndex236
			return false
		},
		/* 40 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position241, tokenIndex241 := position, tokenIndex
			{
				position242 := position
				{
					position243, tokenIndex243 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l244
					}
					position++
					if buffer[position] != rune('a') {
						goto l244
					}
					position++
					if buffer[position] != rune('s') {
						goto l244
					}
					position++
					if buffer[position] != rune('t') {
						goto l244
					}
					position++
					goto l243
				l244:
					position, tokenIndex = position243, tokenIndex243
					if buffer[position] != rune('p') {
						goto l245
					}
					position++
					if buffer[position] != rune('a') {
						goto l245
					}
					position++
					if buffer[position] != rune('s') {
						goto l245
					}
					position++
					if buffer[position] != rune('t') {
						goto l245
					}
					position++
					goto l243
				l245:
					position, tokenIndex = position243, tokenIndex243
					if buffer[position] != rune('p') {
						goto l241
					}
					position++
					if buffer[position] != rune('r') {
						goto l241
					}
					position++
					if buffer[position] != rune('e') {
						goto l241
					}
					position++
					if buffer[position] != rune('v') {
						goto l241
					}
					position++
					if buffer[position] != rune('i') {
						goto l241
					}
					position++
					if buffer[position] != rune('o') {
						goto l241
					}
					position++
					if buffer[position] != rune('u') {
						goto l241
					}
					position++
					if buffer[position] != rune('s') {
						goto l241
					}
					position++
				}
			l243:
				if !_rules[rule_]() {
					goto l241
				}
				add(ruleLAST, position242)
			}
			return true
		l241:
			position, tokenIndex = position241, tokenIndex241
			return false
		},
		/* 41 AT <- <('a' 't' _)> */
		func() bool {
			position246, tokenIndex246 := position, tokenIndex
			{
				position247 := position
				if buffer[position] != rune('a') {
					goto l246
				}
				position++
				if buffer[position] != rune('t') {
					goto l246
				}
				position++
				if !_rules[rule_]() {
					goto l246
				}
				add(ruleAT, position247)
			}
			return true
		l246:
			position, tokenIndex = position246, tokenIndex246
			return false
		},
		/* 42 ON <- <('o' 'n' _)> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				if buffer[position] != rune('o') {
					goto l248
				}
				position++
				if buffer[position] != rune('n') {
					goto l248
				}
				position++
				if !_rules[rule_]() {
					goto l248
				}
				add(ruleON, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 43 _ <- <Whitespace*> */
		func() bool {
			{
				position251 := position
			l252:
				{
					position253, tokenIndex253 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l253
					}
					goto l252
				l253:
					position, tokenIndex = position253, tokenIndex253
				}
				add(rule_, position251)
			}
			return true
		},
		/* 44 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position254, tokenIndex254 := position, tokenIndex
			{
				position255 := position
				{
					position256, tokenIndex256 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l257
					}
					position++
					goto l256
				l257:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('\t') {
						goto l258
					}
					position++
					goto l256
				l258:
					position, tokenIndex = position256, tokenIndex256
					if !_rules[ruleEOL]() {
						goto l254
					}
				}
			l256:
				add(ruleWhitespace, position255)
			}
			return true
		l254:
			position, tokenIndex = position254, tokenIndex254
			return false
		},
		/* 45 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position259, tokenIndex259 := position, tokenIndex
			{
				position260 := position
				{
					position261, tokenIndex261 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l262
					}
					position++
					if buffer[position] != rune('\n') {
						goto l262
					}
					position++
					goto l261
				l262:
					position, tokenIndex = position261, tokenIndex261
					if buffer[position] != rune('\n') {
						goto l263
					}
					position++
					goto l261
				l263:
					position, tokenIndex = position261, tokenIndex261
					if buffer[position] != rune('\r') {
						goto l259
					}
					position++
				}
			l261:
				add(ruleEOL, position260)
			}
			return true
		l259:
			position, tokenIndex = position259, tokenIndex259
			return false
		},
		/* 46 EOF <- <!.> */
		func() bool {
			position264, tokenIndex264 := position, tokenIndex
			{
				position265 := position
				{
					position266, tokenIndex266 := position, tokenIndex
					if !matchDot() {
						goto l266
					}
					goto l264
				l266:
					position, tokenIndex = position266, tokenIndex266
				}
				add(ruleEOF, position265)
			}
			return true
		l264:
			position, tokenIndex = position264, tokenIndex264
			return false
		},
		/* 48 Action0 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 49 Action1 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 50 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 51 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 52 Action4 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 53 Action5 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 54 Action6 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 55 Action7 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 56 Action8 <- <{
		   p.t = p.t.Add(-time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 57 Action9 <- <{
		   p.t = p.t.Add(time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 58 Action10 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 59 Action11 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 60 Action12 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 61 Action13 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 62 Action14 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 63 Action15 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 64 Action16 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 65 Action17 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 66 Action18 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 67 Action19 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 68 Action20 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 69 Action21 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 70 Action22 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 71 Action23 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 72 Action24 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 73 Action25 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 74 Action26 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 75 Action27 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 76 Action28 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 77 Action29 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 78 Action30 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 79 Action31 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 80 Action32 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		nil,
		/* 82 Action33 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 83 Action34 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 84 Action35 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 85 Action36 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 86 Action37 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 87 Action38 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 88 Action39 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 89 Action40 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 90 Action41 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 91 Action42 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 92 Action43 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 93 Action44 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 94 Action45 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 95 Action46 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 96 Action47 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 97 Action48 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 98 Action49 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 99 Action50 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 100 Action51 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 101 Action52 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 102 Action53 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 103 Action54 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 104 Action55 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 105 Action56 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 106 Action57 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 107 Action58 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 108 Action59 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 109 Action60 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 110 Action61 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 111 Action62 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 112 Action63 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 113 Action64 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 114 Action65 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 115 Action66 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
