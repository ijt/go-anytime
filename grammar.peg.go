package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	rulePegText
	ruleAction32
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"PegText",
	"Action32",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [113]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(time.Minute)

		case ruleAction1:

			p.t = p.t.Add(-time.Minute)

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction5:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction6:

			p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction9:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction10:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction11:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction12:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction13:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction14:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction15:

			p.t = prevMonth(p.t, p.month)

		case ruleAction16:

			p.t = nextMonth(p.t, p.month)

		case ruleAction17:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction18:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction19:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction20:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction21:

			p.t = truncateDay(p.t)

		case ruleAction22:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction23:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction24:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction25:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction26:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction27:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction28:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction29:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction30:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction31:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction32:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction33:
			p.number = 1
		case ruleAction34:
			p.number = 2
		case ruleAction35:
			p.number = 3
		case ruleAction36:
			p.number = 4
		case ruleAction37:
			p.number = 5
		case ruleAction38:
			p.number = 6
		case ruleAction39:
			p.number = 7
		case ruleAction40:
			p.number = 8
		case ruleAction41:
			p.number = 9
		case ruleAction42:
			p.number = 10
		case ruleAction43:
			p.weekday = time.Sunday
		case ruleAction44:
			p.weekday = time.Monday
		case ruleAction45:
			p.weekday = time.Tuesday
		case ruleAction46:
			p.weekday = time.Wednesday
		case ruleAction47:
			p.weekday = time.Thursday
		case ruleAction48:
			p.weekday = time.Friday
		case ruleAction49:
			p.weekday = time.Saturday
		case ruleAction50:
			p.month = time.January
		case ruleAction51:
			p.month = time.February
		case ruleAction52:
			p.month = time.March
		case ruleAction53:
			p.month = time.April
		case ruleAction54:
			p.month = time.May
		case ruleAction55:
			p.month = time.June
		case ruleAction56:
			p.month = time.July
		case ruleAction57:
			p.month = time.August
		case ruleAction58:
			p.month = time.September
		case ruleAction59:
			p.month = time.October
		case ruleAction60:
			p.month = time.November
		case ruleAction61:
			p.month = time.December
		case ruleAction62:
			p.number = 1
		case ruleAction63:
			p.number = 1
		case ruleAction64:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / (NEXT MINUTE Action0) / (LAST MINUTE Action1) / RelativeMinutes / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleNEXT]() {
						goto l8
					}
					if !_rules[ruleMINUTE]() {
						goto l8
					}
					if !_rules[ruleAction0]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleLAST]() {
						goto l9
					}
					if !_rules[ruleMINUTE]() {
						goto l9
					}
					if !_rules[ruleAction1]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l11
					}
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l12
					}
					goto l6
				l12:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l13
					}
					goto l6
				l13:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l14
					}
					goto l6
				l14:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l15
					}
					goto l6
				l15:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l16
					}
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l17
					}
					goto l6
				l17:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l18
					}
					{
						position19, tokenIndex19 := position, tokenIndex
						{
							position21, tokenIndex21 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l21
							}
							goto l22
						l21:
							position, tokenIndex = position21, tokenIndex21
						}
					l22:
						if !_rules[ruleTime]() {
							goto l19
						}
						goto l20
					l19:
						position, tokenIndex = position19, tokenIndex19
					}
				l20:
					goto l6
				l18:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position23, tokenIndex23 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l23
						}
						goto l24
					l23:
						position, tokenIndex = position23, tokenIndex23
					}
				l24:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action2) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action3) / (Last Number? MINUTES Action4) / (Next Number? MINUTES Action5) / (Number MINUTES Action6))> */
		func() bool {
			position25, tokenIndex25 := position, tokenIndex
			{
				position26 := position
				{
					position27, tokenIndex27 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l28
					}
					if !_rules[ruleMINUTES]() {
						goto l28
					}
					if !_rules[ruleAGO]() {
						goto l28
					}
					if !_rules[ruleAction2]() {
						goto l28
					}
					goto l27
				l28:
					position, tokenIndex = position27, tokenIndex27
					{
						position30, tokenIndex30 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l31
						}
						if !_rules[ruleMINUTES]() {
							goto l31
						}
						if !_rules[ruleFROM_NOW]() {
							goto l31
						}
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if !_rules[ruleIn]() {
							goto l29
						}
						{
							position32, tokenIndex32 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l32
							}
							goto l33
						l32:
							position, tokenIndex = position32, tokenIndex32
						}
					l33:
						if !_rules[ruleMINUTES]() {
							goto l29
						}
						{
							position34, tokenIndex34 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l34
							}
							goto l35
						l34:
							position, tokenIndex = position34, tokenIndex34
						}
					l35:
					}
				l30:
					if !_rules[ruleAction3]() {
						goto l29
					}
					goto l27
				l29:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleLast]() {
						goto l36
					}
					{
						position37, tokenIndex37 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l37
						}
						goto l38
					l37:
						position, tokenIndex = position37, tokenIndex37
					}
				l38:
					if !_rules[ruleMINUTES]() {
						goto l36
					}
					if !_rules[ruleAction4]() {
						goto l36
					}
					goto l27
				l36:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNext]() {
						goto l39
					}
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l40
						}
						goto l41
					l40:
						position, tokenIndex = position40, tokenIndex40
					}
				l41:
					if !_rules[ruleMINUTES]() {
						goto l39
					}
					if !_rules[ruleAction5]() {
						goto l39
					}
					goto l27
				l39:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNumber]() {
						goto l25
					}
					if !_rules[ruleMINUTES]() {
						goto l25
					}
					if !_rules[ruleAction6]() {
						goto l25
					}
				}
			l27:
				add(ruleRelativeMinutes, position26)
			}
			return true
		l25:
			position, tokenIndex = position25, tokenIndex25
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action7) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action8))> */
		func() bool {
			position42, tokenIndex42 := position, tokenIndex
			{
				position43 := position
				{
					position44, tokenIndex44 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l45
					}
					if !_rules[ruleHOURS]() {
						goto l45
					}
					if !_rules[ruleAGO]() {
						goto l45
					}
					if !_rules[ruleAction7]() {
						goto l45
					}
					goto l44
				l45:
					position, tokenIndex = position44, tokenIndex44
					{
						position46, tokenIndex46 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l47
						}
						if !_rules[ruleHOURS]() {
							goto l47
						}
						if !_rules[ruleFROM_NOW]() {
							goto l47
						}
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						if !_rules[ruleIn]() {
							goto l42
						}
						{
							position48, tokenIndex48 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l48
							}
							goto l49
						l48:
							position, tokenIndex = position48, tokenIndex48
						}
					l49:
						if !_rules[ruleHOURS]() {
							goto l42
						}
						{
							position50, tokenIndex50 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l50
							}
							goto l51
						l50:
							position, tokenIndex = position50, tokenIndex50
						}
					l51:
					}
				l46:
					if !_rules[ruleAction8]() {
						goto l42
					}
				}
			l44:
				add(ruleRelativeHours, position43)
			}
			return true
		l42:
			position, tokenIndex = position42, tokenIndex42
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action9) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action10))> */
		func() bool {
			position52, tokenIndex52 := position, tokenIndex
			{
				position53 := position
				{
					position54, tokenIndex54 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l55
					}
					if !_rules[ruleDAYS]() {
						goto l55
					}
					if !_rules[ruleAGO]() {
						goto l55
					}
					if !_rules[ruleAction9]() {
						goto l55
					}
					goto l54
				l55:
					position, tokenIndex = position54, tokenIndex54
					{
						position56, tokenIndex56 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l57
						}
						if !_rules[ruleDAYS]() {
							goto l57
						}
						if !_rules[ruleFROM_NOW]() {
							goto l57
						}
						goto l56
					l57:
						position, tokenIndex = position56, tokenIndex56
						if !_rules[ruleIn]() {
							goto l52
						}
						{
							position58, tokenIndex58 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l58
							}
							goto l59
						l58:
							position, tokenIndex = position58, tokenIndex58
						}
					l59:
						if !_rules[ruleDAYS]() {
							goto l52
						}
						{
							position60, tokenIndex60 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l60
							}
							goto l61
						l60:
							position, tokenIndex = position60, tokenIndex60
						}
					l61:
					}
				l56:
					if !_rules[ruleAction10]() {
						goto l52
					}
				}
			l54:
				add(ruleRelativeDays, position53)
			}
			return true
		l52:
			position, tokenIndex = position52, tokenIndex52
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action11) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action12))> */
		func() bool {
			position62, tokenIndex62 := position, tokenIndex
			{
				position63 := position
				{
					position64, tokenIndex64 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l65
					}
					if !_rules[ruleWEEKS]() {
						goto l65
					}
					if !_rules[ruleAGO]() {
						goto l65
					}
					if !_rules[ruleAction11]() {
						goto l65
					}
					goto l64
				l65:
					position, tokenIndex = position64, tokenIndex64
					{
						position66, tokenIndex66 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l67
						}
						if !_rules[ruleWEEKS]() {
							goto l67
						}
						if !_rules[ruleFROM_NOW]() {
							goto l67
						}
						goto l66
					l67:
						position, tokenIndex = position66, tokenIndex66
						if !_rules[ruleIn]() {
							goto l62
						}
						{
							position68, tokenIndex68 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l68
							}
							goto l69
						l68:
							position, tokenIndex = position68, tokenIndex68
						}
					l69:
						if !_rules[ruleWEEKS]() {
							goto l62
						}
						{
							position70, tokenIndex70 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l70
							}
							goto l71
						l70:
							position, tokenIndex = position70, tokenIndex70
						}
					l71:
					}
				l66:
					if !_rules[ruleAction12]() {
						goto l62
					}
				}
			l64:
				add(ruleRelativeWeeks, position63)
			}
			return true
		l62:
			position, tokenIndex = position62, tokenIndex62
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action13) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action14) / (LAST Month Action15) / (NEXT Month Action16))> */
		func() bool {
			position72, tokenIndex72 := position, tokenIndex
			{
				position73 := position
				{
					position74, tokenIndex74 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l75
					}
					if !_rules[ruleMONTHS]() {
						goto l75
					}
					if !_rules[ruleAGO]() {
						goto l75
					}
					if !_rules[ruleAction13]() {
						goto l75
					}
					goto l74
				l75:
					position, tokenIndex = position74, tokenIndex74
					{
						position77, tokenIndex77 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l78
						}
						if !_rules[ruleMONTHS]() {
							goto l78
						}
						if !_rules[ruleFROM_NOW]() {
							goto l78
						}
						goto l77
					l78:
						position, tokenIndex = position77, tokenIndex77
						if !_rules[ruleIn]() {
							goto l76
						}
						{
							position79, tokenIndex79 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l79
							}
							goto l80
						l79:
							position, tokenIndex = position79, tokenIndex79
						}
					l80:
						if !_rules[ruleMONTHS]() {
							goto l76
						}
						{
							position81, tokenIndex81 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l81
							}
							goto l82
						l81:
							position, tokenIndex = position81, tokenIndex81
						}
					l82:
					}
				l77:
					if !_rules[ruleAction14]() {
						goto l76
					}
					goto l74
				l76:
					position, tokenIndex = position74, tokenIndex74
					if !_rules[ruleLAST]() {
						goto l83
					}
					if !_rules[ruleMonth]() {
						goto l83
					}
					if !_rules[ruleAction15]() {
						goto l83
					}
					goto l74
				l83:
					position, tokenIndex = position74, tokenIndex74
					if !_rules[ruleNEXT]() {
						goto l72
					}
					if !_rules[ruleMonth]() {
						goto l72
					}
					if !_rules[ruleAction16]() {
						goto l72
					}
				}
			l74:
				add(ruleRelativeMonth, position73)
			}
			return true
		l72:
			position, tokenIndex = position72, tokenIndex72
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action17) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action18) / (LAST YEARS Action19) / (NEXT YEARS Action20))> */
		func() bool {
			position84, tokenIndex84 := position, tokenIndex
			{
				position85 := position
				{
					position86, tokenIndex86 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l87
					}
					if !_rules[ruleYEARS]() {
						goto l87
					}
					if !_rules[ruleAGO]() {
						goto l87
					}
					if !_rules[ruleAction17]() {
						goto l87
					}
					goto l86
				l87:
					position, tokenIndex = position86, tokenIndex86
					{
						position89, tokenIndex89 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l90
						}
						if !_rules[ruleYEARS]() {
							goto l90
						}
						if !_rules[ruleFROM_NOW]() {
							goto l90
						}
						goto l89
					l90:
						position, tokenIndex = position89, tokenIndex89
						if !_rules[ruleIn]() {
							goto l88
						}
						{
							position91, tokenIndex91 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l91
							}
							goto l92
						l91:
							position, tokenIndex = position91, tokenIndex91
						}
					l92:
						if !_rules[ruleYEARS]() {
							goto l88
						}
						{
							position93, tokenIndex93 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l93
							}
							goto l94
						l93:
							position, tokenIndex = position93, tokenIndex93
						}
					l94:
					}
				l89:
					if !_rules[ruleAction18]() {
						goto l88
					}
					goto l86
				l88:
					position, tokenIndex = position86, tokenIndex86
					if !_rules[ruleLAST]() {
						goto l95
					}
					if !_rules[ruleYEARS]() {
						goto l95
					}
					if !_rules[ruleAction19]() {
						goto l95
					}
					goto l86
				l95:
					position, tokenIndex = position86, tokenIndex86
					if !_rules[ruleNEXT]() {
						goto l84
					}
					if !_rules[ruleYEARS]() {
						goto l84
					}
					if !_rules[ruleAction20]() {
						goto l84
					}
				}
			l86:
				add(ruleRelativeYear, position85)
			}
			return true
		l84:
			position, tokenIndex = position84, tokenIndex84
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action21) / (YESTERDAY Action22) / (TOMORROW Action23) / (LAST Weekday Action24) / (NEXT Weekday Action25))> */
		func() bool {
			position96, tokenIndex96 := position, tokenIndex
			{
				position97 := position
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l99
					}
					if !_rules[ruleAction21]() {
						goto l99
					}
					goto l98
				l99:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleYESTERDAY]() {
						goto l100
					}
					if !_rules[ruleAction22]() {
						goto l100
					}
					goto l98
				l100:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleTOMORROW]() {
						goto l101
					}
					if !_rules[ruleAction23]() {
						goto l101
					}
					goto l98
				l101:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleLAST]() {
						goto l102
					}
					if !_rules[ruleWeekday]() {
						goto l102
					}
					if !_rules[ruleAction24]() {
						goto l102
					}
					goto l98
				l102:
					position, tokenIndex = position98, tokenIndex98
					if !_rules[ruleNEXT]() {
						goto l96
					}
					if !_rules[ruleWeekday]() {
						goto l96
					}
					if !_rules[ruleAction25]() {
						goto l96
					}
				}
			l98:
				add(ruleRelativeWeekdays, position97)
			}
			return true
		l96:
			position, tokenIndex = position96, tokenIndex96
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action26)> */
		func() bool {
			position103, tokenIndex103 := position, tokenIndex
			{
				position104 := position
				{
					position105, tokenIndex105 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l106
					}
					if !_rules[ruleOrdinal]() {
						goto l106
					}
					goto l105
				l106:
					position, tokenIndex = position105, tokenIndex105
					if !_rules[ruleLast]() {
						goto l103
					}
					{
						position107, tokenIndex107 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l107
						}
						goto l108
					l107:
						position, tokenIndex = position107, tokenIndex107
					}
				l108:
					if !_rules[ruleNumber]() {
						goto l103
					}
				}
			l105:
				if !_rules[ruleAction26]() {
					goto l103
				}
				add(ruleDate, position104)
			}
			return true
		l103:
			position, tokenIndex = position103, tokenIndex103
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position109, tokenIndex109 := position, tokenIndex
			{
				position110 := position
				{
					position111, tokenIndex111 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l112
					}
					goto l111
				l112:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleClock24Hour]() {
						goto l109
					}
				}
			l111:
				add(ruleTime, position110)
			}
			return true
		l109:
			position, tokenIndex = position109, tokenIndex109
			return false
		},
		/* 11 Clock12Hour <- <((Number Action27 (Minutes Seconds?)? AM) / (Number Action28 (Minutes Seconds?)? PM))> */
		func() bool {
			position113, tokenIndex113 := position, tokenIndex
			{
				position114 := position
				{
					position115, tokenIndex115 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l116
					}
					if !_rules[ruleAction27]() {
						goto l116
					}
					{
						position117, tokenIndex117 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l117
						}
						{
							position119, tokenIndex119 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l119
							}
							goto l120
						l119:
							position, tokenIndex = position119, tokenIndex119
						}
					l120:
						goto l118
					l117:
						position, tokenIndex = position117, tokenIndex117
					}
				l118:
					if !_rules[ruleAM]() {
						goto l116
					}
					goto l115
				l116:
					position, tokenIndex = position115, tokenIndex115
					if !_rules[ruleNumber]() {
						goto l113
					}
					if !_rules[ruleAction28]() {
						goto l113
					}
					{
						position121, tokenIndex121 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l121
						}
						{
							position123, tokenIndex123 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l123
							}
							goto l124
						l123:
							position, tokenIndex = position123, tokenIndex123
						}
					l124:
						goto l122
					l121:
						position, tokenIndex = position121, tokenIndex121
					}
				l122:
					if !_rules[rulePM]() {
						goto l113
					}
				}
			l115:
				add(ruleClock12Hour, position114)
			}
			return true
		l113:
			position, tokenIndex = position113, tokenIndex113
			return false
		},
		/* 12 Clock24Hour <- <(Number Action29 (Minutes Seconds?)?)> */
		func() bool {
			position125, tokenIndex125 := position, tokenIndex
			{
				position126 := position
				if !_rules[ruleNumber]() {
					goto l125
				}
				if !_rules[ruleAction29]() {
					goto l125
				}
				{
					position127, tokenIndex127 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l127
					}
					{
						position129, tokenIndex129 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l129
						}
						goto l130
					l129:
						position, tokenIndex = position129, tokenIndex129
					}
				l130:
					goto l128
				l127:
					position, tokenIndex = position127, tokenIndex127
				}
			l128:
				add(ruleClock24Hour, position126)
			}
			return true
		l125:
			position, tokenIndex = position125, tokenIndex125
			return false
		},
		/* 13 Minutes <- <(':' Number Action30)> */
		func() bool {
			position131, tokenIndex131 := position, tokenIndex
			{
				position132 := position
				if buffer[position] != rune(':') {
					goto l131
				}
				position++
				if !_rules[ruleNumber]() {
					goto l131
				}
				if !_rules[ruleAction30]() {
					goto l131
				}
				add(ruleMinutes, position132)
			}
			return true
		l131:
			position, tokenIndex = position131, tokenIndex131
			return false
		},
		/* 14 Seconds <- <(':' Number Action31)> */
		func() bool {
			position133, tokenIndex133 := position, tokenIndex
			{
				position134 := position
				if buffer[position] != rune(':') {
					goto l133
				}
				position++
				if !_rules[ruleNumber]() {
					goto l133
				}
				if !_rules[ruleAction31]() {
					goto l133
				}
				add(ruleSeconds, position134)
			}
			return true
		l133:
			position, tokenIndex = position133, tokenIndex133
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action32) / ('o' 'n' 'e' _ Action33) / ('t' 'w' 'o' _ Action34) / ('t' 'h' 'r' 'e' 'e' _ Action35) / ('f' 'o' 'u' 'r' _ Action36) / ('f' 'i' 'v' 'e' _ Action37) / ('s' 'i' 'x' _ Action38) / ('s' 'e' 'v' 'e' 'n' _ Action39) / ('e' 'i' 'g' 'h' 't' _ Action40) / ('n' 'i' 'n' 'e' _ Action41) / ('t' 'e' 'n' _ Action42))> */
		func() bool {
			position135, tokenIndex135 := position, tokenIndex
			{
				position136 := position
				{
					position137, tokenIndex137 := position, tokenIndex
					{
						position139 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l138
						}
						position++
					l140:
						{
							position141, tokenIndex141 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l141
							}
							position++
							goto l140
						l141:
							position, tokenIndex = position141, tokenIndex141
						}
						add(rulePegText, position139)
					}
					if !_rules[rule_]() {
						goto l138
					}
					if !_rules[ruleAction32]() {
						goto l138
					}
					goto l137
				l138:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('o') {
						goto l142
					}
					position++
					if buffer[position] != rune('n') {
						goto l142
					}
					position++
					if buffer[position] != rune('e') {
						goto l142
					}
					position++
					if !_rules[rule_]() {
						goto l142
					}
					if !_rules[ruleAction33]() {
						goto l142
					}
					goto l137
				l142:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('t') {
						goto l143
					}
					position++
					if buffer[position] != rune('w') {
						goto l143
					}
					position++
					if buffer[position] != rune('o') {
						goto l143
					}
					position++
					if !_rules[rule_]() {
						goto l143
					}
					if !_rules[ruleAction34]() {
						goto l143
					}
					goto l137
				l143:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('t') {
						goto l144
					}
					position++
					if buffer[position] != rune('h') {
						goto l144
					}
					position++
					if buffer[position] != rune('r') {
						goto l144
					}
					position++
					if buffer[position] != rune('e') {
						goto l144
					}
					position++
					if buffer[position] != rune('e') {
						goto l144
					}
					position++
					if !_rules[rule_]() {
						goto l144
					}
					if !_rules[ruleAction35]() {
						goto l144
					}
					goto l137
				l144:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('f') {
						goto l145
					}
					position++
					if buffer[position] != rune('o') {
						goto l145
					}
					position++
					if buffer[position] != rune('u') {
						goto l145
					}
					position++
					if buffer[position] != rune('r') {
						goto l145
					}
					position++
					if !_rules[rule_]() {
						goto l145
					}
					if !_rules[ruleAction36]() {
						goto l145
					}
					goto l137
				l145:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('f') {
						goto l146
					}
					position++
					if buffer[position] != rune('i') {
						goto l146
					}
					position++
					if buffer[position] != rune('v') {
						goto l146
					}
					position++
					if buffer[position] != rune('e') {
						goto l146
					}
					position++
					if !_rules[rule_]() {
						goto l146
					}
					if !_rules[ruleAction37]() {
						goto l146
					}
					goto l137
				l146:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('s') {
						goto l147
					}
					position++
					if buffer[position] != rune('i') {
						goto l147
					}
					position++
					if buffer[position] != rune('x') {
						goto l147
					}
					position++
					if !_rules[rule_]() {
						goto l147
					}
					if !_rules[ruleAction38]() {
						goto l147
					}
					goto l137
				l147:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('s') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if buffer[position] != rune('v') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if buffer[position] != rune('n') {
						goto l148
					}
					position++
					if !_rules[rule_]() {
						goto l148
					}
					if !_rules[ruleAction39]() {
						goto l148
					}
					goto l137
				l148:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('e') {
						goto l149
					}
					position++
					if buffer[position] != rune('i') {
						goto l149
					}
					position++
					if buffer[position] != rune('g') {
						goto l149
					}
					position++
					if buffer[position] != rune('h') {
						goto l149
					}
					position++
					if buffer[position] != rune('t') {
						goto l149
					}
					position++
					if !_rules[rule_]() {
						goto l149
					}
					if !_rules[ruleAction40]() {
						goto l149
					}
					goto l137
				l149:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('n') {
						goto l150
					}
					position++
					if buffer[position] != rune('i') {
						goto l150
					}
					position++
					if buffer[position] != rune('n') {
						goto l150
					}
					position++
					if buffer[position] != rune('e') {
						goto l150
					}
					position++
					if !_rules[rule_]() {
						goto l150
					}
					if !_rules[ruleAction41]() {
						goto l150
					}
					goto l137
				l150:
					position, tokenIndex = position137, tokenIndex137
					if buffer[position] != rune('t') {
						goto l135
					}
					position++
					if buffer[position] != rune('e') {
						goto l135
					}
					position++
					if buffer[position] != rune('n') {
						goto l135
					}
					position++
					if !_rules[rule_]() {
						goto l135
					}
					if !_rules[ruleAction42]() {
						goto l135
					}
				}
			l137:
				add(ruleNumber, position136)
			}
			return true
		l135:
			position, tokenIndex = position135, tokenIndex135
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action43) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action44) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action45) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action46) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action47) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action48) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action49))> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				{
					position153, tokenIndex153 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l154
					}
					position++
					if buffer[position] != rune('u') {
						goto l154
					}
					position++
					if buffer[position] != rune('n') {
						goto l154
					}
					position++
					if buffer[position] != rune('d') {
						goto l154
					}
					position++
					if buffer[position] != rune('a') {
						goto l154
					}
					position++
					if buffer[position] != rune('y') {
						goto l154
					}
					position++
					if !_rules[rule_]() {
						goto l154
					}
					if !_rules[ruleAction43]() {
						goto l154
					}
					goto l153
				l154:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('m') {
						goto l155
					}
					position++
					if buffer[position] != rune('o') {
						goto l155
					}
					position++
					if buffer[position] != rune('n') {
						goto l155
					}
					position++
					if buffer[position] != rune('d') {
						goto l155
					}
					position++
					if buffer[position] != rune('a') {
						goto l155
					}
					position++
					if buffer[position] != rune('y') {
						goto l155
					}
					position++
					if !_rules[rule_]() {
						goto l155
					}
					if !_rules[ruleAction44]() {
						goto l155
					}
					goto l153
				l155:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('t') {
						goto l156
					}
					position++
					if buffer[position] != rune('u') {
						goto l156
					}
					position++
					if buffer[position] != rune('e') {
						goto l156
					}
					position++
					if buffer[position] != rune('s') {
						goto l156
					}
					position++
					if buffer[position] != rune('d') {
						goto l156
					}
					position++
					if buffer[position] != rune('a') {
						goto l156
					}
					position++
					if buffer[position] != rune('y') {
						goto l156
					}
					position++
					if !_rules[rule_]() {
						goto l156
					}
					if !_rules[ruleAction45]() {
						goto l156
					}
					goto l153
				l156:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('w') {
						goto l157
					}
					position++
					if buffer[position] != rune('e') {
						goto l157
					}
					position++
					if buffer[position] != rune('d') {
						goto l157
					}
					position++
					if buffer[position] != rune('n') {
						goto l157
					}
					position++
					if buffer[position] != rune('e') {
						goto l157
					}
					position++
					if buffer[position] != rune('s') {
						goto l157
					}
					position++
					if buffer[position] != rune('d') {
						goto l157
					}
					position++
					if buffer[position] != rune('a') {
						goto l157
					}
					position++
					if buffer[position] != rune('y') {
						goto l157
					}
					position++
					if !_rules[rule_]() {
						goto l157
					}
					if !_rules[ruleAction46]() {
						goto l157
					}
					goto l153
				l157:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('t') {
						goto l158
					}
					position++
					if buffer[position] != rune('h') {
						goto l158
					}
					position++
					if buffer[position] != rune('u') {
						goto l158
					}
					position++
					if buffer[position] != rune('r') {
						goto l158
					}
					position++
					if buffer[position] != rune('s') {
						goto l158
					}
					position++
					if buffer[position] != rune('d') {
						goto l158
					}
					position++
					if buffer[position] != rune('a') {
						goto l158
					}
					position++
					if buffer[position] != rune('y') {
						goto l158
					}
					position++
					if !_rules[rule_]() {
						goto l158
					}
					if !_rules[ruleAction47]() {
						goto l158
					}
					goto l153
				l158:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('f') {
						goto l159
					}
					position++
					if buffer[position] != rune('r') {
						goto l159
					}
					position++
					if buffer[position] != rune('i') {
						goto l159
					}
					position++
					if buffer[position] != rune('d') {
						goto l159
					}
					position++
					if buffer[position] != rune('a') {
						goto l159
					}
					position++
					if buffer[position] != rune('y') {
						goto l159
					}
					position++
					if !_rules[rule_]() {
						goto l159
					}
					if !_rules[ruleAction48]() {
						goto l159
					}
					goto l153
				l159:
					position, tokenIndex = position153, tokenIndex153
					if buffer[position] != rune('s') {
						goto l151
					}
					position++
					if buffer[position] != rune('a') {
						goto l151
					}
					position++
					if buffer[position] != rune('t') {
						goto l151
					}
					position++
					if buffer[position] != rune('u') {
						goto l151
					}
					position++
					if buffer[position] != rune('r') {
						goto l151
					}
					position++
					if buffer[position] != rune('d') {
						goto l151
					}
					position++
					if buffer[position] != rune('a') {
						goto l151
					}
					position++
					if buffer[position] != rune('y') {
						goto l151
					}
					position++
					if !_rules[rule_]() {
						goto l151
					}
					if !_rules[ruleAction49]() {
						goto l151
					}
				}
			l153:
				add(ruleWeekday, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action50) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action51) / ('m' 'a' 'r' 'c' 'h' _ Action52) / ('a' 'p' 'r' 'i' 'l' _ Action53) / ('m' 'a' 'y' _ Action54) / ('j' 'u' 'n' 'e' _ Action55) / ('j' 'u' 'l' 'y' _ Action56) / ('a' 'u' 'g' 'u' 's' 't' _ Action57) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action58) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action59) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action60) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action61))> */
		func() bool {
			position160, tokenIndex160 := position, tokenIndex
			{
				position161 := position
				{
					position162, tokenIndex162 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l163
					}
					position++
					if buffer[position] != rune('a') {
						goto l163
					}
					position++
					if buffer[position] != rune('n') {
						goto l163
					}
					position++
					if buffer[position] != rune('u') {
						goto l163
					}
					position++
					if buffer[position] != rune('a') {
						goto l163
					}
					position++
					if buffer[position] != rune('r') {
						goto l163
					}
					position++
					if buffer[position] != rune('y') {
						goto l163
					}
					position++
					if !_rules[rule_]() {
						goto l163
					}
					if !_rules[ruleAction50]() {
						goto l163
					}
					goto l162
				l163:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('f') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('b') {
						goto l164
					}
					position++
					if buffer[position] != rune('r') {
						goto l164
					}
					position++
					if buffer[position] != rune('u') {
						goto l164
					}
					position++
					if buffer[position] != rune('a') {
						goto l164
					}
					position++
					if buffer[position] != rune('r') {
						goto l164
					}
					position++
					if buffer[position] != rune('y') {
						goto l164
					}
					position++
					if !_rules[rule_]() {
						goto l164
					}
					if !_rules[ruleAction51]() {
						goto l164
					}
					goto l162
				l164:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('m') {
						goto l165
					}
					position++
					if buffer[position] != rune('a') {
						goto l165
					}
					position++
					if buffer[position] != rune('r') {
						goto l165
					}
					position++
					if buffer[position] != rune('c') {
						goto l165
					}
					position++
					if buffer[position] != rune('h') {
						goto l165
					}
					position++
					if !_rules[rule_]() {
						goto l165
					}
					if !_rules[ruleAction52]() {
						goto l165
					}
					goto l162
				l165:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('a') {
						goto l166
					}
					position++
					if buffer[position] != rune('p') {
						goto l166
					}
					position++
					if buffer[position] != rune('r') {
						goto l166
					}
					position++
					if buffer[position] != rune('i') {
						goto l166
					}
					position++
					if buffer[position] != rune('l') {
						goto l166
					}
					position++
					if !_rules[rule_]() {
						goto l166
					}
					if !_rules[ruleAction53]() {
						goto l166
					}
					goto l162
				l166:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('m') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('y') {
						goto l167
					}
					position++
					if !_rules[rule_]() {
						goto l167
					}
					if !_rules[ruleAction54]() {
						goto l167
					}
					goto l162
				l167:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('j') {
						goto l168
					}
					position++
					if buffer[position] != rune('u') {
						goto l168
					}
					position++
					if buffer[position] != rune('n') {
						goto l168
					}
					position++
					if buffer[position] != rune('e') {
						goto l168
					}
					position++
					if !_rules[rule_]() {
						goto l168
					}
					if !_rules[ruleAction55]() {
						goto l168
					}
					goto l162
				l168:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('j') {
						goto l169
					}
					position++
					if buffer[position] != rune('u') {
						goto l169
					}
					position++
					if buffer[position] != rune('l') {
						goto l169
					}
					position++
					if buffer[position] != rune('y') {
						goto l169
					}
					position++
					if !_rules[rule_]() {
						goto l169
					}
					if !_rules[ruleAction56]() {
						goto l169
					}
					goto l162
				l169:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('a') {
						goto l170
					}
					position++
					if buffer[position] != rune('u') {
						goto l170
					}
					position++
					if buffer[position] != rune('g') {
						goto l170
					}
					position++
					if buffer[position] != rune('u') {
						goto l170
					}
					position++
					if buffer[position] != rune('s') {
						goto l170
					}
					position++
					if buffer[position] != rune('t') {
						goto l170
					}
					position++
					if !_rules[rule_]() {
						goto l170
					}
					if !_rules[ruleAction57]() {
						goto l170
					}
					goto l162
				l170:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('s') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if buffer[position] != rune('p') {
						goto l171
					}
					position++
					if buffer[position] != rune('t') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if buffer[position] != rune('m') {
						goto l171
					}
					position++
					if buffer[position] != rune('b') {
						goto l171
					}
					position++
					if buffer[position] != rune('e') {
						goto l171
					}
					position++
					if buffer[position] != rune('r') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction58]() {
						goto l171
					}
					goto l162
				l171:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('c') {
						goto l172
					}
					position++
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('b') {
						goto l172
					}
					position++
					if buffer[position] != rune('e') {
						goto l172
					}
					position++
					if buffer[position] != rune('r') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction59]() {
						goto l172
					}
					goto l162
				l172:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('n') {
						goto l173
					}
					position++
					if buffer[position] != rune('o') {
						goto l173
					}
					position++
					if buffer[position] != rune('v') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('m') {
						goto l173
					}
					position++
					if buffer[position] != rune('b') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('r') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction60]() {
						goto l173
					}
					goto l162
				l173:
					position, tokenIndex = position162, tokenIndex162
					if buffer[position] != rune('d') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if buffer[position] != rune('c') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if buffer[position] != rune('m') {
						goto l160
					}
					position++
					if buffer[position] != rune('b') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if buffer[position] != rune('r') {
						goto l160
					}
					position++
					if !_rules[rule_]() {
						goto l160
					}
					if !_rules[ruleAction61]() {
						goto l160
					}
				}
			l162:
				add(ruleMonth, position161)
			}
			return true
		l160:
			position, tokenIndex = position160, tokenIndex160
			return false
		},
		/* 18 In <- <(IN Action62)> */
		func() bool {
			position174, tokenIndex174 := position, tokenIndex
			{
				position175 := position
				if !_rules[ruleIN]() {
					goto l174
				}
				if !_rules[ruleAction62]() {
					goto l174
				}
				add(ruleIn, position175)
			}
			return true
		l174:
			position, tokenIndex = position174, tokenIndex174
			return false
		},
		/* 19 Last <- <(LAST Action63)> */
		func() bool {
			position176, tokenIndex176 := position, tokenIndex
			{
				position177 := position
				if !_rules[ruleLAST]() {
					goto l176
				}
				if !_rules[ruleAction63]() {
					goto l176
				}
				add(ruleLast, position177)
			}
			return true
		l176:
			position, tokenIndex = position176, tokenIndex176
			return false
		},
		/* 20 Next <- <(NEXT Action64)> */
		func() bool {
			position178, tokenIndex178 := position, tokenIndex
			{
				position179 := position
				if !_rules[ruleNEXT]() {
					goto l178
				}
				if !_rules[ruleAction64]() {
					goto l178
				}
				add(ruleNext, position179)
			}
			return true
		l178:
			position, tokenIndex = position178, tokenIndex178
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position180, tokenIndex180 := position, tokenIndex
			{
				position181 := position
				{
					position182, tokenIndex182 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l183
					}
					position++
					if buffer[position] != rune('t') {
						goto l183
					}
					position++
					goto l182
				l183:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('d') {
						goto l184
					}
					position++
					goto l182
				l184:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('r') {
						goto l185
					}
					position++
					if buffer[position] != rune('d') {
						goto l185
					}
					position++
					goto l182
				l185:
					position, tokenIndex = position182, tokenIndex182
					if buffer[position] != rune('t') {
						goto l180
					}
					position++
					if buffer[position] != rune('h') {
						goto l180
					}
					position++
				}
			l182:
				if !_rules[rule_]() {
					goto l180
				}
				add(ruleOrdinal, position181)
			}
			return true
		l180:
			position, tokenIndex = position180, tokenIndex180
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position186, tokenIndex186 := position, tokenIndex
			{
				position187 := position
				if buffer[position] != rune('y') {
					goto l186
				}
				position++
				if buffer[position] != rune('e') {
					goto l186
				}
				position++
				if buffer[position] != rune('a') {
					goto l186
				}
				position++
				if buffer[position] != rune('r') {
					goto l186
				}
				position++
				{
					position188, tokenIndex188 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l188
					}
					position++
					goto l189
				l188:
					position, tokenIndex = position188, tokenIndex188
				}
			l189:
				if !_rules[rule_]() {
					goto l186
				}
				add(ruleYEARS, position187)
			}
			return true
		l186:
			position, tokenIndex = position186, tokenIndex186
			return false
		},
		/* 23 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				if buffer[position] != rune('m') {
					goto l190
				}
				position++
				if buffer[position] != rune('o') {
					goto l190
				}
				position++
				if buffer[position] != rune('n') {
					goto l190
				}
				position++
				if buffer[position] != rune('t') {
					goto l190
				}
				position++
				if buffer[position] != rune('h') {
					goto l190
				}
				position++
				{
					position192, tokenIndex192 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l192
					}
					position++
					goto l193
				l192:
					position, tokenIndex = position192, tokenIndex192
				}
			l193:
				if !_rules[rule_]() {
					goto l190
				}
				add(ruleMONTHS, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 24 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				if buffer[position] != rune('w') {
					goto l194
				}
				position++
				if buffer[position] != rune('e') {
					goto l194
				}
				position++
				if buffer[position] != rune('e') {
					goto l194
				}
				position++
				if buffer[position] != rune('k') {
					goto l194
				}
				position++
				{
					position196, tokenIndex196 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l196
					}
					position++
					goto l197
				l196:
					position, tokenIndex = position196, tokenIndex196
				}
			l197:
				if !_rules[rule_]() {
					goto l194
				}
				add(ruleWEEKS, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 25 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position198, tokenIndex198 := position, tokenIndex
			{
				position199 := position
				if buffer[position] != rune('d') {
					goto l198
				}
				position++
				if buffer[position] != rune('a') {
					goto l198
				}
				position++
				if buffer[position] != rune('y') {
					goto l198
				}
				position++
				{
					position200, tokenIndex200 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l200
					}
					position++
					goto l201
				l200:
					position, tokenIndex = position200, tokenIndex200
				}
			l201:
				if !_rules[rule_]() {
					goto l198
				}
				add(ruleDAYS, position199)
			}
			return true
		l198:
			position, tokenIndex = position198, tokenIndex198
			return false
		},
		/* 26 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position202, tokenIndex202 := position, tokenIndex
			{
				position203 := position
				if buffer[position] != rune('h') {
					goto l202
				}
				position++
				if buffer[position] != rune('o') {
					goto l202
				}
				position++
				if buffer[position] != rune('u') {
					goto l202
				}
				position++
				if buffer[position] != rune('r') {
					goto l202
				}
				position++
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l204
					}
					position++
					goto l205
				l204:
					position, tokenIndex = position204, tokenIndex204
				}
			l205:
				if !_rules[rule_]() {
					goto l202
				}
				add(ruleHOURS, position203)
			}
			return true
		l202:
			position, tokenIndex = position202, tokenIndex202
			return false
		},
		/* 27 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position206, tokenIndex206 := position, tokenIndex
			{
				position207 := position
				if buffer[position] != rune('m') {
					goto l206
				}
				position++
				if buffer[position] != rune('i') {
					goto l206
				}
				position++
				if buffer[position] != rune('n') {
					goto l206
				}
				position++
				if buffer[position] != rune('u') {
					goto l206
				}
				position++
				if buffer[position] != rune('t') {
					goto l206
				}
				position++
				if buffer[position] != rune('e') {
					goto l206
				}
				position++
				{
					position208, tokenIndex208 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					goto l209
				l208:
					position, tokenIndex = position208, tokenIndex208
				}
			l209:
				if !_rules[rule_]() {
					goto l206
				}
				add(ruleMINUTES, position207)
			}
			return true
		l206:
			position, tokenIndex = position206, tokenIndex206
			return false
		},
		/* 28 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				if buffer[position] != rune('m') {
					goto l210
				}
				position++
				if buffer[position] != rune('i') {
					goto l210
				}
				position++
				if buffer[position] != rune('n') {
					goto l210
				}
				position++
				if buffer[position] != rune('u') {
					goto l210
				}
				position++
				if buffer[position] != rune('t') {
					goto l210
				}
				position++
				if buffer[position] != rune('e') {
					goto l210
				}
				position++
				if !_rules[rule_]() {
					goto l210
				}
				add(ruleMINUTE, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 29 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position212, tokenIndex212 := position, tokenIndex
			{
				position213 := position
				if buffer[position] != rune('y') {
					goto l212
				}
				position++
				if buffer[position] != rune('e') {
					goto l212
				}
				position++
				if buffer[position] != rune('s') {
					goto l212
				}
				position++
				if buffer[position] != rune('t') {
					goto l212
				}
				position++
				if buffer[position] != rune('e') {
					goto l212
				}
				position++
				if buffer[position] != rune('r') {
					goto l212
				}
				position++
				if buffer[position] != rune('d') {
					goto l212
				}
				position++
				if buffer[position] != rune('a') {
					goto l212
				}
				position++
				if buffer[position] != rune('y') {
					goto l212
				}
				position++
				if !_rules[rule_]() {
					goto l212
				}
				add(ruleYESTERDAY, position213)
			}
			return true
		l212:
			position, tokenIndex = position212, tokenIndex212
			return false
		},
		/* 30 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position214, tokenIndex214 := position, tokenIndex
			{
				position215 := position
				if buffer[position] != rune('t') {
					goto l214
				}
				position++
				if buffer[position] != rune('o') {
					goto l214
				}
				position++
				if buffer[position] != rune('m') {
					goto l214
				}
				position++
				if buffer[position] != rune('o') {
					goto l214
				}
				position++
				if buffer[position] != rune('r') {
					goto l214
				}
				position++
				if buffer[position] != rune('r') {
					goto l214
				}
				position++
				if buffer[position] != rune('o') {
					goto l214
				}
				position++
				if buffer[position] != rune('w') {
					goto l214
				}
				position++
				if !_rules[rule_]() {
					goto l214
				}
				add(ruleTOMORROW, position215)
			}
			return true
		l214:
			position, tokenIndex = position214, tokenIndex214
			return false
		},
		/* 31 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position216, tokenIndex216 := position, tokenIndex
			{
				position217 := position
				if buffer[position] != rune('t') {
					goto l216
				}
				position++
				if buffer[position] != rune('o') {
					goto l216
				}
				position++
				if buffer[position] != rune('d') {
					goto l216
				}
				position++
				if buffer[position] != rune('a') {
					goto l216
				}
				position++
				if buffer[position] != rune('y') {
					goto l216
				}
				position++
				if !_rules[rule_]() {
					goto l216
				}
				add(ruleTODAY, position217)
			}
			return true
		l216:
			position, tokenIndex = position216, tokenIndex216
			return false
		},
		/* 32 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position218, tokenIndex218 := position, tokenIndex
			{
				position219 := position
				if buffer[position] != rune('a') {
					goto l218
				}
				position++
				if buffer[position] != rune('g') {
					goto l218
				}
				position++
				if buffer[position] != rune('o') {
					goto l218
				}
				position++
				if !_rules[rule_]() {
					goto l218
				}
				add(ruleAGO, position219)
			}
			return true
		l218:
			position, tokenIndex = position218, tokenIndex218
			return false
		},
		/* 33 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position220, tokenIndex220 := position, tokenIndex
			{
				position221 := position
				if buffer[position] != rune('f') {
					goto l220
				}
				position++
				if buffer[position] != rune('r') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('m') {
					goto l220
				}
				position++
				if buffer[position] != rune(' ') {
					goto l220
				}
				position++
				if buffer[position] != rune('n') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('w') {
					goto l220
				}
				position++
				if !_rules[rule_]() {
					goto l220
				}
				add(ruleFROM_NOW, position221)
			}
			return true
		l220:
			position, tokenIndex = position220, tokenIndex220
			return false
		},
		/* 34 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position222, tokenIndex222 := position, tokenIndex
			{
				position223 := position
				if buffer[position] != rune('n') {
					goto l222
				}
				position++
				if buffer[position] != rune('o') {
					goto l222
				}
				position++
				if buffer[position] != rune('w') {
					goto l222
				}
				position++
				if !_rules[rule_]() {
					goto l222
				}
				add(ruleNOW, position223)
			}
			return true
		l222:
			position, tokenIndex = position222, tokenIndex222
			return false
		},
		/* 35 AM <- <('a' 'm' _)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('a') {
					goto l224
				}
				position++
				if buffer[position] != rune('m') {
					goto l224
				}
				position++
				if !_rules[rule_]() {
					goto l224
				}
				add(ruleAM, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 36 PM <- <('p' 'm' _)> */
		func() bool {
			position226, tokenIndex226 := position, tokenIndex
			{
				position227 := position
				if buffer[position] != rune('p') {
					goto l226
				}
				position++
				if buffer[position] != rune('m') {
					goto l226
				}
				position++
				if !_rules[rule_]() {
					goto l226
				}
				add(rulePM, position227)
			}
			return true
		l226:
			position, tokenIndex = position226, tokenIndex226
			return false
		},
		/* 37 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('n') {
					goto l228
				}
				position++
				if buffer[position] != rune('e') {
					goto l228
				}
				position++
				if buffer[position] != rune('x') {
					goto l228
				}
				position++
				if buffer[position] != rune('t') {
					goto l228
				}
				position++
				if !_rules[rule_]() {
					goto l228
				}
				add(ruleNEXT, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 38 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position230, tokenIndex230 := position, tokenIndex
			{
				position231 := position
				{
					position232, tokenIndex232 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l233
					}
					position++
					if buffer[position] != rune('n') {
						goto l233
					}
					position++
					if buffer[position] != rune(' ') {
						goto l233
					}
					position++
					if buffer[position] != rune('a') {
						goto l233
					}
					position++
					if buffer[position] != rune('n') {
						goto l233
					}
					position++
					goto l232
				l233:
					position, tokenIndex = position232, tokenIndex232
					if buffer[position] != rune('i') {
						goto l234
					}
					position++
					if buffer[position] != rune('n') {
						goto l234
					}
					position++
					if buffer[position] != rune(' ') {
						goto l234
					}
					position++
					if buffer[position] != rune('a') {
						goto l234
					}
					position++
					goto l232
				l234:
					position, tokenIndex = position232, tokenIndex232
					if buffer[position] != rune('i') {
						goto l230
					}
					position++
					if buffer[position] != rune('n') {
						goto l230
					}
					position++
				}
			l232:
				if !_rules[rule_]() {
					goto l230
				}
				add(ruleIN, position231)
			}
			return true
		l230:
			position, tokenIndex = position230, tokenIndex230
			return false
		},
		/* 39 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position235, tokenIndex235 := position, tokenIndex
			{
				position236 := position
				{
					position237, tokenIndex237 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l238
					}
					position++
					if buffer[position] != rune('a') {
						goto l238
					}
					position++
					if buffer[position] != rune('s') {
						goto l238
					}
					position++
					if buffer[position] != rune('t') {
						goto l238
					}
					position++
					goto l237
				l238:
					position, tokenIndex = position237, tokenIndex237
					if buffer[position] != rune('p') {
						goto l239
					}
					position++
					if buffer[position] != rune('a') {
						goto l239
					}
					position++
					if buffer[position] != rune('s') {
						goto l239
					}
					position++
					if buffer[position] != rune('t') {
						goto l239
					}
					position++
					goto l237
				l239:
					position, tokenIndex = position237, tokenIndex237
					if buffer[position] != rune('p') {
						goto l235
					}
					position++
					if buffer[position] != rune('r') {
						goto l235
					}
					position++
					if buffer[position] != rune('e') {
						goto l235
					}
					position++
					if buffer[position] != rune('v') {
						goto l235
					}
					position++
					if buffer[position] != rune('i') {
						goto l235
					}
					position++
					if buffer[position] != rune('o') {
						goto l235
					}
					position++
					if buffer[position] != rune('u') {
						goto l235
					}
					position++
					if buffer[position] != rune('s') {
						goto l235
					}
					position++
				}
			l237:
				if !_rules[rule_]() {
					goto l235
				}
				add(ruleLAST, position236)
			}
			return true
		l235:
			position, tokenIndex = position235, tokenIndex235
			return false
		},
		/* 40 AT <- <('a' 't' _)> */
		func() bool {
			position240, tokenIndex240 := position, tokenIndex
			{
				position241 := position
				if buffer[position] != rune('a') {
					goto l240
				}
				position++
				if buffer[position] != rune('t') {
					goto l240
				}
				position++
				if !_rules[rule_]() {
					goto l240
				}
				add(ruleAT, position241)
			}
			return true
		l240:
			position, tokenIndex = position240, tokenIndex240
			return false
		},
		/* 41 ON <- <('o' 'n' _)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				if buffer[position] != rune('o') {
					goto l242
				}
				position++
				if buffer[position] != rune('n') {
					goto l242
				}
				position++
				if !_rules[rule_]() {
					goto l242
				}
				add(ruleON, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 42 _ <- <Whitespace*> */
		func() bool {
			{
				position245 := position
			l246:
				{
					position247, tokenIndex247 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l247
					}
					goto l246
				l247:
					position, tokenIndex = position247, tokenIndex247
				}
				add(rule_, position245)
			}
			return true
		},
		/* 43 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('\t') {
						goto l252
					}
					position++
					goto l250
				l252:
					position, tokenIndex = position250, tokenIndex250
					if !_rules[ruleEOL]() {
						goto l248
					}
				}
			l250:
				add(ruleWhitespace, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 44 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l256
					}
					position++
					if buffer[position] != rune('\n') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('\n') {
						goto l257
					}
					position++
					goto l255
				l257:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('\r') {
						goto l253
					}
					position++
				}
			l255:
				add(ruleEOL, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 45 EOF <- <!.> */
		func() bool {
			position258, tokenIndex258 := position, tokenIndex
			{
				position259 := position
				{
					position260, tokenIndex260 := position, tokenIndex
					if !matchDot() {
						goto l260
					}
					goto l258
				l260:
					position, tokenIndex = position260, tokenIndex260
				}
				add(ruleEOF, position259)
			}
			return true
		l258:
			position, tokenIndex = position258, tokenIndex258
			return false
		},
		/* 47 Action0 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 48 Action1 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 49 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 50 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 51 Action4 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 52 Action5 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 53 Action6 <- <{
		   p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 54 Action7 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 55 Action8 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 56 Action9 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 57 Action10 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 58 Action11 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 59 Action12 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 60 Action13 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 61 Action14 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 62 Action15 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 63 Action16 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 64 Action17 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 65 Action18 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 66 Action19 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 67 Action20 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 68 Action21 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 69 Action22 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 70 Action23 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 71 Action24 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 72 Action25 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 73 Action26 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 74 Action27 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 75 Action28 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 76 Action29 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 77 Action30 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 78 Action31 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		nil,
		/* 80 Action32 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		/* 81 Action33 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 82 Action34 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 83 Action35 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 84 Action36 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 85 Action37 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 86 Action38 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 87 Action39 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 88 Action40 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 89 Action41 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 90 Action42 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 91 Action43 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 92 Action44 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 93 Action45 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 94 Action46 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 95 Action47 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 96 Action48 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 97 Action49 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 98 Action50 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 99 Action51 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 100 Action52 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 101 Action53 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 102 Action54 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 103 Action55 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 104 Action56 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 105 Action57 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 106 Action58 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 107 Action59 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 108 Action60 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 109 Action61 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 110 Action62 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 111 Action63 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 112 Action64 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
