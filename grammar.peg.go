package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleHOUR
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	ruleAction33
	rulePegText
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"HOUR",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"Action33",
	"PegText",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [116]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(time.Minute)

		case ruleAction1:

			p.t = p.t.Add(-time.Minute)

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction5:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction6:

			p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction9:

			p.t = p.t.Add(-time.Hour)

		case ruleAction10:

			p.t = p.t.Add(time.Hour)

		case ruleAction11:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction12:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction13:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction14:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction15:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction16:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction17:

			p.t = prevMonth(p.t, p.month)

		case ruleAction18:

			p.t = nextMonth(p.t, p.month)

		case ruleAction19:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction20:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction21:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction22:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction23:

			p.t = truncateDay(p.t)

		case ruleAction24:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction25:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction26:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction27:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction28:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction29:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction30:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction31:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction32:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction33:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction34:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction35:
			p.number = 1
		case ruleAction36:
			p.number = 2
		case ruleAction37:
			p.number = 3
		case ruleAction38:
			p.number = 4
		case ruleAction39:
			p.number = 5
		case ruleAction40:
			p.number = 6
		case ruleAction41:
			p.number = 7
		case ruleAction42:
			p.number = 8
		case ruleAction43:
			p.number = 9
		case ruleAction44:
			p.number = 10
		case ruleAction45:
			p.weekday = time.Sunday
		case ruleAction46:
			p.weekday = time.Monday
		case ruleAction47:
			p.weekday = time.Tuesday
		case ruleAction48:
			p.weekday = time.Wednesday
		case ruleAction49:
			p.weekday = time.Thursday
		case ruleAction50:
			p.weekday = time.Friday
		case ruleAction51:
			p.weekday = time.Saturday
		case ruleAction52:
			p.month = time.January
		case ruleAction53:
			p.month = time.February
		case ruleAction54:
			p.month = time.March
		case ruleAction55:
			p.month = time.April
		case ruleAction56:
			p.month = time.May
		case ruleAction57:
			p.month = time.June
		case ruleAction58:
			p.month = time.July
		case ruleAction59:
			p.month = time.August
		case ruleAction60:
			p.month = time.September
		case ruleAction61:
			p.month = time.October
		case ruleAction62:
			p.month = time.November
		case ruleAction63:
			p.month = time.December
		case ruleAction64:
			p.number = 1
		case ruleAction65:
			p.number = 1
		case ruleAction66:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / (NEXT MINUTE Action0) / (LAST MINUTE Action1) / RelativeMinutes / RelativeMinutes / RelativeHours / RelativeDays / RelativeWeeks / RelativeWeekdays / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleNEXT]() {
						goto l8
					}
					if !_rules[ruleMINUTE]() {
						goto l8
					}
					if !_rules[ruleAction0]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleLAST]() {
						goto l9
					}
					if !_rules[ruleMINUTE]() {
						goto l9
					}
					if !_rules[ruleAction1]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l11
					}
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l12
					}
					goto l6
				l12:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l13
					}
					goto l6
				l13:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l14
					}
					goto l6
				l14:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l15
					}
					goto l6
				l15:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l16
					}
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l17
					}
					goto l6
				l17:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l18
					}
					{
						position19, tokenIndex19 := position, tokenIndex
						{
							position21, tokenIndex21 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l21
							}
							goto l22
						l21:
							position, tokenIndex = position21, tokenIndex21
						}
					l22:
						if !_rules[ruleTime]() {
							goto l19
						}
						goto l20
					l19:
						position, tokenIndex = position19, tokenIndex19
					}
				l20:
					goto l6
				l18:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position23, tokenIndex23 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l23
						}
						goto l24
					l23:
						position, tokenIndex = position23, tokenIndex23
					}
				l24:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action2) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action3) / (Last Number? MINUTES Action4) / (Next Number? MINUTES Action5) / (Number MINUTES Action6))> */
		func() bool {
			position25, tokenIndex25 := position, tokenIndex
			{
				position26 := position
				{
					position27, tokenIndex27 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l28
					}
					if !_rules[ruleMINUTES]() {
						goto l28
					}
					if !_rules[ruleAGO]() {
						goto l28
					}
					if !_rules[ruleAction2]() {
						goto l28
					}
					goto l27
				l28:
					position, tokenIndex = position27, tokenIndex27
					{
						position30, tokenIndex30 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l31
						}
						if !_rules[ruleMINUTES]() {
							goto l31
						}
						if !_rules[ruleFROM_NOW]() {
							goto l31
						}
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if !_rules[ruleIn]() {
							goto l29
						}
						{
							position32, tokenIndex32 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l32
							}
							goto l33
						l32:
							position, tokenIndex = position32, tokenIndex32
						}
					l33:
						if !_rules[ruleMINUTES]() {
							goto l29
						}
						{
							position34, tokenIndex34 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l34
							}
							goto l35
						l34:
							position, tokenIndex = position34, tokenIndex34
						}
					l35:
					}
				l30:
					if !_rules[ruleAction3]() {
						goto l29
					}
					goto l27
				l29:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleLast]() {
						goto l36
					}
					{
						position37, tokenIndex37 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l37
						}
						goto l38
					l37:
						position, tokenIndex = position37, tokenIndex37
					}
				l38:
					if !_rules[ruleMINUTES]() {
						goto l36
					}
					if !_rules[ruleAction4]() {
						goto l36
					}
					goto l27
				l36:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNext]() {
						goto l39
					}
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l40
						}
						goto l41
					l40:
						position, tokenIndex = position40, tokenIndex40
					}
				l41:
					if !_rules[ruleMINUTES]() {
						goto l39
					}
					if !_rules[ruleAction5]() {
						goto l39
					}
					goto l27
				l39:
					position, tokenIndex = position27, tokenIndex27
					if !_rules[ruleNumber]() {
						goto l25
					}
					if !_rules[ruleMINUTES]() {
						goto l25
					}
					if !_rules[ruleAction6]() {
						goto l25
					}
				}
			l27:
				add(ruleRelativeMinutes, position26)
			}
			return true
		l25:
			position, tokenIndex = position25, tokenIndex25
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action7) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action8) / (Last HOUR Action9) / (Next HOUR Action10))> */
		func() bool {
			position42, tokenIndex42 := position, tokenIndex
			{
				position43 := position
				{
					position44, tokenIndex44 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l45
					}
					if !_rules[ruleHOURS]() {
						goto l45
					}
					if !_rules[ruleAGO]() {
						goto l45
					}
					if !_rules[ruleAction7]() {
						goto l45
					}
					goto l44
				l45:
					position, tokenIndex = position44, tokenIndex44
					{
						position47, tokenIndex47 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l48
						}
						if !_rules[ruleHOURS]() {
							goto l48
						}
						if !_rules[ruleFROM_NOW]() {
							goto l48
						}
						goto l47
					l48:
						position, tokenIndex = position47, tokenIndex47
						if !_rules[ruleIn]() {
							goto l46
						}
						{
							position49, tokenIndex49 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l49
							}
							goto l50
						l49:
							position, tokenIndex = position49, tokenIndex49
						}
					l50:
						if !_rules[ruleHOURS]() {
							goto l46
						}
						{
							position51, tokenIndex51 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l51
							}
							goto l52
						l51:
							position, tokenIndex = position51, tokenIndex51
						}
					l52:
					}
				l47:
					if !_rules[ruleAction8]() {
						goto l46
					}
					goto l44
				l46:
					position, tokenIndex = position44, tokenIndex44
					if !_rules[ruleLast]() {
						goto l53
					}
					if !_rules[ruleHOUR]() {
						goto l53
					}
					if !_rules[ruleAction9]() {
						goto l53
					}
					goto l44
				l53:
					position, tokenIndex = position44, tokenIndex44
					if !_rules[ruleNext]() {
						goto l42
					}
					if !_rules[ruleHOUR]() {
						goto l42
					}
					if !_rules[ruleAction10]() {
						goto l42
					}
				}
			l44:
				add(ruleRelativeHours, position43)
			}
			return true
		l42:
			position, tokenIndex = position42, tokenIndex42
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action11) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action12))> */
		func() bool {
			position54, tokenIndex54 := position, tokenIndex
			{
				position55 := position
				{
					position56, tokenIndex56 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l57
					}
					if !_rules[ruleDAYS]() {
						goto l57
					}
					if !_rules[ruleAGO]() {
						goto l57
					}
					if !_rules[ruleAction11]() {
						goto l57
					}
					goto l56
				l57:
					position, tokenIndex = position56, tokenIndex56
					{
						position58, tokenIndex58 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l59
						}
						if !_rules[ruleDAYS]() {
							goto l59
						}
						if !_rules[ruleFROM_NOW]() {
							goto l59
						}
						goto l58
					l59:
						position, tokenIndex = position58, tokenIndex58
						if !_rules[ruleIn]() {
							goto l54
						}
						{
							position60, tokenIndex60 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l60
							}
							goto l61
						l60:
							position, tokenIndex = position60, tokenIndex60
						}
					l61:
						if !_rules[ruleDAYS]() {
							goto l54
						}
						{
							position62, tokenIndex62 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l62
							}
							goto l63
						l62:
							position, tokenIndex = position62, tokenIndex62
						}
					l63:
					}
				l58:
					if !_rules[ruleAction12]() {
						goto l54
					}
				}
			l56:
				add(ruleRelativeDays, position55)
			}
			return true
		l54:
			position, tokenIndex = position54, tokenIndex54
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action13) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action14))> */
		func() bool {
			position64, tokenIndex64 := position, tokenIndex
			{
				position65 := position
				{
					position66, tokenIndex66 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l67
					}
					if !_rules[ruleWEEKS]() {
						goto l67
					}
					if !_rules[ruleAGO]() {
						goto l67
					}
					if !_rules[ruleAction13]() {
						goto l67
					}
					goto l66
				l67:
					position, tokenIndex = position66, tokenIndex66
					{
						position68, tokenIndex68 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l69
						}
						if !_rules[ruleWEEKS]() {
							goto l69
						}
						if !_rules[ruleFROM_NOW]() {
							goto l69
						}
						goto l68
					l69:
						position, tokenIndex = position68, tokenIndex68
						if !_rules[ruleIn]() {
							goto l64
						}
						{
							position70, tokenIndex70 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l70
							}
							goto l71
						l70:
							position, tokenIndex = position70, tokenIndex70
						}
					l71:
						if !_rules[ruleWEEKS]() {
							goto l64
						}
						{
							position72, tokenIndex72 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l72
							}
							goto l73
						l72:
							position, tokenIndex = position72, tokenIndex72
						}
					l73:
					}
				l68:
					if !_rules[ruleAction14]() {
						goto l64
					}
				}
			l66:
				add(ruleRelativeWeeks, position65)
			}
			return true
		l64:
			position, tokenIndex = position64, tokenIndex64
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action15) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action16) / (LAST Month Action17) / (NEXT Month Action18))> */
		func() bool {
			position74, tokenIndex74 := position, tokenIndex
			{
				position75 := position
				{
					position76, tokenIndex76 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l77
					}
					if !_rules[ruleMONTHS]() {
						goto l77
					}
					if !_rules[ruleAGO]() {
						goto l77
					}
					if !_rules[ruleAction15]() {
						goto l77
					}
					goto l76
				l77:
					position, tokenIndex = position76, tokenIndex76
					{
						position79, tokenIndex79 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l80
						}
						if !_rules[ruleMONTHS]() {
							goto l80
						}
						if !_rules[ruleFROM_NOW]() {
							goto l80
						}
						goto l79
					l80:
						position, tokenIndex = position79, tokenIndex79
						if !_rules[ruleIn]() {
							goto l78
						}
						{
							position81, tokenIndex81 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l81
							}
							goto l82
						l81:
							position, tokenIndex = position81, tokenIndex81
						}
					l82:
						if !_rules[ruleMONTHS]() {
							goto l78
						}
						{
							position83, tokenIndex83 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l83
							}
							goto l84
						l83:
							position, tokenIndex = position83, tokenIndex83
						}
					l84:
					}
				l79:
					if !_rules[ruleAction16]() {
						goto l78
					}
					goto l76
				l78:
					position, tokenIndex = position76, tokenIndex76
					if !_rules[ruleLAST]() {
						goto l85
					}
					if !_rules[ruleMonth]() {
						goto l85
					}
					if !_rules[ruleAction17]() {
						goto l85
					}
					goto l76
				l85:
					position, tokenIndex = position76, tokenIndex76
					if !_rules[ruleNEXT]() {
						goto l74
					}
					if !_rules[ruleMonth]() {
						goto l74
					}
					if !_rules[ruleAction18]() {
						goto l74
					}
				}
			l76:
				add(ruleRelativeMonth, position75)
			}
			return true
		l74:
			position, tokenIndex = position74, tokenIndex74
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action19) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action20) / (LAST YEARS Action21) / (NEXT YEARS Action22))> */
		func() bool {
			position86, tokenIndex86 := position, tokenIndex
			{
				position87 := position
				{
					position88, tokenIndex88 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l89
					}
					if !_rules[ruleYEARS]() {
						goto l89
					}
					if !_rules[ruleAGO]() {
						goto l89
					}
					if !_rules[ruleAction19]() {
						goto l89
					}
					goto l88
				l89:
					position, tokenIndex = position88, tokenIndex88
					{
						position91, tokenIndex91 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l92
						}
						if !_rules[ruleYEARS]() {
							goto l92
						}
						if !_rules[ruleFROM_NOW]() {
							goto l92
						}
						goto l91
					l92:
						position, tokenIndex = position91, tokenIndex91
						if !_rules[ruleIn]() {
							goto l90
						}
						{
							position93, tokenIndex93 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l93
							}
							goto l94
						l93:
							position, tokenIndex = position93, tokenIndex93
						}
					l94:
						if !_rules[ruleYEARS]() {
							goto l90
						}
						{
							position95, tokenIndex95 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l95
							}
							goto l96
						l95:
							position, tokenIndex = position95, tokenIndex95
						}
					l96:
					}
				l91:
					if !_rules[ruleAction20]() {
						goto l90
					}
					goto l88
				l90:
					position, tokenIndex = position88, tokenIndex88
					if !_rules[ruleLAST]() {
						goto l97
					}
					if !_rules[ruleYEARS]() {
						goto l97
					}
					if !_rules[ruleAction21]() {
						goto l97
					}
					goto l88
				l97:
					position, tokenIndex = position88, tokenIndex88
					if !_rules[ruleNEXT]() {
						goto l86
					}
					if !_rules[ruleYEARS]() {
						goto l86
					}
					if !_rules[ruleAction22]() {
						goto l86
					}
				}
			l88:
				add(ruleRelativeYear, position87)
			}
			return true
		l86:
			position, tokenIndex = position86, tokenIndex86
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action23) / (YESTERDAY Action24) / (TOMORROW Action25) / (LAST Weekday Action26) / (NEXT Weekday Action27))> */
		func() bool {
			position98, tokenIndex98 := position, tokenIndex
			{
				position99 := position
				{
					position100, tokenIndex100 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l101
					}
					if !_rules[ruleAction23]() {
						goto l101
					}
					goto l100
				l101:
					position, tokenIndex = position100, tokenIndex100
					if !_rules[ruleYESTERDAY]() {
						goto l102
					}
					if !_rules[ruleAction24]() {
						goto l102
					}
					goto l100
				l102:
					position, tokenIndex = position100, tokenIndex100
					if !_rules[ruleTOMORROW]() {
						goto l103
					}
					if !_rules[ruleAction25]() {
						goto l103
					}
					goto l100
				l103:
					position, tokenIndex = position100, tokenIndex100
					if !_rules[ruleLAST]() {
						goto l104
					}
					if !_rules[ruleWeekday]() {
						goto l104
					}
					if !_rules[ruleAction26]() {
						goto l104
					}
					goto l100
				l104:
					position, tokenIndex = position100, tokenIndex100
					if !_rules[ruleNEXT]() {
						goto l98
					}
					if !_rules[ruleWeekday]() {
						goto l98
					}
					if !_rules[ruleAction27]() {
						goto l98
					}
				}
			l100:
				add(ruleRelativeWeekdays, position99)
			}
			return true
		l98:
			position, tokenIndex = position98, tokenIndex98
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action28)> */
		func() bool {
			position105, tokenIndex105 := position, tokenIndex
			{
				position106 := position
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l108
					}
					if !_rules[ruleOrdinal]() {
						goto l108
					}
					goto l107
				l108:
					position, tokenIndex = position107, tokenIndex107
					if !_rules[ruleLast]() {
						goto l105
					}
					{
						position109, tokenIndex109 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l109
						}
						goto l110
					l109:
						position, tokenIndex = position109, tokenIndex109
					}
				l110:
					if !_rules[ruleNumber]() {
						goto l105
					}
				}
			l107:
				if !_rules[ruleAction28]() {
					goto l105
				}
				add(ruleDate, position106)
			}
			return true
		l105:
			position, tokenIndex = position105, tokenIndex105
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position111, tokenIndex111 := position, tokenIndex
			{
				position112 := position
				{
					position113, tokenIndex113 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l114
					}
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleClock24Hour]() {
						goto l111
					}
				}
			l113:
				add(ruleTime, position112)
			}
			return true
		l111:
			position, tokenIndex = position111, tokenIndex111
			return false
		},
		/* 11 Clock12Hour <- <((Number Action29 (Minutes Seconds?)? AM) / (Number Action30 (Minutes Seconds?)? PM))> */
		func() bool {
			position115, tokenIndex115 := position, tokenIndex
			{
				position116 := position
				{
					position117, tokenIndex117 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l118
					}
					if !_rules[ruleAction29]() {
						goto l118
					}
					{
						position119, tokenIndex119 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l119
						}
						{
							position121, tokenIndex121 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l121
							}
							goto l122
						l121:
							position, tokenIndex = position121, tokenIndex121
						}
					l122:
						goto l120
					l119:
						position, tokenIndex = position119, tokenIndex119
					}
				l120:
					if !_rules[ruleAM]() {
						goto l118
					}
					goto l117
				l118:
					position, tokenIndex = position117, tokenIndex117
					if !_rules[ruleNumber]() {
						goto l115
					}
					if !_rules[ruleAction30]() {
						goto l115
					}
					{
						position123, tokenIndex123 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l123
						}
						{
							position125, tokenIndex125 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l125
							}
							goto l126
						l125:
							position, tokenIndex = position125, tokenIndex125
						}
					l126:
						goto l124
					l123:
						position, tokenIndex = position123, tokenIndex123
					}
				l124:
					if !_rules[rulePM]() {
						goto l115
					}
				}
			l117:
				add(ruleClock12Hour, position116)
			}
			return true
		l115:
			position, tokenIndex = position115, tokenIndex115
			return false
		},
		/* 12 Clock24Hour <- <(Number Action31 (Minutes Seconds?)?)> */
		func() bool {
			position127, tokenIndex127 := position, tokenIndex
			{
				position128 := position
				if !_rules[ruleNumber]() {
					goto l127
				}
				if !_rules[ruleAction31]() {
					goto l127
				}
				{
					position129, tokenIndex129 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l129
					}
					{
						position131, tokenIndex131 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l131
						}
						goto l132
					l131:
						position, tokenIndex = position131, tokenIndex131
					}
				l132:
					goto l130
				l129:
					position, tokenIndex = position129, tokenIndex129
				}
			l130:
				add(ruleClock24Hour, position128)
			}
			return true
		l127:
			position, tokenIndex = position127, tokenIndex127
			return false
		},
		/* 13 Minutes <- <(':' Number Action32)> */
		func() bool {
			position133, tokenIndex133 := position, tokenIndex
			{
				position134 := position
				if buffer[position] != rune(':') {
					goto l133
				}
				position++
				if !_rules[ruleNumber]() {
					goto l133
				}
				if !_rules[ruleAction32]() {
					goto l133
				}
				add(ruleMinutes, position134)
			}
			return true
		l133:
			position, tokenIndex = position133, tokenIndex133
			return false
		},
		/* 14 Seconds <- <(':' Number Action33)> */
		func() bool {
			position135, tokenIndex135 := position, tokenIndex
			{
				position136 := position
				if buffer[position] != rune(':') {
					goto l135
				}
				position++
				if !_rules[ruleNumber]() {
					goto l135
				}
				if !_rules[ruleAction33]() {
					goto l135
				}
				add(ruleSeconds, position136)
			}
			return true
		l135:
			position, tokenIndex = position135, tokenIndex135
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action34) / ('o' 'n' 'e' _ Action35) / ('t' 'w' 'o' _ Action36) / ('t' 'h' 'r' 'e' 'e' _ Action37) / ('f' 'o' 'u' 'r' _ Action38) / ('f' 'i' 'v' 'e' _ Action39) / ('s' 'i' 'x' _ Action40) / ('s' 'e' 'v' 'e' 'n' _ Action41) / ('e' 'i' 'g' 'h' 't' _ Action42) / ('n' 'i' 'n' 'e' _ Action43) / ('t' 'e' 'n' _ Action44))> */
		func() bool {
			position137, tokenIndex137 := position, tokenIndex
			{
				position138 := position
				{
					position139, tokenIndex139 := position, tokenIndex
					{
						position141 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l140
						}
						position++
					l142:
						{
							position143, tokenIndex143 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l143
							}
							position++
							goto l142
						l143:
							position, tokenIndex = position143, tokenIndex143
						}
						add(rulePegText, position141)
					}
					if !_rules[rule_]() {
						goto l140
					}
					if !_rules[ruleAction34]() {
						goto l140
					}
					goto l139
				l140:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('o') {
						goto l144
					}
					position++
					if buffer[position] != rune('n') {
						goto l144
					}
					position++
					if buffer[position] != rune('e') {
						goto l144
					}
					position++
					if !_rules[rule_]() {
						goto l144
					}
					if !_rules[ruleAction35]() {
						goto l144
					}
					goto l139
				l144:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('t') {
						goto l145
					}
					position++
					if buffer[position] != rune('w') {
						goto l145
					}
					position++
					if buffer[position] != rune('o') {
						goto l145
					}
					position++
					if !_rules[rule_]() {
						goto l145
					}
					if !_rules[ruleAction36]() {
						goto l145
					}
					goto l139
				l145:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('t') {
						goto l146
					}
					position++
					if buffer[position] != rune('h') {
						goto l146
					}
					position++
					if buffer[position] != rune('r') {
						goto l146
					}
					position++
					if buffer[position] != rune('e') {
						goto l146
					}
					position++
					if buffer[position] != rune('e') {
						goto l146
					}
					position++
					if !_rules[rule_]() {
						goto l146
					}
					if !_rules[ruleAction37]() {
						goto l146
					}
					goto l139
				l146:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('f') {
						goto l147
					}
					position++
					if buffer[position] != rune('o') {
						goto l147
					}
					position++
					if buffer[position] != rune('u') {
						goto l147
					}
					position++
					if buffer[position] != rune('r') {
						goto l147
					}
					position++
					if !_rules[rule_]() {
						goto l147
					}
					if !_rules[ruleAction38]() {
						goto l147
					}
					goto l139
				l147:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('f') {
						goto l148
					}
					position++
					if buffer[position] != rune('i') {
						goto l148
					}
					position++
					if buffer[position] != rune('v') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if !_rules[rule_]() {
						goto l148
					}
					if !_rules[ruleAction39]() {
						goto l148
					}
					goto l139
				l148:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('s') {
						goto l149
					}
					position++
					if buffer[position] != rune('i') {
						goto l149
					}
					position++
					if buffer[position] != rune('x') {
						goto l149
					}
					position++
					if !_rules[rule_]() {
						goto l149
					}
					if !_rules[ruleAction40]() {
						goto l149
					}
					goto l139
				l149:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('s') {
						goto l150
					}
					position++
					if buffer[position] != rune('e') {
						goto l150
					}
					position++
					if buffer[position] != rune('v') {
						goto l150
					}
					position++
					if buffer[position] != rune('e') {
						goto l150
					}
					position++
					if buffer[position] != rune('n') {
						goto l150
					}
					position++
					if !_rules[rule_]() {
						goto l150
					}
					if !_rules[ruleAction41]() {
						goto l150
					}
					goto l139
				l150:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('e') {
						goto l151
					}
					position++
					if buffer[position] != rune('i') {
						goto l151
					}
					position++
					if buffer[position] != rune('g') {
						goto l151
					}
					position++
					if buffer[position] != rune('h') {
						goto l151
					}
					position++
					if buffer[position] != rune('t') {
						goto l151
					}
					position++
					if !_rules[rule_]() {
						goto l151
					}
					if !_rules[ruleAction42]() {
						goto l151
					}
					goto l139
				l151:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('n') {
						goto l152
					}
					position++
					if buffer[position] != rune('i') {
						goto l152
					}
					position++
					if buffer[position] != rune('n') {
						goto l152
					}
					position++
					if buffer[position] != rune('e') {
						goto l152
					}
					position++
					if !_rules[rule_]() {
						goto l152
					}
					if !_rules[ruleAction43]() {
						goto l152
					}
					goto l139
				l152:
					position, tokenIndex = position139, tokenIndex139
					if buffer[position] != rune('t') {
						goto l137
					}
					position++
					if buffer[position] != rune('e') {
						goto l137
					}
					position++
					if buffer[position] != rune('n') {
						goto l137
					}
					position++
					if !_rules[rule_]() {
						goto l137
					}
					if !_rules[ruleAction44]() {
						goto l137
					}
				}
			l139:
				add(ruleNumber, position138)
			}
			return true
		l137:
			position, tokenIndex = position137, tokenIndex137
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action45) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action46) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action47) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action48) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action49) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action50) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action51))> */
		func() bool {
			position153, tokenIndex153 := position, tokenIndex
			{
				position154 := position
				{
					position155, tokenIndex155 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l156
					}
					position++
					if buffer[position] != rune('u') {
						goto l156
					}
					position++
					if buffer[position] != rune('n') {
						goto l156
					}
					position++
					if buffer[position] != rune('d') {
						goto l156
					}
					position++
					if buffer[position] != rune('a') {
						goto l156
					}
					position++
					if buffer[position] != rune('y') {
						goto l156
					}
					position++
					if !_rules[rule_]() {
						goto l156
					}
					if !_rules[ruleAction45]() {
						goto l156
					}
					goto l155
				l156:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('m') {
						goto l157
					}
					position++
					if buffer[position] != rune('o') {
						goto l157
					}
					position++
					if buffer[position] != rune('n') {
						goto l157
					}
					position++
					if buffer[position] != rune('d') {
						goto l157
					}
					position++
					if buffer[position] != rune('a') {
						goto l157
					}
					position++
					if buffer[position] != rune('y') {
						goto l157
					}
					position++
					if !_rules[rule_]() {
						goto l157
					}
					if !_rules[ruleAction46]() {
						goto l157
					}
					goto l155
				l157:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('t') {
						goto l158
					}
					position++
					if buffer[position] != rune('u') {
						goto l158
					}
					position++
					if buffer[position] != rune('e') {
						goto l158
					}
					position++
					if buffer[position] != rune('s') {
						goto l158
					}
					position++
					if buffer[position] != rune('d') {
						goto l158
					}
					position++
					if buffer[position] != rune('a') {
						goto l158
					}
					position++
					if buffer[position] != rune('y') {
						goto l158
					}
					position++
					if !_rules[rule_]() {
						goto l158
					}
					if !_rules[ruleAction47]() {
						goto l158
					}
					goto l155
				l158:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('w') {
						goto l159
					}
					position++
					if buffer[position] != rune('e') {
						goto l159
					}
					position++
					if buffer[position] != rune('d') {
						goto l159
					}
					position++
					if buffer[position] != rune('n') {
						goto l159
					}
					position++
					if buffer[position] != rune('e') {
						goto l159
					}
					position++
					if buffer[position] != rune('s') {
						goto l159
					}
					position++
					if buffer[position] != rune('d') {
						goto l159
					}
					position++
					if buffer[position] != rune('a') {
						goto l159
					}
					position++
					if buffer[position] != rune('y') {
						goto l159
					}
					position++
					if !_rules[rule_]() {
						goto l159
					}
					if !_rules[ruleAction48]() {
						goto l159
					}
					goto l155
				l159:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('t') {
						goto l160
					}
					position++
					if buffer[position] != rune('h') {
						goto l160
					}
					position++
					if buffer[position] != rune('u') {
						goto l160
					}
					position++
					if buffer[position] != rune('r') {
						goto l160
					}
					position++
					if buffer[position] != rune('s') {
						goto l160
					}
					position++
					if buffer[position] != rune('d') {
						goto l160
					}
					position++
					if buffer[position] != rune('a') {
						goto l160
					}
					position++
					if buffer[position] != rune('y') {
						goto l160
					}
					position++
					if !_rules[rule_]() {
						goto l160
					}
					if !_rules[ruleAction49]() {
						goto l160
					}
					goto l155
				l160:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('f') {
						goto l161
					}
					position++
					if buffer[position] != rune('r') {
						goto l161
					}
					position++
					if buffer[position] != rune('i') {
						goto l161
					}
					position++
					if buffer[position] != rune('d') {
						goto l161
					}
					position++
					if buffer[position] != rune('a') {
						goto l161
					}
					position++
					if buffer[position] != rune('y') {
						goto l161
					}
					position++
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleAction50]() {
						goto l161
					}
					goto l155
				l161:
					position, tokenIndex = position155, tokenIndex155
					if buffer[position] != rune('s') {
						goto l153
					}
					position++
					if buffer[position] != rune('a') {
						goto l153
					}
					position++
					if buffer[position] != rune('t') {
						goto l153
					}
					position++
					if buffer[position] != rune('u') {
						goto l153
					}
					position++
					if buffer[position] != rune('r') {
						goto l153
					}
					position++
					if buffer[position] != rune('d') {
						goto l153
					}
					position++
					if buffer[position] != rune('a') {
						goto l153
					}
					position++
					if buffer[position] != rune('y') {
						goto l153
					}
					position++
					if !_rules[rule_]() {
						goto l153
					}
					if !_rules[ruleAction51]() {
						goto l153
					}
				}
			l155:
				add(ruleWeekday, position154)
			}
			return true
		l153:
			position, tokenIndex = position153, tokenIndex153
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action52) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action53) / ('m' 'a' 'r' 'c' 'h' _ Action54) / ('a' 'p' 'r' 'i' 'l' _ Action55) / ('m' 'a' 'y' _ Action56) / ('j' 'u' 'n' 'e' _ Action57) / ('j' 'u' 'l' 'y' _ Action58) / ('a' 'u' 'g' 'u' 's' 't' _ Action59) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action60) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action61) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action62) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action63))> */
		func() bool {
			position162, tokenIndex162 := position, tokenIndex
			{
				position163 := position
				{
					position164, tokenIndex164 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l165
					}
					position++
					if buffer[position] != rune('a') {
						goto l165
					}
					position++
					if buffer[position] != rune('n') {
						goto l165
					}
					position++
					if buffer[position] != rune('u') {
						goto l165
					}
					position++
					if buffer[position] != rune('a') {
						goto l165
					}
					position++
					if buffer[position] != rune('r') {
						goto l165
					}
					position++
					if buffer[position] != rune('y') {
						goto l165
					}
					position++
					if !_rules[rule_]() {
						goto l165
					}
					if !_rules[ruleAction52]() {
						goto l165
					}
					goto l164
				l165:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('f') {
						goto l166
					}
					position++
					if buffer[position] != rune('e') {
						goto l166
					}
					position++
					if buffer[position] != rune('b') {
						goto l166
					}
					position++
					if buffer[position] != rune('r') {
						goto l166
					}
					position++
					if buffer[position] != rune('u') {
						goto l166
					}
					position++
					if buffer[position] != rune('a') {
						goto l166
					}
					position++
					if buffer[position] != rune('r') {
						goto l166
					}
					position++
					if buffer[position] != rune('y') {
						goto l166
					}
					position++
					if !_rules[rule_]() {
						goto l166
					}
					if !_rules[ruleAction53]() {
						goto l166
					}
					goto l164
				l166:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('m') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('r') {
						goto l167
					}
					position++
					if buffer[position] != rune('c') {
						goto l167
					}
					position++
					if buffer[position] != rune('h') {
						goto l167
					}
					position++
					if !_rules[rule_]() {
						goto l167
					}
					if !_rules[ruleAction54]() {
						goto l167
					}
					goto l164
				l167:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('a') {
						goto l168
					}
					position++
					if buffer[position] != rune('p') {
						goto l168
					}
					position++
					if buffer[position] != rune('r') {
						goto l168
					}
					position++
					if buffer[position] != rune('i') {
						goto l168
					}
					position++
					if buffer[position] != rune('l') {
						goto l168
					}
					position++
					if !_rules[rule_]() {
						goto l168
					}
					if !_rules[ruleAction55]() {
						goto l168
					}
					goto l164
				l168:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('m') {
						goto l169
					}
					position++
					if buffer[position] != rune('a') {
						goto l169
					}
					position++
					if buffer[position] != rune('y') {
						goto l169
					}
					position++
					if !_rules[rule_]() {
						goto l169
					}
					if !_rules[ruleAction56]() {
						goto l169
					}
					goto l164
				l169:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('j') {
						goto l170
					}
					position++
					if buffer[position] != rune('u') {
						goto l170
					}
					position++
					if buffer[position] != rune('n') {
						goto l170
					}
					position++
					if buffer[position] != rune('e') {
						goto l170
					}
					position++
					if !_rules[rule_]() {
						goto l170
					}
					if !_rules[ruleAction57]() {
						goto l170
					}
					goto l164
				l170:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('j') {
						goto l171
					}
					position++
					if buffer[position] != rune('u') {
						goto l171
					}
					position++
					if buffer[position] != rune('l') {
						goto l171
					}
					position++
					if buffer[position] != rune('y') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction58]() {
						goto l171
					}
					goto l164
				l171:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('a') {
						goto l172
					}
					position++
					if buffer[position] != rune('u') {
						goto l172
					}
					position++
					if buffer[position] != rune('g') {
						goto l172
					}
					position++
					if buffer[position] != rune('u') {
						goto l172
					}
					position++
					if buffer[position] != rune('s') {
						goto l172
					}
					position++
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction59]() {
						goto l172
					}
					goto l164
				l172:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('s') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('p') {
						goto l173
					}
					position++
					if buffer[position] != rune('t') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('m') {
						goto l173
					}
					position++
					if buffer[position] != rune('b') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('r') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction60]() {
						goto l173
					}
					goto l164
				l173:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('o') {
						goto l174
					}
					position++
					if buffer[position] != rune('c') {
						goto l174
					}
					position++
					if buffer[position] != rune('t') {
						goto l174
					}
					position++
					if buffer[position] != rune('o') {
						goto l174
					}
					position++
					if buffer[position] != rune('b') {
						goto l174
					}
					position++
					if buffer[position] != rune('e') {
						goto l174
					}
					position++
					if buffer[position] != rune('r') {
						goto l174
					}
					position++
					if !_rules[rule_]() {
						goto l174
					}
					if !_rules[ruleAction61]() {
						goto l174
					}
					goto l164
				l174:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('n') {
						goto l175
					}
					position++
					if buffer[position] != rune('o') {
						goto l175
					}
					position++
					if buffer[position] != rune('v') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('m') {
						goto l175
					}
					position++
					if buffer[position] != rune('b') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('r') {
						goto l175
					}
					position++
					if !_rules[rule_]() {
						goto l175
					}
					if !_rules[ruleAction62]() {
						goto l175
					}
					goto l164
				l175:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('d') {
						goto l162
					}
					position++
					if buffer[position] != rune('e') {
						goto l162
					}
					position++
					if buffer[position] != rune('c') {
						goto l162
					}
					position++
					if buffer[position] != rune('e') {
						goto l162
					}
					position++
					if buffer[position] != rune('m') {
						goto l162
					}
					position++
					if buffer[position] != rune('b') {
						goto l162
					}
					position++
					if buffer[position] != rune('e') {
						goto l162
					}
					position++
					if buffer[position] != rune('r') {
						goto l162
					}
					position++
					if !_rules[rule_]() {
						goto l162
					}
					if !_rules[ruleAction63]() {
						goto l162
					}
				}
			l164:
				add(ruleMonth, position163)
			}
			return true
		l162:
			position, tokenIndex = position162, tokenIndex162
			return false
		},
		/* 18 In <- <(IN Action64)> */
		func() bool {
			position176, tokenIndex176 := position, tokenIndex
			{
				position177 := position
				if !_rules[ruleIN]() {
					goto l176
				}
				if !_rules[ruleAction64]() {
					goto l176
				}
				add(ruleIn, position177)
			}
			return true
		l176:
			position, tokenIndex = position176, tokenIndex176
			return false
		},
		/* 19 Last <- <(LAST Action65)> */
		func() bool {
			position178, tokenIndex178 := position, tokenIndex
			{
				position179 := position
				if !_rules[ruleLAST]() {
					goto l178
				}
				if !_rules[ruleAction65]() {
					goto l178
				}
				add(ruleLast, position179)
			}
			return true
		l178:
			position, tokenIndex = position178, tokenIndex178
			return false
		},
		/* 20 Next <- <(NEXT Action66)> */
		func() bool {
			position180, tokenIndex180 := position, tokenIndex
			{
				position181 := position
				if !_rules[ruleNEXT]() {
					goto l180
				}
				if !_rules[ruleAction66]() {
					goto l180
				}
				add(ruleNext, position181)
			}
			return true
		l180:
			position, tokenIndex = position180, tokenIndex180
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position182, tokenIndex182 := position, tokenIndex
			{
				position183 := position
				{
					position184, tokenIndex184 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l185
					}
					position++
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					goto l184
				l185:
					position, tokenIndex = position184, tokenIndex184
					if buffer[position] != rune('n') {
						goto l186
					}
					position++
					if buffer[position] != rune('d') {
						goto l186
					}
					position++
					goto l184
				l186:
					position, tokenIndex = position184, tokenIndex184
					if buffer[position] != rune('r') {
						goto l187
					}
					position++
					if buffer[position] != rune('d') {
						goto l187
					}
					position++
					goto l184
				l187:
					position, tokenIndex = position184, tokenIndex184
					if buffer[position] != rune('t') {
						goto l182
					}
					position++
					if buffer[position] != rune('h') {
						goto l182
					}
					position++
				}
			l184:
				if !_rules[rule_]() {
					goto l182
				}
				add(ruleOrdinal, position183)
			}
			return true
		l182:
			position, tokenIndex = position182, tokenIndex182
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position188, tokenIndex188 := position, tokenIndex
			{
				position189 := position
				if buffer[position] != rune('y') {
					goto l188
				}
				position++
				if buffer[position] != rune('e') {
					goto l188
				}
				position++
				if buffer[position] != rune('a') {
					goto l188
				}
				position++
				if buffer[position] != rune('r') {
					goto l188
				}
				position++
				{
					position190, tokenIndex190 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l190
					}
					position++
					goto l191
				l190:
					position, tokenIndex = position190, tokenIndex190
				}
			l191:
				if !_rules[rule_]() {
					goto l188
				}
				add(ruleYEARS, position189)
			}
			return true
		l188:
			position, tokenIndex = position188, tokenIndex188
			return false
		},
		/* 23 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position192, tokenIndex192 := position, tokenIndex
			{
				position193 := position
				if buffer[position] != rune('m') {
					goto l192
				}
				position++
				if buffer[position] != rune('o') {
					goto l192
				}
				position++
				if buffer[position] != rune('n') {
					goto l192
				}
				position++
				if buffer[position] != rune('t') {
					goto l192
				}
				position++
				if buffer[position] != rune('h') {
					goto l192
				}
				position++
				{
					position194, tokenIndex194 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l194
					}
					position++
					goto l195
				l194:
					position, tokenIndex = position194, tokenIndex194
				}
			l195:
				if !_rules[rule_]() {
					goto l192
				}
				add(ruleMONTHS, position193)
			}
			return true
		l192:
			position, tokenIndex = position192, tokenIndex192
			return false
		},
		/* 24 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position196, tokenIndex196 := position, tokenIndex
			{
				position197 := position
				if buffer[position] != rune('w') {
					goto l196
				}
				position++
				if buffer[position] != rune('e') {
					goto l196
				}
				position++
				if buffer[position] != rune('e') {
					goto l196
				}
				position++
				if buffer[position] != rune('k') {
					goto l196
				}
				position++
				{
					position198, tokenIndex198 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l198
					}
					position++
					goto l199
				l198:
					position, tokenIndex = position198, tokenIndex198
				}
			l199:
				if !_rules[rule_]() {
					goto l196
				}
				add(ruleWEEKS, position197)
			}
			return true
		l196:
			position, tokenIndex = position196, tokenIndex196
			return false
		},
		/* 25 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position200, tokenIndex200 := position, tokenIndex
			{
				position201 := position
				if buffer[position] != rune('d') {
					goto l200
				}
				position++
				if buffer[position] != rune('a') {
					goto l200
				}
				position++
				if buffer[position] != rune('y') {
					goto l200
				}
				position++
				{
					position202, tokenIndex202 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l202
					}
					position++
					goto l203
				l202:
					position, tokenIndex = position202, tokenIndex202
				}
			l203:
				if !_rules[rule_]() {
					goto l200
				}
				add(ruleDAYS, position201)
			}
			return true
		l200:
			position, tokenIndex = position200, tokenIndex200
			return false
		},
		/* 26 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position204, tokenIndex204 := position, tokenIndex
			{
				position205 := position
				if buffer[position] != rune('h') {
					goto l204
				}
				position++
				if buffer[position] != rune('o') {
					goto l204
				}
				position++
				if buffer[position] != rune('u') {
					goto l204
				}
				position++
				if buffer[position] != rune('r') {
					goto l204
				}
				position++
				{
					position206, tokenIndex206 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l206
					}
					position++
					goto l207
				l206:
					position, tokenIndex = position206, tokenIndex206
				}
			l207:
				if !_rules[rule_]() {
					goto l204
				}
				add(ruleHOURS, position205)
			}
			return true
		l204:
			position, tokenIndex = position204, tokenIndex204
			return false
		},
		/* 27 HOUR <- <('h' 'o' 'u' 'r' _)> */
		func() bool {
			position208, tokenIndex208 := position, tokenIndex
			{
				position209 := position
				if buffer[position] != rune('h') {
					goto l208
				}
				position++
				if buffer[position] != rune('o') {
					goto l208
				}
				position++
				if buffer[position] != rune('u') {
					goto l208
				}
				position++
				if buffer[position] != rune('r') {
					goto l208
				}
				position++
				if !_rules[rule_]() {
					goto l208
				}
				add(ruleHOUR, position209)
			}
			return true
		l208:
			position, tokenIndex = position208, tokenIndex208
			return false
		},
		/* 28 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				if buffer[position] != rune('m') {
					goto l210
				}
				position++
				if buffer[position] != rune('i') {
					goto l210
				}
				position++
				if buffer[position] != rune('n') {
					goto l210
				}
				position++
				if buffer[position] != rune('u') {
					goto l210
				}
				position++
				if buffer[position] != rune('t') {
					goto l210
				}
				position++
				if buffer[position] != rune('e') {
					goto l210
				}
				position++
				{
					position212, tokenIndex212 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					goto l213
				l212:
					position, tokenIndex = position212, tokenIndex212
				}
			l213:
				if !_rules[rule_]() {
					goto l210
				}
				add(ruleMINUTES, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 29 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position214, tokenIndex214 := position, tokenIndex
			{
				position215 := position
				if buffer[position] != rune('m') {
					goto l214
				}
				position++
				if buffer[position] != rune('i') {
					goto l214
				}
				position++
				if buffer[position] != rune('n') {
					goto l214
				}
				position++
				if buffer[position] != rune('u') {
					goto l214
				}
				position++
				if buffer[position] != rune('t') {
					goto l214
				}
				position++
				if buffer[position] != rune('e') {
					goto l214
				}
				position++
				if !_rules[rule_]() {
					goto l214
				}
				add(ruleMINUTE, position215)
			}
			return true
		l214:
			position, tokenIndex = position214, tokenIndex214
			return false
		},
		/* 30 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position216, tokenIndex216 := position, tokenIndex
			{
				position217 := position
				if buffer[position] != rune('y') {
					goto l216
				}
				position++
				if buffer[position] != rune('e') {
					goto l216
				}
				position++
				if buffer[position] != rune('s') {
					goto l216
				}
				position++
				if buffer[position] != rune('t') {
					goto l216
				}
				position++
				if buffer[position] != rune('e') {
					goto l216
				}
				position++
				if buffer[position] != rune('r') {
					goto l216
				}
				position++
				if buffer[position] != rune('d') {
					goto l216
				}
				position++
				if buffer[position] != rune('a') {
					goto l216
				}
				position++
				if buffer[position] != rune('y') {
					goto l216
				}
				position++
				if !_rules[rule_]() {
					goto l216
				}
				add(ruleYESTERDAY, position217)
			}
			return true
		l216:
			position, tokenIndex = position216, tokenIndex216
			return false
		},
		/* 31 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position218, tokenIndex218 := position, tokenIndex
			{
				position219 := position
				if buffer[position] != rune('t') {
					goto l218
				}
				position++
				if buffer[position] != rune('o') {
					goto l218
				}
				position++
				if buffer[position] != rune('m') {
					goto l218
				}
				position++
				if buffer[position] != rune('o') {
					goto l218
				}
				position++
				if buffer[position] != rune('r') {
					goto l218
				}
				position++
				if buffer[position] != rune('r') {
					goto l218
				}
				position++
				if buffer[position] != rune('o') {
					goto l218
				}
				position++
				if buffer[position] != rune('w') {
					goto l218
				}
				position++
				if !_rules[rule_]() {
					goto l218
				}
				add(ruleTOMORROW, position219)
			}
			return true
		l218:
			position, tokenIndex = position218, tokenIndex218
			return false
		},
		/* 32 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position220, tokenIndex220 := position, tokenIndex
			{
				position221 := position
				if buffer[position] != rune('t') {
					goto l220
				}
				position++
				if buffer[position] != rune('o') {
					goto l220
				}
				position++
				if buffer[position] != rune('d') {
					goto l220
				}
				position++
				if buffer[position] != rune('a') {
					goto l220
				}
				position++
				if buffer[position] != rune('y') {
					goto l220
				}
				position++
				if !_rules[rule_]() {
					goto l220
				}
				add(ruleTODAY, position221)
			}
			return true
		l220:
			position, tokenIndex = position220, tokenIndex220
			return false
		},
		/* 33 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position222, tokenIndex222 := position, tokenIndex
			{
				position223 := position
				if buffer[position] != rune('a') {
					goto l222
				}
				position++
				if buffer[position] != rune('g') {
					goto l222
				}
				position++
				if buffer[position] != rune('o') {
					goto l222
				}
				position++
				if !_rules[rule_]() {
					goto l222
				}
				add(ruleAGO, position223)
			}
			return true
		l222:
			position, tokenIndex = position222, tokenIndex222
			return false
		},
		/* 34 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('f') {
					goto l224
				}
				position++
				if buffer[position] != rune('r') {
					goto l224
				}
				position++
				if buffer[position] != rune('o') {
					goto l224
				}
				position++
				if buffer[position] != rune('m') {
					goto l224
				}
				position++
				if buffer[position] != rune(' ') {
					goto l224
				}
				position++
				if buffer[position] != rune('n') {
					goto l224
				}
				position++
				if buffer[position] != rune('o') {
					goto l224
				}
				position++
				if buffer[position] != rune('w') {
					goto l224
				}
				position++
				if !_rules[rule_]() {
					goto l224
				}
				add(ruleFROM_NOW, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 35 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position226, tokenIndex226 := position, tokenIndex
			{
				position227 := position
				if buffer[position] != rune('n') {
					goto l226
				}
				position++
				if buffer[position] != rune('o') {
					goto l226
				}
				position++
				if buffer[position] != rune('w') {
					goto l226
				}
				position++
				if !_rules[rule_]() {
					goto l226
				}
				add(ruleNOW, position227)
			}
			return true
		l226:
			position, tokenIndex = position226, tokenIndex226
			return false
		},
		/* 36 AM <- <('a' 'm' _)> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('a') {
					goto l228
				}
				position++
				if buffer[position] != rune('m') {
					goto l228
				}
				position++
				if !_rules[rule_]() {
					goto l228
				}
				add(ruleAM, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 37 PM <- <('p' 'm' _)> */
		func() bool {
			position230, tokenIndex230 := position, tokenIndex
			{
				position231 := position
				if buffer[position] != rune('p') {
					goto l230
				}
				position++
				if buffer[position] != rune('m') {
					goto l230
				}
				position++
				if !_rules[rule_]() {
					goto l230
				}
				add(rulePM, position231)
			}
			return true
		l230:
			position, tokenIndex = position230, tokenIndex230
			return false
		},
		/* 38 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				if buffer[position] != rune('n') {
					goto l232
				}
				position++
				if buffer[position] != rune('e') {
					goto l232
				}
				position++
				if buffer[position] != rune('x') {
					goto l232
				}
				position++
				if buffer[position] != rune('t') {
					goto l232
				}
				position++
				if !_rules[rule_]() {
					goto l232
				}
				add(ruleNEXT, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 39 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position234, tokenIndex234 := position, tokenIndex
			{
				position235 := position
				{
					position236, tokenIndex236 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l237
					}
					position++
					if buffer[position] != rune('n') {
						goto l237
					}
					position++
					if buffer[position] != rune(' ') {
						goto l237
					}
					position++
					if buffer[position] != rune('a') {
						goto l237
					}
					position++
					if buffer[position] != rune('n') {
						goto l237
					}
					position++
					goto l236
				l237:
					position, tokenIndex = position236, tokenIndex236
					if buffer[position] != rune('i') {
						goto l238
					}
					position++
					if buffer[position] != rune('n') {
						goto l238
					}
					position++
					if buffer[position] != rune(' ') {
						goto l238
					}
					position++
					if buffer[position] != rune('a') {
						goto l238
					}
					position++
					goto l236
				l238:
					position, tokenIndex = position236, tokenIndex236
					if buffer[position] != rune('i') {
						goto l234
					}
					position++
					if buffer[position] != rune('n') {
						goto l234
					}
					position++
				}
			l236:
				if !_rules[rule_]() {
					goto l234
				}
				add(ruleIN, position235)
			}
			return true
		l234:
			position, tokenIndex = position234, tokenIndex234
			return false
		},
		/* 40 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position239, tokenIndex239 := position, tokenIndex
			{
				position240 := position
				{
					position241, tokenIndex241 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l242
					}
					position++
					if buffer[position] != rune('a') {
						goto l242
					}
					position++
					if buffer[position] != rune('s') {
						goto l242
					}
					position++
					if buffer[position] != rune('t') {
						goto l242
					}
					position++
					goto l241
				l242:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('p') {
						goto l243
					}
					position++
					if buffer[position] != rune('a') {
						goto l243
					}
					position++
					if buffer[position] != rune('s') {
						goto l243
					}
					position++
					if buffer[position] != rune('t') {
						goto l243
					}
					position++
					goto l241
				l243:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('p') {
						goto l239
					}
					position++
					if buffer[position] != rune('r') {
						goto l239
					}
					position++
					if buffer[position] != rune('e') {
						goto l239
					}
					position++
					if buffer[position] != rune('v') {
						goto l239
					}
					position++
					if buffer[position] != rune('i') {
						goto l239
					}
					position++
					if buffer[position] != rune('o') {
						goto l239
					}
					position++
					if buffer[position] != rune('u') {
						goto l239
					}
					position++
					if buffer[position] != rune('s') {
						goto l239
					}
					position++
				}
			l241:
				if !_rules[rule_]() {
					goto l239
				}
				add(ruleLAST, position240)
			}
			return true
		l239:
			position, tokenIndex = position239, tokenIndex239
			return false
		},
		/* 41 AT <- <('a' 't' _)> */
		func() bool {
			position244, tokenIndex244 := position, tokenIndex
			{
				position245 := position
				if buffer[position] != rune('a') {
					goto l244
				}
				position++
				if buffer[position] != rune('t') {
					goto l244
				}
				position++
				if !_rules[rule_]() {
					goto l244
				}
				add(ruleAT, position245)
			}
			return true
		l244:
			position, tokenIndex = position244, tokenIndex244
			return false
		},
		/* 42 ON <- <('o' 'n' _)> */
		func() bool {
			position246, tokenIndex246 := position, tokenIndex
			{
				position247 := position
				if buffer[position] != rune('o') {
					goto l246
				}
				position++
				if buffer[position] != rune('n') {
					goto l246
				}
				position++
				if !_rules[rule_]() {
					goto l246
				}
				add(ruleON, position247)
			}
			return true
		l246:
			position, tokenIndex = position246, tokenIndex246
			return false
		},
		/* 43 _ <- <Whitespace*> */
		func() bool {
			{
				position249 := position
			l250:
				{
					position251, tokenIndex251 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l251
					}
					goto l250
				l251:
					position, tokenIndex = position251, tokenIndex251
				}
				add(rule_, position249)
			}
			return true
		},
		/* 44 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position252, tokenIndex252 := position, tokenIndex
			{
				position253 := position
				{
					position254, tokenIndex254 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l255
					}
					position++
					goto l254
				l255:
					position, tokenIndex = position254, tokenIndex254
					if buffer[position] != rune('\t') {
						goto l256
					}
					position++
					goto l254
				l256:
					position, tokenIndex = position254, tokenIndex254
					if !_rules[ruleEOL]() {
						goto l252
					}
				}
			l254:
				add(ruleWhitespace, position253)
			}
			return true
		l252:
			position, tokenIndex = position252, tokenIndex252
			return false
		},
		/* 45 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position257, tokenIndex257 := position, tokenIndex
			{
				position258 := position
				{
					position259, tokenIndex259 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l260
					}
					position++
					if buffer[position] != rune('\n') {
						goto l260
					}
					position++
					goto l259
				l260:
					position, tokenIndex = position259, tokenIndex259
					if buffer[position] != rune('\n') {
						goto l261
					}
					position++
					goto l259
				l261:
					position, tokenIndex = position259, tokenIndex259
					if buffer[position] != rune('\r') {
						goto l257
					}
					position++
				}
			l259:
				add(ruleEOL, position258)
			}
			return true
		l257:
			position, tokenIndex = position257, tokenIndex257
			return false
		},
		/* 46 EOF <- <!.> */
		func() bool {
			position262, tokenIndex262 := position, tokenIndex
			{
				position263 := position
				{
					position264, tokenIndex264 := position, tokenIndex
					if !matchDot() {
						goto l264
					}
					goto l262
				l264:
					position, tokenIndex = position264, tokenIndex264
				}
				add(ruleEOF, position263)
			}
			return true
		l262:
			position, tokenIndex = position262, tokenIndex262
			return false
		},
		/* 48 Action0 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 49 Action1 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 50 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 51 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 52 Action4 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 53 Action5 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 54 Action6 <- <{
		   p.t = p.t.Add(p.withDirection(time.Minute) * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 55 Action7 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 56 Action8 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 57 Action9 <- <{
		   p.t = p.t.Add(-time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 58 Action10 <- <{
		   p.t = p.t.Add(time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 59 Action11 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 60 Action12 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 61 Action13 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 62 Action14 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 63 Action15 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 64 Action16 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 65 Action17 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 66 Action18 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 67 Action19 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 68 Action20 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 69 Action21 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 70 Action22 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 71 Action23 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 72 Action24 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 73 Action25 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 74 Action26 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 75 Action27 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 76 Action28 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 77 Action29 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 78 Action30 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 79 Action31 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 80 Action32 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		/* 81 Action33 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		nil,
		/* 83 Action34 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 84 Action35 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 85 Action36 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 86 Action37 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 87 Action38 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 88 Action39 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 89 Action40 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 90 Action41 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 91 Action42 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 92 Action43 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 93 Action44 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 94 Action45 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 95 Action46 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 96 Action47 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 97 Action48 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 98 Action49 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 99 Action50 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 100 Action51 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 101 Action52 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 102 Action53 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 103 Action54 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 104 Action55 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 105 Action56 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 106 Action57 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 107 Action58 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 108 Action59 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 109 Action60 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 110 Action61 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 111 Action62 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 112 Action63 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 113 Action64 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 114 Action65 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 115 Action66 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
