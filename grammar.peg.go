package naturaldate

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
	"time"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleQuery
	ruleExpr
	ruleRelativeMinutes
	ruleRelativeHours
	ruleRelativeDays
	ruleRelativeWeeks
	ruleRelativeMonth
	ruleRelativeYear
	ruleRelativeWeekdays
	ruleDate
	ruleTime
	ruleClock12Hour
	ruleClock24Hour
	ruleMinutes
	ruleSeconds
	ruleNumber
	ruleWeekday
	ruleMonth
	ruleIn
	ruleLast
	ruleNext
	ruleOrdinal
	ruleYEARS
	ruleMONTHS
	ruleWEEKS
	ruleDAYS
	ruleHOURS
	ruleHOUR
	ruleMINUTES
	ruleMINUTE
	ruleYESTERDAY
	ruleTOMORROW
	ruleTODAY
	ruleAGO
	ruleFROM_NOW
	ruleNOW
	ruleAM
	rulePM
	ruleNEXT
	ruleIN
	ruleLAST
	ruleAT
	ruleON
	rule_
	ruleWhitespace
	ruleEOL
	ruleEOF
	ruleAction0
	ruleAction1
	ruleAction2
	ruleAction3
	ruleAction4
	ruleAction5
	ruleAction6
	ruleAction7
	ruleAction8
	ruleAction9
	ruleAction10
	ruleAction11
	ruleAction12
	ruleAction13
	ruleAction14
	ruleAction15
	ruleAction16
	ruleAction17
	ruleAction18
	ruleAction19
	ruleAction20
	ruleAction21
	ruleAction22
	ruleAction23
	ruleAction24
	ruleAction25
	ruleAction26
	ruleAction27
	ruleAction28
	ruleAction29
	ruleAction30
	ruleAction31
	ruleAction32
	rulePegText
	ruleAction33
	ruleAction34
	ruleAction35
	ruleAction36
	ruleAction37
	ruleAction38
	ruleAction39
	ruleAction40
	ruleAction41
	ruleAction42
	ruleAction43
	ruleAction44
	ruleAction45
	ruleAction46
	ruleAction47
	ruleAction48
	ruleAction49
	ruleAction50
	ruleAction51
	ruleAction52
	ruleAction53
	ruleAction54
	ruleAction55
	ruleAction56
	ruleAction57
	ruleAction58
	ruleAction59
	ruleAction60
	ruleAction61
	ruleAction62
	ruleAction63
	ruleAction64
	ruleAction65
	ruleAction66
)

var rul3s = [...]string{
	"Unknown",
	"Query",
	"Expr",
	"RelativeMinutes",
	"RelativeHours",
	"RelativeDays",
	"RelativeWeeks",
	"RelativeMonth",
	"RelativeYear",
	"RelativeWeekdays",
	"Date",
	"Time",
	"Clock12Hour",
	"Clock24Hour",
	"Minutes",
	"Seconds",
	"Number",
	"Weekday",
	"Month",
	"In",
	"Last",
	"Next",
	"Ordinal",
	"YEARS",
	"MONTHS",
	"WEEKS",
	"DAYS",
	"HOURS",
	"HOUR",
	"MINUTES",
	"MINUTE",
	"YESTERDAY",
	"TOMORROW",
	"TODAY",
	"AGO",
	"FROM_NOW",
	"NOW",
	"AM",
	"PM",
	"NEXT",
	"IN",
	"LAST",
	"AT",
	"ON",
	"_",
	"Whitespace",
	"EOL",
	"EOF",
	"Action0",
	"Action1",
	"Action2",
	"Action3",
	"Action4",
	"Action5",
	"Action6",
	"Action7",
	"Action8",
	"Action9",
	"Action10",
	"Action11",
	"Action12",
	"Action13",
	"Action14",
	"Action15",
	"Action16",
	"Action17",
	"Action18",
	"Action19",
	"Action20",
	"Action21",
	"Action22",
	"Action23",
	"Action24",
	"Action25",
	"Action26",
	"Action27",
	"Action28",
	"Action29",
	"Action30",
	"Action31",
	"Action32",
	"PegText",
	"Action33",
	"Action34",
	"Action35",
	"Action36",
	"Action37",
	"Action38",
	"Action39",
	"Action40",
	"Action41",
	"Action42",
	"Action43",
	"Action44",
	"Action45",
	"Action46",
	"Action47",
	"Action48",
	"Action49",
	"Action50",
	"Action51",
	"Action52",
	"Action53",
	"Action54",
	"Action55",
	"Action56",
	"Action57",
	"Action58",
	"Action59",
	"Action60",
	"Action61",
	"Action62",
	"Action63",
	"Action64",
	"Action65",
	"Action66",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type parser struct {
	t         time.Time
	number    int
	month     time.Month
	weekday   time.Weekday
	direction int

	Buffer string
	buffer []rune
	rules  [116]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *parser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *parser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *parser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *parser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *parser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *parser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *parser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case rulePegText:
			begin, end = int(token.begin), int(token.end)
			text = string(_buffer[begin:end])

		case ruleAction0:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction1:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction2:

			p.t = p.t.Add(-time.Minute * time.Duration(p.number))

		case ruleAction3:

			p.t = p.t.Add(time.Minute * time.Duration(p.number))

		case ruleAction4:

			p.t = p.t.Add(time.Minute)

		case ruleAction5:

			p.t = p.t.Add(-time.Minute)

		case ruleAction6:

			p.t = p.t.Add(-time.Hour * time.Duration(p.number))

		case ruleAction7:

			p.t = p.t.Add(time.Hour * time.Duration(p.number))

		case ruleAction8:

			p.t = p.t.Add(-time.Hour)

		case ruleAction9:

			p.t = p.t.Add(time.Hour)

		case ruleAction10:

			p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))

		case ruleAction11:

			p.t = p.t.Add(day * time.Duration(p.number))

		case ruleAction12:

			p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))

		case ruleAction13:

			p.t = p.t.Add(week * time.Duration(p.number))

		case ruleAction14:

			p.t = p.t.AddDate(0, -p.number, 0)

		case ruleAction15:

			p.t = p.t.AddDate(0, p.number, 0)

		case ruleAction16:

			p.t = prevMonth(p.t, p.month)

		case ruleAction17:

			p.t = nextMonth(p.t, p.month)

		case ruleAction18:

			p.t = p.t.AddDate(-p.number, 0, 0)

		case ruleAction19:

			p.t = p.t.AddDate(p.number, 0, 0)

		case ruleAction20:

			p.t = time.Date(p.t.Year()-1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction21:

			p.t = time.Date(p.t.Year()+1, 1, 1, 0, 0, 0, 0, p.t.Location())

		case ruleAction22:

			p.t = truncateDay(p.t)

		case ruleAction23:

			p.t = truncateDay(p.t.Add(-day))

		case ruleAction24:

			p.t = truncateDay(p.t.Add(+day))

		case ruleAction25:

			p.t = truncateDay(prevWeekday(p.t, p.weekday))

		case ruleAction26:

			p.t = truncateDay(nextWeekday(p.t, p.weekday))

		case ruleAction27:

			t := p.t
			year, month, _ := t.Date()
			hour, min, sec := t.Clock()
			p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())

		case ruleAction28:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction29:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number+12, 0, 0, 0, p.t.Location())

		case ruleAction30:

			year, month, day := p.t.Date()
			p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())

		case ruleAction31:

			t := p.t
			year, month, day := t.Date()
			hour, _, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())

		case ruleAction32:

			t := p.t
			year, month, day := t.Date()
			hour, min, _ := t.Clock()
			p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())

		case ruleAction33:
			n, _ := strconv.Atoi(text)
			p.number = n
		case ruleAction34:
			p.number = 1
		case ruleAction35:
			p.number = 1
		case ruleAction36:
			p.number = 2
		case ruleAction37:
			p.number = 3
		case ruleAction38:
			p.number = 4
		case ruleAction39:
			p.number = 5
		case ruleAction40:
			p.number = 6
		case ruleAction41:
			p.number = 7
		case ruleAction42:
			p.number = 8
		case ruleAction43:
			p.number = 9
		case ruleAction44:
			p.number = 10
		case ruleAction45:
			p.weekday = time.Sunday
		case ruleAction46:
			p.weekday = time.Monday
		case ruleAction47:
			p.weekday = time.Tuesday
		case ruleAction48:
			p.weekday = time.Wednesday
		case ruleAction49:
			p.weekday = time.Thursday
		case ruleAction50:
			p.weekday = time.Friday
		case ruleAction51:
			p.weekday = time.Saturday
		case ruleAction52:
			p.month = time.January
		case ruleAction53:
			p.month = time.February
		case ruleAction54:
			p.month = time.March
		case ruleAction55:
			p.month = time.April
		case ruleAction56:
			p.month = time.May
		case ruleAction57:
			p.month = time.June
		case ruleAction58:
			p.month = time.July
		case ruleAction59:
			p.month = time.August
		case ruleAction60:
			p.month = time.September
		case ruleAction61:
			p.month = time.October
		case ruleAction62:
			p.month = time.November
		case ruleAction63:
			p.month = time.December
		case ruleAction64:
			p.number = 1
		case ruleAction65:
			p.number = 1
		case ruleAction66:
			p.number = 1

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*parser) error {
	return func(p *parser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*parser) error {
	return func(p *parser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *parser) Init(options ...func(*parser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 Query <- <(_ Expr+ EOF)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				if !_rules[rule_]() {
					goto l0
				}
				if !_rules[ruleExpr]() {
					goto l0
				}
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleExpr]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				if !_rules[ruleEOF]() {
					goto l0
				}
				add(ruleQuery, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Expr <- <(NOW / RelativeMinutes / RelativeMinutes / RelativeHours / (RelativeDays (AT? Time)?) / (RelativeWeeks (AT? Time)?) / (RelativeWeekdays (AT? Time)?) / RelativeMonth / RelativeYear / (Date (AT? Time)?) / (Time ON? Date))> */
		func() bool {
			position4, tokenIndex4 := position, tokenIndex
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					if !_rules[ruleNOW]() {
						goto l7
					}
					goto l6
				l7:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l8
					}
					goto l6
				l8:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMinutes]() {
						goto l9
					}
					goto l6
				l9:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeHours]() {
						goto l10
					}
					goto l6
				l10:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeDays]() {
						goto l11
					}
					{
						position12, tokenIndex12 := position, tokenIndex
						{
							position14, tokenIndex14 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l14
							}
							goto l15
						l14:
							position, tokenIndex = position14, tokenIndex14
						}
					l15:
						if !_rules[ruleTime]() {
							goto l12
						}
						goto l13
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
				l13:
					goto l6
				l11:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeeks]() {
						goto l16
					}
					{
						position17, tokenIndex17 := position, tokenIndex
						{
							position19, tokenIndex19 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l19
							}
							goto l20
						l19:
							position, tokenIndex = position19, tokenIndex19
						}
					l20:
						if !_rules[ruleTime]() {
							goto l17
						}
						goto l18
					l17:
						position, tokenIndex = position17, tokenIndex17
					}
				l18:
					goto l6
				l16:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeWeekdays]() {
						goto l21
					}
					{
						position22, tokenIndex22 := position, tokenIndex
						{
							position24, tokenIndex24 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l24
							}
							goto l25
						l24:
							position, tokenIndex = position24, tokenIndex24
						}
					l25:
						if !_rules[ruleTime]() {
							goto l22
						}
						goto l23
					l22:
						position, tokenIndex = position22, tokenIndex22
					}
				l23:
					goto l6
				l21:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeMonth]() {
						goto l26
					}
					goto l6
				l26:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleRelativeYear]() {
						goto l27
					}
					goto l6
				l27:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleDate]() {
						goto l28
					}
					{
						position29, tokenIndex29 := position, tokenIndex
						{
							position31, tokenIndex31 := position, tokenIndex
							if !_rules[ruleAT]() {
								goto l31
							}
							goto l32
						l31:
							position, tokenIndex = position31, tokenIndex31
						}
					l32:
						if !_rules[ruleTime]() {
							goto l29
						}
						goto l30
					l29:
						position, tokenIndex = position29, tokenIndex29
					}
				l30:
					goto l6
				l28:
					position, tokenIndex = position6, tokenIndex6
					if !_rules[ruleTime]() {
						goto l4
					}
					{
						position33, tokenIndex33 := position, tokenIndex
						if !_rules[ruleON]() {
							goto l33
						}
						goto l34
					l33:
						position, tokenIndex = position33, tokenIndex33
					}
				l34:
					if !_rules[ruleDate]() {
						goto l4
					}
				}
			l6:
				add(ruleExpr, position5)
			}
			return true
		l4:
			position, tokenIndex = position4, tokenIndex4
			return false
		},
		/* 2 RelativeMinutes <- <((Number MINUTES AGO Action0) / (((Number MINUTES FROM_NOW) / (In Number? MINUTES FROM_NOW?)) Action1) / (Last Number? MINUTES Action2) / (Next Number? MINUTES Action3) / (NEXT MINUTE Action4) / (LAST MINUTE Action5))> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l38
					}
					if !_rules[ruleMINUTES]() {
						goto l38
					}
					if !_rules[ruleAGO]() {
						goto l38
					}
					if !_rules[ruleAction0]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					{
						position40, tokenIndex40 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l41
						}
						if !_rules[ruleMINUTES]() {
							goto l41
						}
						if !_rules[ruleFROM_NOW]() {
							goto l41
						}
						goto l40
					l41:
						position, tokenIndex = position40, tokenIndex40
						if !_rules[ruleIn]() {
							goto l39
						}
						{
							position42, tokenIndex42 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l42
							}
							goto l43
						l42:
							position, tokenIndex = position42, tokenIndex42
						}
					l43:
						if !_rules[ruleMINUTES]() {
							goto l39
						}
						{
							position44, tokenIndex44 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l44
							}
							goto l45
						l44:
							position, tokenIndex = position44, tokenIndex44
						}
					l45:
					}
				l40:
					if !_rules[ruleAction1]() {
						goto l39
					}
					goto l37
				l39:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleLast]() {
						goto l46
					}
					{
						position47, tokenIndex47 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l47
						}
						goto l48
					l47:
						position, tokenIndex = position47, tokenIndex47
					}
				l48:
					if !_rules[ruleMINUTES]() {
						goto l46
					}
					if !_rules[ruleAction2]() {
						goto l46
					}
					goto l37
				l46:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNext]() {
						goto l49
					}
					{
						position50, tokenIndex50 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l50
						}
						goto l51
					l50:
						position, tokenIndex = position50, tokenIndex50
					}
				l51:
					if !_rules[ruleMINUTES]() {
						goto l49
					}
					if !_rules[ruleAction3]() {
						goto l49
					}
					goto l37
				l49:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNEXT]() {
						goto l52
					}
					if !_rules[ruleMINUTE]() {
						goto l52
					}
					if !_rules[ruleAction4]() {
						goto l52
					}
					goto l37
				l52:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleLAST]() {
						goto l35
					}
					if !_rules[ruleMINUTE]() {
						goto l35
					}
					if !_rules[ruleAction5]() {
						goto l35
					}
				}
			l37:
				add(ruleRelativeMinutes, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 3 RelativeHours <- <((Number HOURS AGO Action6) / (((Number HOURS FROM_NOW) / (In Number? HOURS FROM_NOW?)) Action7) / (LAST HOUR Action8) / (NEXT HOUR Action9))> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				{
					position55, tokenIndex55 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l56
					}
					if !_rules[ruleHOURS]() {
						goto l56
					}
					if !_rules[ruleAGO]() {
						goto l56
					}
					if !_rules[ruleAction6]() {
						goto l56
					}
					goto l55
				l56:
					position, tokenIndex = position55, tokenIndex55
					{
						position58, tokenIndex58 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l59
						}
						if !_rules[ruleHOURS]() {
							goto l59
						}
						if !_rules[ruleFROM_NOW]() {
							goto l59
						}
						goto l58
					l59:
						position, tokenIndex = position58, tokenIndex58
						if !_rules[ruleIn]() {
							goto l57
						}
						{
							position60, tokenIndex60 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l60
							}
							goto l61
						l60:
							position, tokenIndex = position60, tokenIndex60
						}
					l61:
						if !_rules[ruleHOURS]() {
							goto l57
						}
						{
							position62, tokenIndex62 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l62
							}
							goto l63
						l62:
							position, tokenIndex = position62, tokenIndex62
						}
					l63:
					}
				l58:
					if !_rules[ruleAction7]() {
						goto l57
					}
					goto l55
				l57:
					position, tokenIndex = position55, tokenIndex55
					if !_rules[ruleLAST]() {
						goto l64
					}
					if !_rules[ruleHOUR]() {
						goto l64
					}
					if !_rules[ruleAction8]() {
						goto l64
					}
					goto l55
				l64:
					position, tokenIndex = position55, tokenIndex55
					if !_rules[ruleNEXT]() {
						goto l53
					}
					if !_rules[ruleHOUR]() {
						goto l53
					}
					if !_rules[ruleAction9]() {
						goto l53
					}
				}
			l55:
				add(ruleRelativeHours, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 4 RelativeDays <- <((Number DAYS AGO Action10) / (((Number DAYS FROM_NOW) / (In Number? DAYS FROM_NOW?)) Action11))> */
		func() bool {
			position65, tokenIndex65 := position, tokenIndex
			{
				position66 := position
				{
					position67, tokenIndex67 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l68
					}
					if !_rules[ruleDAYS]() {
						goto l68
					}
					if !_rules[ruleAGO]() {
						goto l68
					}
					if !_rules[ruleAction10]() {
						goto l68
					}
					goto l67
				l68:
					position, tokenIndex = position67, tokenIndex67
					{
						position69, tokenIndex69 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l70
						}
						if !_rules[ruleDAYS]() {
							goto l70
						}
						if !_rules[ruleFROM_NOW]() {
							goto l70
						}
						goto l69
					l70:
						position, tokenIndex = position69, tokenIndex69
						if !_rules[ruleIn]() {
							goto l65
						}
						{
							position71, tokenIndex71 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l71
							}
							goto l72
						l71:
							position, tokenIndex = position71, tokenIndex71
						}
					l72:
						if !_rules[ruleDAYS]() {
							goto l65
						}
						{
							position73, tokenIndex73 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l73
							}
							goto l74
						l73:
							position, tokenIndex = position73, tokenIndex73
						}
					l74:
					}
				l69:
					if !_rules[ruleAction11]() {
						goto l65
					}
				}
			l67:
				add(ruleRelativeDays, position66)
			}
			return true
		l65:
			position, tokenIndex = position65, tokenIndex65
			return false
		},
		/* 5 RelativeWeeks <- <((Number WEEKS AGO Action12) / (((Number WEEKS FROM_NOW) / (In Number? WEEKS FROM_NOW?)) Action13))> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				{
					position77, tokenIndex77 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l78
					}
					if !_rules[ruleWEEKS]() {
						goto l78
					}
					if !_rules[ruleAGO]() {
						goto l78
					}
					if !_rules[ruleAction12]() {
						goto l78
					}
					goto l77
				l78:
					position, tokenIndex = position77, tokenIndex77
					{
						position79, tokenIndex79 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l80
						}
						if !_rules[ruleWEEKS]() {
							goto l80
						}
						if !_rules[ruleFROM_NOW]() {
							goto l80
						}
						goto l79
					l80:
						position, tokenIndex = position79, tokenIndex79
						if !_rules[ruleIn]() {
							goto l75
						}
						{
							position81, tokenIndex81 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l81
							}
							goto l82
						l81:
							position, tokenIndex = position81, tokenIndex81
						}
					l82:
						if !_rules[ruleWEEKS]() {
							goto l75
						}
						{
							position83, tokenIndex83 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l83
							}
							goto l84
						l83:
							position, tokenIndex = position83, tokenIndex83
						}
					l84:
					}
				l79:
					if !_rules[ruleAction13]() {
						goto l75
					}
				}
			l77:
				add(ruleRelativeWeeks, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 6 RelativeMonth <- <((Number MONTHS AGO Action14) / (((Number MONTHS FROM_NOW) / (In Number? MONTHS FROM_NOW?)) Action15) / (LAST Month Action16) / (NEXT Month Action17))> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l88
					}
					if !_rules[ruleMONTHS]() {
						goto l88
					}
					if !_rules[ruleAGO]() {
						goto l88
					}
					if !_rules[ruleAction14]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					{
						position90, tokenIndex90 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l91
						}
						if !_rules[ruleMONTHS]() {
							goto l91
						}
						if !_rules[ruleFROM_NOW]() {
							goto l91
						}
						goto l90
					l91:
						position, tokenIndex = position90, tokenIndex90
						if !_rules[ruleIn]() {
							goto l89
						}
						{
							position92, tokenIndex92 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l92
							}
							goto l93
						l92:
							position, tokenIndex = position92, tokenIndex92
						}
					l93:
						if !_rules[ruleMONTHS]() {
							goto l89
						}
						{
							position94, tokenIndex94 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l94
							}
							goto l95
						l94:
							position, tokenIndex = position94, tokenIndex94
						}
					l95:
					}
				l90:
					if !_rules[ruleAction15]() {
						goto l89
					}
					goto l87
				l89:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleLAST]() {
						goto l96
					}
					if !_rules[ruleMonth]() {
						goto l96
					}
					if !_rules[ruleAction16]() {
						goto l96
					}
					goto l87
				l96:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleNEXT]() {
						goto l85
					}
					if !_rules[ruleMonth]() {
						goto l85
					}
					if !_rules[ruleAction17]() {
						goto l85
					}
				}
			l87:
				add(ruleRelativeMonth, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 7 RelativeYear <- <((Number YEARS AGO Action18) / (((Number YEARS FROM_NOW) / (In Number? YEARS FROM_NOW?)) Action19) / (LAST YEARS Action20) / (NEXT YEARS Action21))> */
		func() bool {
			position97, tokenIndex97 := position, tokenIndex
			{
				position98 := position
				{
					position99, tokenIndex99 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l100
					}
					if !_rules[ruleYEARS]() {
						goto l100
					}
					if !_rules[ruleAGO]() {
						goto l100
					}
					if !_rules[ruleAction18]() {
						goto l100
					}
					goto l99
				l100:
					position, tokenIndex = position99, tokenIndex99
					{
						position102, tokenIndex102 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l103
						}
						if !_rules[ruleYEARS]() {
							goto l103
						}
						if !_rules[ruleFROM_NOW]() {
							goto l103
						}
						goto l102
					l103:
						position, tokenIndex = position102, tokenIndex102
						if !_rules[ruleIn]() {
							goto l101
						}
						{
							position104, tokenIndex104 := position, tokenIndex
							if !_rules[ruleNumber]() {
								goto l104
							}
							goto l105
						l104:
							position, tokenIndex = position104, tokenIndex104
						}
					l105:
						if !_rules[ruleYEARS]() {
							goto l101
						}
						{
							position106, tokenIndex106 := position, tokenIndex
							if !_rules[ruleFROM_NOW]() {
								goto l106
							}
							goto l107
						l106:
							position, tokenIndex = position106, tokenIndex106
						}
					l107:
					}
				l102:
					if !_rules[ruleAction19]() {
						goto l101
					}
					goto l99
				l101:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleLAST]() {
						goto l108
					}
					if !_rules[ruleYEARS]() {
						goto l108
					}
					if !_rules[ruleAction20]() {
						goto l108
					}
					goto l99
				l108:
					position, tokenIndex = position99, tokenIndex99
					if !_rules[ruleNEXT]() {
						goto l97
					}
					if !_rules[ruleYEARS]() {
						goto l97
					}
					if !_rules[ruleAction21]() {
						goto l97
					}
				}
			l99:
				add(ruleRelativeYear, position98)
			}
			return true
		l97:
			position, tokenIndex = position97, tokenIndex97
			return false
		},
		/* 8 RelativeWeekdays <- <((TODAY Action22) / (YESTERDAY Action23) / (TOMORROW Action24) / (LAST Weekday Action25) / (NEXT Weekday Action26))> */
		func() bool {
			position109, tokenIndex109 := position, tokenIndex
			{
				position110 := position
				{
					position111, tokenIndex111 := position, tokenIndex
					if !_rules[ruleTODAY]() {
						goto l112
					}
					if !_rules[ruleAction22]() {
						goto l112
					}
					goto l111
				l112:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleYESTERDAY]() {
						goto l113
					}
					if !_rules[ruleAction23]() {
						goto l113
					}
					goto l111
				l113:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleTOMORROW]() {
						goto l114
					}
					if !_rules[ruleAction24]() {
						goto l114
					}
					goto l111
				l114:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleLAST]() {
						goto l115
					}
					if !_rules[ruleWeekday]() {
						goto l115
					}
					if !_rules[ruleAction25]() {
						goto l115
					}
					goto l111
				l115:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleNEXT]() {
						goto l109
					}
					if !_rules[ruleWeekday]() {
						goto l109
					}
					if !_rules[ruleAction26]() {
						goto l109
					}
				}
			l111:
				add(ruleRelativeWeekdays, position110)
			}
			return true
		l109:
			position, tokenIndex = position109, tokenIndex109
			return false
		},
		/* 9 Date <- <(((Number Ordinal) / (Last Number? Number)) Action27)> */
		func() bool {
			position116, tokenIndex116 := position, tokenIndex
			{
				position117 := position
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l119
					}
					if !_rules[ruleOrdinal]() {
						goto l119
					}
					goto l118
				l119:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleLast]() {
						goto l116
					}
					{
						position120, tokenIndex120 := position, tokenIndex
						if !_rules[ruleNumber]() {
							goto l120
						}
						goto l121
					l120:
						position, tokenIndex = position120, tokenIndex120
					}
				l121:
					if !_rules[ruleNumber]() {
						goto l116
					}
				}
			l118:
				if !_rules[ruleAction27]() {
					goto l116
				}
				add(ruleDate, position117)
			}
			return true
		l116:
			position, tokenIndex = position116, tokenIndex116
			return false
		},
		/* 10 Time <- <(Clock12Hour / Clock24Hour)> */
		func() bool {
			position122, tokenIndex122 := position, tokenIndex
			{
				position123 := position
				{
					position124, tokenIndex124 := position, tokenIndex
					if !_rules[ruleClock12Hour]() {
						goto l125
					}
					goto l124
				l125:
					position, tokenIndex = position124, tokenIndex124
					if !_rules[ruleClock24Hour]() {
						goto l122
					}
				}
			l124:
				add(ruleTime, position123)
			}
			return true
		l122:
			position, tokenIndex = position122, tokenIndex122
			return false
		},
		/* 11 Clock12Hour <- <((Number Action28 (Minutes Seconds?)? AM) / (Number Action29 (Minutes Seconds?)? PM))> */
		func() bool {
			position126, tokenIndex126 := position, tokenIndex
			{
				position127 := position
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleNumber]() {
						goto l129
					}
					if !_rules[ruleAction28]() {
						goto l129
					}
					{
						position130, tokenIndex130 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l130
						}
						{
							position132, tokenIndex132 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l132
							}
							goto l133
						l132:
							position, tokenIndex = position132, tokenIndex132
						}
					l133:
						goto l131
					l130:
						position, tokenIndex = position130, tokenIndex130
					}
				l131:
					if !_rules[ruleAM]() {
						goto l129
					}
					goto l128
				l129:
					position, tokenIndex = position128, tokenIndex128
					if !_rules[ruleNumber]() {
						goto l126
					}
					if !_rules[ruleAction29]() {
						goto l126
					}
					{
						position134, tokenIndex134 := position, tokenIndex
						if !_rules[ruleMinutes]() {
							goto l134
						}
						{
							position136, tokenIndex136 := position, tokenIndex
							if !_rules[ruleSeconds]() {
								goto l136
							}
							goto l137
						l136:
							position, tokenIndex = position136, tokenIndex136
						}
					l137:
						goto l135
					l134:
						position, tokenIndex = position134, tokenIndex134
					}
				l135:
					if !_rules[rulePM]() {
						goto l126
					}
				}
			l128:
				add(ruleClock12Hour, position127)
			}
			return true
		l126:
			position, tokenIndex = position126, tokenIndex126
			return false
		},
		/* 12 Clock24Hour <- <(Number Action30 (Minutes Seconds?)?)> */
		func() bool {
			position138, tokenIndex138 := position, tokenIndex
			{
				position139 := position
				if !_rules[ruleNumber]() {
					goto l138
				}
				if !_rules[ruleAction30]() {
					goto l138
				}
				{
					position140, tokenIndex140 := position, tokenIndex
					if !_rules[ruleMinutes]() {
						goto l140
					}
					{
						position142, tokenIndex142 := position, tokenIndex
						if !_rules[ruleSeconds]() {
							goto l142
						}
						goto l143
					l142:
						position, tokenIndex = position142, tokenIndex142
					}
				l143:
					goto l141
				l140:
					position, tokenIndex = position140, tokenIndex140
				}
			l141:
				add(ruleClock24Hour, position139)
			}
			return true
		l138:
			position, tokenIndex = position138, tokenIndex138
			return false
		},
		/* 13 Minutes <- <(':' Number Action31)> */
		func() bool {
			position144, tokenIndex144 := position, tokenIndex
			{
				position145 := position
				if buffer[position] != rune(':') {
					goto l144
				}
				position++
				if !_rules[ruleNumber]() {
					goto l144
				}
				if !_rules[ruleAction31]() {
					goto l144
				}
				add(ruleMinutes, position145)
			}
			return true
		l144:
			position, tokenIndex = position144, tokenIndex144
			return false
		},
		/* 14 Seconds <- <(':' Number Action32)> */
		func() bool {
			position146, tokenIndex146 := position, tokenIndex
			{
				position147 := position
				if buffer[position] != rune(':') {
					goto l146
				}
				position++
				if !_rules[ruleNumber]() {
					goto l146
				}
				if !_rules[ruleAction32]() {
					goto l146
				}
				add(ruleSeconds, position147)
			}
			return true
		l146:
			position, tokenIndex = position146, tokenIndex146
			return false
		},
		/* 15 Number <- <((<[0-9]+> _ Action33) / ('a' 'n'? _ Action34) / ('o' 'n' 'e' _ Action35) / ('t' 'w' 'o' _ Action36) / ('t' 'h' 'r' 'e' 'e' _ Action37) / ('f' 'o' 'u' 'r' _ Action38) / ('f' 'i' 'v' 'e' _ Action39) / ('s' 'i' 'x' _ Action40) / ('s' 'e' 'v' 'e' 'n' _ Action41) / ('e' 'i' 'g' 'h' 't' _ Action42) / ('n' 'i' 'n' 'e' _ Action43) / ('t' 'e' 'n' _ Action44))> */
		func() bool {
			position148, tokenIndex148 := position, tokenIndex
			{
				position149 := position
				{
					position150, tokenIndex150 := position, tokenIndex
					{
						position152 := position
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l151
						}
						position++
					l153:
						{
							position154, tokenIndex154 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l154
							}
							position++
							goto l153
						l154:
							position, tokenIndex = position154, tokenIndex154
						}
						add(rulePegText, position152)
					}
					if !_rules[rule_]() {
						goto l151
					}
					if !_rules[ruleAction33]() {
						goto l151
					}
					goto l150
				l151:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('a') {
						goto l155
					}
					position++
					{
						position156, tokenIndex156 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l156
						}
						position++
						goto l157
					l156:
						position, tokenIndex = position156, tokenIndex156
					}
				l157:
					if !_rules[rule_]() {
						goto l155
					}
					if !_rules[ruleAction34]() {
						goto l155
					}
					goto l150
				l155:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('o') {
						goto l158
					}
					position++
					if buffer[position] != rune('n') {
						goto l158
					}
					position++
					if buffer[position] != rune('e') {
						goto l158
					}
					position++
					if !_rules[rule_]() {
						goto l158
					}
					if !_rules[ruleAction35]() {
						goto l158
					}
					goto l150
				l158:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('t') {
						goto l159
					}
					position++
					if buffer[position] != rune('w') {
						goto l159
					}
					position++
					if buffer[position] != rune('o') {
						goto l159
					}
					position++
					if !_rules[rule_]() {
						goto l159
					}
					if !_rules[ruleAction36]() {
						goto l159
					}
					goto l150
				l159:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('t') {
						goto l160
					}
					position++
					if buffer[position] != rune('h') {
						goto l160
					}
					position++
					if buffer[position] != rune('r') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if buffer[position] != rune('e') {
						goto l160
					}
					position++
					if !_rules[rule_]() {
						goto l160
					}
					if !_rules[ruleAction37]() {
						goto l160
					}
					goto l150
				l160:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('f') {
						goto l161
					}
					position++
					if buffer[position] != rune('o') {
						goto l161
					}
					position++
					if buffer[position] != rune('u') {
						goto l161
					}
					position++
					if buffer[position] != rune('r') {
						goto l161
					}
					position++
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleAction38]() {
						goto l161
					}
					goto l150
				l161:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('f') {
						goto l162
					}
					position++
					if buffer[position] != rune('i') {
						goto l162
					}
					position++
					if buffer[position] != rune('v') {
						goto l162
					}
					position++
					if buffer[position] != rune('e') {
						goto l162
					}
					position++
					if !_rules[rule_]() {
						goto l162
					}
					if !_rules[ruleAction39]() {
						goto l162
					}
					goto l150
				l162:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('s') {
						goto l163
					}
					position++
					if buffer[position] != rune('i') {
						goto l163
					}
					position++
					if buffer[position] != rune('x') {
						goto l163
					}
					position++
					if !_rules[rule_]() {
						goto l163
					}
					if !_rules[ruleAction40]() {
						goto l163
					}
					goto l150
				l163:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('s') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('v') {
						goto l164
					}
					position++
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('n') {
						goto l164
					}
					position++
					if !_rules[rule_]() {
						goto l164
					}
					if !_rules[ruleAction41]() {
						goto l164
					}
					goto l150
				l164:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('e') {
						goto l165
					}
					position++
					if buffer[position] != rune('i') {
						goto l165
					}
					position++
					if buffer[position] != rune('g') {
						goto l165
					}
					position++
					if buffer[position] != rune('h') {
						goto l165
					}
					position++
					if buffer[position] != rune('t') {
						goto l165
					}
					position++
					if !_rules[rule_]() {
						goto l165
					}
					if !_rules[ruleAction42]() {
						goto l165
					}
					goto l150
				l165:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l166
					}
					position++
					if buffer[position] != rune('i') {
						goto l166
					}
					position++
					if buffer[position] != rune('n') {
						goto l166
					}
					position++
					if buffer[position] != rune('e') {
						goto l166
					}
					position++
					if !_rules[rule_]() {
						goto l166
					}
					if !_rules[ruleAction43]() {
						goto l166
					}
					goto l150
				l166:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('e') {
						goto l148
					}
					position++
					if buffer[position] != rune('n') {
						goto l148
					}
					position++
					if !_rules[rule_]() {
						goto l148
					}
					if !_rules[ruleAction44]() {
						goto l148
					}
				}
			l150:
				add(ruleNumber, position149)
			}
			return true
		l148:
			position, tokenIndex = position148, tokenIndex148
			return false
		},
		/* 16 Weekday <- <(('s' 'u' 'n' 'd' 'a' 'y' _ Action45) / ('m' 'o' 'n' 'd' 'a' 'y' _ Action46) / ('t' 'u' 'e' 's' 'd' 'a' 'y' _ Action47) / ('w' 'e' 'd' 'n' 'e' 's' 'd' 'a' 'y' _ Action48) / ('t' 'h' 'u' 'r' 's' 'd' 'a' 'y' _ Action49) / ('f' 'r' 'i' 'd' 'a' 'y' _ Action50) / ('s' 'a' 't' 'u' 'r' 'd' 'a' 'y' _ Action51))> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				{
					position169, tokenIndex169 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l170
					}
					position++
					if buffer[position] != rune('u') {
						goto l170
					}
					position++
					if buffer[position] != rune('n') {
						goto l170
					}
					position++
					if buffer[position] != rune('d') {
						goto l170
					}
					position++
					if buffer[position] != rune('a') {
						goto l170
					}
					position++
					if buffer[position] != rune('y') {
						goto l170
					}
					position++
					if !_rules[rule_]() {
						goto l170
					}
					if !_rules[ruleAction45]() {
						goto l170
					}
					goto l169
				l170:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('m') {
						goto l171
					}
					position++
					if buffer[position] != rune('o') {
						goto l171
					}
					position++
					if buffer[position] != rune('n') {
						goto l171
					}
					position++
					if buffer[position] != rune('d') {
						goto l171
					}
					position++
					if buffer[position] != rune('a') {
						goto l171
					}
					position++
					if buffer[position] != rune('y') {
						goto l171
					}
					position++
					if !_rules[rule_]() {
						goto l171
					}
					if !_rules[ruleAction46]() {
						goto l171
					}
					goto l169
				l171:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					if buffer[position] != rune('u') {
						goto l172
					}
					position++
					if buffer[position] != rune('e') {
						goto l172
					}
					position++
					if buffer[position] != rune('s') {
						goto l172
					}
					position++
					if buffer[position] != rune('d') {
						goto l172
					}
					position++
					if buffer[position] != rune('a') {
						goto l172
					}
					position++
					if buffer[position] != rune('y') {
						goto l172
					}
					position++
					if !_rules[rule_]() {
						goto l172
					}
					if !_rules[ruleAction47]() {
						goto l172
					}
					goto l169
				l172:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('w') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('d') {
						goto l173
					}
					position++
					if buffer[position] != rune('n') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('s') {
						goto l173
					}
					position++
					if buffer[position] != rune('d') {
						goto l173
					}
					position++
					if buffer[position] != rune('a') {
						goto l173
					}
					position++
					if buffer[position] != rune('y') {
						goto l173
					}
					position++
					if !_rules[rule_]() {
						goto l173
					}
					if !_rules[ruleAction48]() {
						goto l173
					}
					goto l169
				l173:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('t') {
						goto l174
					}
					position++
					if buffer[position] != rune('h') {
						goto l174
					}
					position++
					if buffer[position] != rune('u') {
						goto l174
					}
					position++
					if buffer[position] != rune('r') {
						goto l174
					}
					position++
					if buffer[position] != rune('s') {
						goto l174
					}
					position++
					if buffer[position] != rune('d') {
						goto l174
					}
					position++
					if buffer[position] != rune('a') {
						goto l174
					}
					position++
					if buffer[position] != rune('y') {
						goto l174
					}
					position++
					if !_rules[rule_]() {
						goto l174
					}
					if !_rules[ruleAction49]() {
						goto l174
					}
					goto l169
				l174:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('f') {
						goto l175
					}
					position++
					if buffer[position] != rune('r') {
						goto l175
					}
					position++
					if buffer[position] != rune('i') {
						goto l175
					}
					position++
					if buffer[position] != rune('d') {
						goto l175
					}
					position++
					if buffer[position] != rune('a') {
						goto l175
					}
					position++
					if buffer[position] != rune('y') {
						goto l175
					}
					position++
					if !_rules[rule_]() {
						goto l175
					}
					if !_rules[ruleAction50]() {
						goto l175
					}
					goto l169
				l175:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('s') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('t') {
						goto l167
					}
					position++
					if buffer[position] != rune('u') {
						goto l167
					}
					position++
					if buffer[position] != rune('r') {
						goto l167
					}
					position++
					if buffer[position] != rune('d') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('y') {
						goto l167
					}
					position++
					if !_rules[rule_]() {
						goto l167
					}
					if !_rules[ruleAction51]() {
						goto l167
					}
				}
			l169:
				add(ruleWeekday, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 17 Month <- <(('j' 'a' 'n' 'u' 'a' 'r' 'y' _ Action52) / ('f' 'e' 'b' 'r' 'u' 'a' 'r' 'y' _ Action53) / ('m' 'a' 'r' 'c' 'h' _ Action54) / ('a' 'p' 'r' 'i' 'l' _ Action55) / ('m' 'a' 'y' _ Action56) / ('j' 'u' 'n' 'e' _ Action57) / ('j' 'u' 'l' 'y' _ Action58) / ('a' 'u' 'g' 'u' 's' 't' _ Action59) / ('s' 'e' 'p' 't' 'e' 'm' 'b' 'e' 'r' _ Action60) / ('o' 'c' 't' 'o' 'b' 'e' 'r' _ Action61) / ('n' 'o' 'v' 'e' 'm' 'b' 'e' 'r' _ Action62) / ('d' 'e' 'c' 'e' 'm' 'b' 'e' 'r' _ Action63))> */
		func() bool {
			position176, tokenIndex176 := position, tokenIndex
			{
				position177 := position
				{
					position178, tokenIndex178 := position, tokenIndex
					if buffer[position] != rune('j') {
						goto l179
					}
					position++
					if buffer[position] != rune('a') {
						goto l179
					}
					position++
					if buffer[position] != rune('n') {
						goto l179
					}
					position++
					if buffer[position] != rune('u') {
						goto l179
					}
					position++
					if buffer[position] != rune('a') {
						goto l179
					}
					position++
					if buffer[position] != rune('r') {
						goto l179
					}
					position++
					if buffer[position] != rune('y') {
						goto l179
					}
					position++
					if !_rules[rule_]() {
						goto l179
					}
					if !_rules[ruleAction52]() {
						goto l179
					}
					goto l178
				l179:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('f') {
						goto l180
					}
					position++
					if buffer[position] != rune('e') {
						goto l180
					}
					position++
					if buffer[position] != rune('b') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					if buffer[position] != rune('u') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					if buffer[position] != rune('y') {
						goto l180
					}
					position++
					if !_rules[rule_]() {
						goto l180
					}
					if !_rules[ruleAction53]() {
						goto l180
					}
					goto l178
				l180:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('m') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('r') {
						goto l181
					}
					position++
					if buffer[position] != rune('c') {
						goto l181
					}
					position++
					if buffer[position] != rune('h') {
						goto l181
					}
					position++
					if !_rules[rule_]() {
						goto l181
					}
					if !_rules[ruleAction54]() {
						goto l181
					}
					goto l178
				l181:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('a') {
						goto l182
					}
					position++
					if buffer[position] != rune('p') {
						goto l182
					}
					position++
					if buffer[position] != rune('r') {
						goto l182
					}
					position++
					if buffer[position] != rune('i') {
						goto l182
					}
					position++
					if buffer[position] != rune('l') {
						goto l182
					}
					position++
					if !_rules[rule_]() {
						goto l182
					}
					if !_rules[ruleAction55]() {
						goto l182
					}
					goto l178
				l182:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('m') {
						goto l183
					}
					position++
					if buffer[position] != rune('a') {
						goto l183
					}
					position++
					if buffer[position] != rune('y') {
						goto l183
					}
					position++
					if !_rules[rule_]() {
						goto l183
					}
					if !_rules[ruleAction56]() {
						goto l183
					}
					goto l178
				l183:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('j') {
						goto l184
					}
					position++
					if buffer[position] != rune('u') {
						goto l184
					}
					position++
					if buffer[position] != rune('n') {
						goto l184
					}
					position++
					if buffer[position] != rune('e') {
						goto l184
					}
					position++
					if !_rules[rule_]() {
						goto l184
					}
					if !_rules[ruleAction57]() {
						goto l184
					}
					goto l178
				l184:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('j') {
						goto l185
					}
					position++
					if buffer[position] != rune('u') {
						goto l185
					}
					position++
					if buffer[position] != rune('l') {
						goto l185
					}
					position++
					if buffer[position] != rune('y') {
						goto l185
					}
					position++
					if !_rules[rule_]() {
						goto l185
					}
					if !_rules[ruleAction58]() {
						goto l185
					}
					goto l178
				l185:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('a') {
						goto l186
					}
					position++
					if buffer[position] != rune('u') {
						goto l186
					}
					position++
					if buffer[position] != rune('g') {
						goto l186
					}
					position++
					if buffer[position] != rune('u') {
						goto l186
					}
					position++
					if buffer[position] != rune('s') {
						goto l186
					}
					position++
					if buffer[position] != rune('t') {
						goto l186
					}
					position++
					if !_rules[rule_]() {
						goto l186
					}
					if !_rules[ruleAction59]() {
						goto l186
					}
					goto l178
				l186:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('s') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('p') {
						goto l187
					}
					position++
					if buffer[position] != rune('t') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('m') {
						goto l187
					}
					position++
					if buffer[position] != rune('b') {
						goto l187
					}
					position++
					if buffer[position] != rune('e') {
						goto l187
					}
					position++
					if buffer[position] != rune('r') {
						goto l187
					}
					position++
					if !_rules[rule_]() {
						goto l187
					}
					if !_rules[ruleAction60]() {
						goto l187
					}
					goto l178
				l187:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('o') {
						goto l188
					}
					position++
					if buffer[position] != rune('c') {
						goto l188
					}
					position++
					if buffer[position] != rune('t') {
						goto l188
					}
					position++
					if buffer[position] != rune('o') {
						goto l188
					}
					position++
					if buffer[position] != rune('b') {
						goto l188
					}
					position++
					if buffer[position] != rune('e') {
						goto l188
					}
					position++
					if buffer[position] != rune('r') {
						goto l188
					}
					position++
					if !_rules[rule_]() {
						goto l188
					}
					if !_rules[ruleAction61]() {
						goto l188
					}
					goto l178
				l188:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('n') {
						goto l189
					}
					position++
					if buffer[position] != rune('o') {
						goto l189
					}
					position++
					if buffer[position] != rune('v') {
						goto l189
					}
					position++
					if buffer[position] != rune('e') {
						goto l189
					}
					position++
					if buffer[position] != rune('m') {
						goto l189
					}
					position++
					if buffer[position] != rune('b') {
						goto l189
					}
					position++
					if buffer[position] != rune('e') {
						goto l189
					}
					position++
					if buffer[position] != rune('r') {
						goto l189
					}
					position++
					if !_rules[rule_]() {
						goto l189
					}
					if !_rules[ruleAction62]() {
						goto l189
					}
					goto l178
				l189:
					position, tokenIndex = position178, tokenIndex178
					if buffer[position] != rune('d') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('c') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('m') {
						goto l176
					}
					position++
					if buffer[position] != rune('b') {
						goto l176
					}
					position++
					if buffer[position] != rune('e') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					if !_rules[rule_]() {
						goto l176
					}
					if !_rules[ruleAction63]() {
						goto l176
					}
				}
			l178:
				add(ruleMonth, position177)
			}
			return true
		l176:
			position, tokenIndex = position176, tokenIndex176
			return false
		},
		/* 18 In <- <(IN Action64)> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				if !_rules[ruleIN]() {
					goto l190
				}
				if !_rules[ruleAction64]() {
					goto l190
				}
				add(ruleIn, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 19 Last <- <(LAST Action65)> */
		func() bool {
			position192, tokenIndex192 := position, tokenIndex
			{
				position193 := position
				if !_rules[ruleLAST]() {
					goto l192
				}
				if !_rules[ruleAction65]() {
					goto l192
				}
				add(ruleLast, position193)
			}
			return true
		l192:
			position, tokenIndex = position192, tokenIndex192
			return false
		},
		/* 20 Next <- <(NEXT Action66)> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				if !_rules[ruleNEXT]() {
					goto l194
				}
				if !_rules[ruleAction66]() {
					goto l194
				}
				add(ruleNext, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 21 Ordinal <- <((('s' 't') / ('n' 'd') / ('r' 'd') / ('t' 'h')) _)> */
		func() bool {
			position196, tokenIndex196 := position, tokenIndex
			{
				position197 := position
				{
					position198, tokenIndex198 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l199
					}
					position++
					if buffer[position] != rune('t') {
						goto l199
					}
					position++
					goto l198
				l199:
					position, tokenIndex = position198, tokenIndex198
					if buffer[position] != rune('n') {
						goto l200
					}
					position++
					if buffer[position] != rune('d') {
						goto l200
					}
					position++
					goto l198
				l200:
					position, tokenIndex = position198, tokenIndex198
					if buffer[position] != rune('r') {
						goto l201
					}
					position++
					if buffer[position] != rune('d') {
						goto l201
					}
					position++
					goto l198
				l201:
					position, tokenIndex = position198, tokenIndex198
					if buffer[position] != rune('t') {
						goto l196
					}
					position++
					if buffer[position] != rune('h') {
						goto l196
					}
					position++
				}
			l198:
				if !_rules[rule_]() {
					goto l196
				}
				add(ruleOrdinal, position197)
			}
			return true
		l196:
			position, tokenIndex = position196, tokenIndex196
			return false
		},
		/* 22 YEARS <- <('y' 'e' 'a' 'r' 's'? _)> */
		func() bool {
			position202, tokenIndex202 := position, tokenIndex
			{
				position203 := position
				if buffer[position] != rune('y') {
					goto l202
				}
				position++
				if buffer[position] != rune('e') {
					goto l202
				}
				position++
				if buffer[position] != rune('a') {
					goto l202
				}
				position++
				if buffer[position] != rune('r') {
					goto l202
				}
				position++
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l204
					}
					position++
					goto l205
				l204:
					position, tokenIndex = position204, tokenIndex204
				}
			l205:
				if !_rules[rule_]() {
					goto l202
				}
				add(ruleYEARS, position203)
			}
			return true
		l202:
			position, tokenIndex = position202, tokenIndex202
			return false
		},
		/* 23 MONTHS <- <('m' 'o' 'n' 't' 'h' 's'? _)> */
		func() bool {
			position206, tokenIndex206 := position, tokenIndex
			{
				position207 := position
				if buffer[position] != rune('m') {
					goto l206
				}
				position++
				if buffer[position] != rune('o') {
					goto l206
				}
				position++
				if buffer[position] != rune('n') {
					goto l206
				}
				position++
				if buffer[position] != rune('t') {
					goto l206
				}
				position++
				if buffer[position] != rune('h') {
					goto l206
				}
				position++
				{
					position208, tokenIndex208 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					goto l209
				l208:
					position, tokenIndex = position208, tokenIndex208
				}
			l209:
				if !_rules[rule_]() {
					goto l206
				}
				add(ruleMONTHS, position207)
			}
			return true
		l206:
			position, tokenIndex = position206, tokenIndex206
			return false
		},
		/* 24 WEEKS <- <('w' 'e' 'e' 'k' 's'? _)> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				if buffer[position] != rune('w') {
					goto l210
				}
				position++
				if buffer[position] != rune('e') {
					goto l210
				}
				position++
				if buffer[position] != rune('e') {
					goto l210
				}
				position++
				if buffer[position] != rune('k') {
					goto l210
				}
				position++
				{
					position212, tokenIndex212 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					goto l213
				l212:
					position, tokenIndex = position212, tokenIndex212
				}
			l213:
				if !_rules[rule_]() {
					goto l210
				}
				add(ruleWEEKS, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 25 DAYS <- <('d' 'a' 'y' 's'? _)> */
		func() bool {
			position214, tokenIndex214 := position, tokenIndex
			{
				position215 := position
				if buffer[position] != rune('d') {
					goto l214
				}
				position++
				if buffer[position] != rune('a') {
					goto l214
				}
				position++
				if buffer[position] != rune('y') {
					goto l214
				}
				position++
				{
					position216, tokenIndex216 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					goto l217
				l216:
					position, tokenIndex = position216, tokenIndex216
				}
			l217:
				if !_rules[rule_]() {
					goto l214
				}
				add(ruleDAYS, position215)
			}
			return true
		l214:
			position, tokenIndex = position214, tokenIndex214
			return false
		},
		/* 26 HOURS <- <('h' 'o' 'u' 'r' 's'? _)> */
		func() bool {
			position218, tokenIndex218 := position, tokenIndex
			{
				position219 := position
				if buffer[position] != rune('h') {
					goto l218
				}
				position++
				if buffer[position] != rune('o') {
					goto l218
				}
				position++
				if buffer[position] != rune('u') {
					goto l218
				}
				position++
				if buffer[position] != rune('r') {
					goto l218
				}
				position++
				{
					position220, tokenIndex220 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l220
					}
					position++
					goto l221
				l220:
					position, tokenIndex = position220, tokenIndex220
				}
			l221:
				if !_rules[rule_]() {
					goto l218
				}
				add(ruleHOURS, position219)
			}
			return true
		l218:
			position, tokenIndex = position218, tokenIndex218
			return false
		},
		/* 27 HOUR <- <('h' 'o' 'u' 'r' _)> */
		func() bool {
			position222, tokenIndex222 := position, tokenIndex
			{
				position223 := position
				if buffer[position] != rune('h') {
					goto l222
				}
				position++
				if buffer[position] != rune('o') {
					goto l222
				}
				position++
				if buffer[position] != rune('u') {
					goto l222
				}
				position++
				if buffer[position] != rune('r') {
					goto l222
				}
				position++
				if !_rules[rule_]() {
					goto l222
				}
				add(ruleHOUR, position223)
			}
			return true
		l222:
			position, tokenIndex = position222, tokenIndex222
			return false
		},
		/* 28 MINUTES <- <('m' 'i' 'n' 'u' 't' 'e' 's'? _)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				if buffer[position] != rune('m') {
					goto l224
				}
				position++
				if buffer[position] != rune('i') {
					goto l224
				}
				position++
				if buffer[position] != rune('n') {
					goto l224
				}
				position++
				if buffer[position] != rune('u') {
					goto l224
				}
				position++
				if buffer[position] != rune('t') {
					goto l224
				}
				position++
				if buffer[position] != rune('e') {
					goto l224
				}
				position++
				{
					position226, tokenIndex226 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l226
					}
					position++
					goto l227
				l226:
					position, tokenIndex = position226, tokenIndex226
				}
			l227:
				if !_rules[rule_]() {
					goto l224
				}
				add(ruleMINUTES, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 29 MINUTE <- <('m' 'i' 'n' 'u' 't' 'e' _)> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('m') {
					goto l228
				}
				position++
				if buffer[position] != rune('i') {
					goto l228
				}
				position++
				if buffer[position] != rune('n') {
					goto l228
				}
				position++
				if buffer[position] != rune('u') {
					goto l228
				}
				position++
				if buffer[position] != rune('t') {
					goto l228
				}
				position++
				if buffer[position] != rune('e') {
					goto l228
				}
				position++
				if !_rules[rule_]() {
					goto l228
				}
				add(ruleMINUTE, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 30 YESTERDAY <- <('y' 'e' 's' 't' 'e' 'r' 'd' 'a' 'y' _)> */
		func() bool {
			position230, tokenIndex230 := position, tokenIndex
			{
				position231 := position
				if buffer[position] != rune('y') {
					goto l230
				}
				position++
				if buffer[position] != rune('e') {
					goto l230
				}
				position++
				if buffer[position] != rune('s') {
					goto l230
				}
				position++
				if buffer[position] != rune('t') {
					goto l230
				}
				position++
				if buffer[position] != rune('e') {
					goto l230
				}
				position++
				if buffer[position] != rune('r') {
					goto l230
				}
				position++
				if buffer[position] != rune('d') {
					goto l230
				}
				position++
				if buffer[position] != rune('a') {
					goto l230
				}
				position++
				if buffer[position] != rune('y') {
					goto l230
				}
				position++
				if !_rules[rule_]() {
					goto l230
				}
				add(ruleYESTERDAY, position231)
			}
			return true
		l230:
			position, tokenIndex = position230, tokenIndex230
			return false
		},
		/* 31 TOMORROW <- <('t' 'o' 'm' 'o' 'r' 'r' 'o' 'w' _)> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				if buffer[position] != rune('t') {
					goto l232
				}
				position++
				if buffer[position] != rune('o') {
					goto l232
				}
				position++
				if buffer[position] != rune('m') {
					goto l232
				}
				position++
				if buffer[position] != rune('o') {
					goto l232
				}
				position++
				if buffer[position] != rune('r') {
					goto l232
				}
				position++
				if buffer[position] != rune('r') {
					goto l232
				}
				position++
				if buffer[position] != rune('o') {
					goto l232
				}
				position++
				if buffer[position] != rune('w') {
					goto l232
				}
				position++
				if !_rules[rule_]() {
					goto l232
				}
				add(ruleTOMORROW, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 32 TODAY <- <('t' 'o' 'd' 'a' 'y' _)> */
		func() bool {
			position234, tokenIndex234 := position, tokenIndex
			{
				position235 := position
				if buffer[position] != rune('t') {
					goto l234
				}
				position++
				if buffer[position] != rune('o') {
					goto l234
				}
				position++
				if buffer[position] != rune('d') {
					goto l234
				}
				position++
				if buffer[position] != rune('a') {
					goto l234
				}
				position++
				if buffer[position] != rune('y') {
					goto l234
				}
				position++
				if !_rules[rule_]() {
					goto l234
				}
				add(ruleTODAY, position235)
			}
			return true
		l234:
			position, tokenIndex = position234, tokenIndex234
			return false
		},
		/* 33 AGO <- <('a' 'g' 'o' _)> */
		func() bool {
			position236, tokenIndex236 := position, tokenIndex
			{
				position237 := position
				if buffer[position] != rune('a') {
					goto l236
				}
				position++
				if buffer[position] != rune('g') {
					goto l236
				}
				position++
				if buffer[position] != rune('o') {
					goto l236
				}
				position++
				if !_rules[rule_]() {
					goto l236
				}
				add(ruleAGO, position237)
			}
			return true
		l236:
			position, tokenIndex = position236, tokenIndex236
			return false
		},
		/* 34 FROM_NOW <- <('f' 'r' 'o' 'm' ' ' 'n' 'o' 'w' _)> */
		func() bool {
			position238, tokenIndex238 := position, tokenIndex
			{
				position239 := position
				if buffer[position] != rune('f') {
					goto l238
				}
				position++
				if buffer[position] != rune('r') {
					goto l238
				}
				position++
				if buffer[position] != rune('o') {
					goto l238
				}
				position++
				if buffer[position] != rune('m') {
					goto l238
				}
				position++
				if buffer[position] != rune(' ') {
					goto l238
				}
				position++
				if buffer[position] != rune('n') {
					goto l238
				}
				position++
				if buffer[position] != rune('o') {
					goto l238
				}
				position++
				if buffer[position] != rune('w') {
					goto l238
				}
				position++
				if !_rules[rule_]() {
					goto l238
				}
				add(ruleFROM_NOW, position239)
			}
			return true
		l238:
			position, tokenIndex = position238, tokenIndex238
			return false
		},
		/* 35 NOW <- <('n' 'o' 'w' _)> */
		func() bool {
			position240, tokenIndex240 := position, tokenIndex
			{
				position241 := position
				if buffer[position] != rune('n') {
					goto l240
				}
				position++
				if buffer[position] != rune('o') {
					goto l240
				}
				position++
				if buffer[position] != rune('w') {
					goto l240
				}
				position++
				if !_rules[rule_]() {
					goto l240
				}
				add(ruleNOW, position241)
			}
			return true
		l240:
			position, tokenIndex = position240, tokenIndex240
			return false
		},
		/* 36 AM <- <('a' 'm' _)> */
		func() bool {
			position242, tokenIndex242 := position, tokenIndex
			{
				position243 := position
				if buffer[position] != rune('a') {
					goto l242
				}
				position++
				if buffer[position] != rune('m') {
					goto l242
				}
				position++
				if !_rules[rule_]() {
					goto l242
				}
				add(ruleAM, position243)
			}
			return true
		l242:
			position, tokenIndex = position242, tokenIndex242
			return false
		},
		/* 37 PM <- <('p' 'm' _)> */
		func() bool {
			position244, tokenIndex244 := position, tokenIndex
			{
				position245 := position
				if buffer[position] != rune('p') {
					goto l244
				}
				position++
				if buffer[position] != rune('m') {
					goto l244
				}
				position++
				if !_rules[rule_]() {
					goto l244
				}
				add(rulePM, position245)
			}
			return true
		l244:
			position, tokenIndex = position244, tokenIndex244
			return false
		},
		/* 38 NEXT <- <('n' 'e' 'x' 't' _)> */
		func() bool {
			position246, tokenIndex246 := position, tokenIndex
			{
				position247 := position
				if buffer[position] != rune('n') {
					goto l246
				}
				position++
				if buffer[position] != rune('e') {
					goto l246
				}
				position++
				if buffer[position] != rune('x') {
					goto l246
				}
				position++
				if buffer[position] != rune('t') {
					goto l246
				}
				position++
				if !_rules[rule_]() {
					goto l246
				}
				add(ruleNEXT, position247)
			}
			return true
		l246:
			position, tokenIndex = position246, tokenIndex246
			return false
		},
		/* 39 IN <- <((('i' 'n' ' ' 'a' 'n') / ('i' 'n' ' ' 'a') / ('i' 'n')) _)> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l251
					}
					position++
					if buffer[position] != rune('n') {
						goto l251
					}
					position++
					if buffer[position] != rune(' ') {
						goto l251
					}
					position++
					if buffer[position] != rune('a') {
						goto l251
					}
					position++
					if buffer[position] != rune('n') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('i') {
						goto l252
					}
					position++
					if buffer[position] != rune('n') {
						goto l252
					}
					position++
					if buffer[position] != rune(' ') {
						goto l252
					}
					position++
					if buffer[position] != rune('a') {
						goto l252
					}
					position++
					goto l250
				l252:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('i') {
						goto l248
					}
					position++
					if buffer[position] != rune('n') {
						goto l248
					}
					position++
				}
			l250:
				if !_rules[rule_]() {
					goto l248
				}
				add(ruleIN, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 40 LAST <- <((('l' 'a' 's' 't') / ('p' 'a' 's' 't') / ('p' 'r' 'e' 'v' 'i' 'o' 'u' 's')) _)> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('s') {
						goto l256
					}
					position++
					if buffer[position] != rune('t') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('p') {
						goto l257
					}
					position++
					if buffer[position] != rune('a') {
						goto l257
					}
					position++
					if buffer[position] != rune('s') {
						goto l257
					}
					position++
					if buffer[position] != rune('t') {
						goto l257
					}
					position++
					goto l255
				l257:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('p') {
						goto l253
					}
					position++
					if buffer[position] != rune('r') {
						goto l253
					}
					position++
					if buffer[position] != rune('e') {
						goto l253
					}
					position++
					if buffer[position] != rune('v') {
						goto l253
					}
					position++
					if buffer[position] != rune('i') {
						goto l253
					}
					position++
					if buffer[position] != rune('o') {
						goto l253
					}
					position++
					if buffer[position] != rune('u') {
						goto l253
					}
					position++
					if buffer[position] != rune('s') {
						goto l253
					}
					position++
				}
			l255:
				if !_rules[rule_]() {
					goto l253
				}
				add(ruleLAST, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 41 AT <- <('a' 't' _)> */
		func() bool {
			position258, tokenIndex258 := position, tokenIndex
			{
				position259 := position
				if buffer[position] != rune('a') {
					goto l258
				}
				position++
				if buffer[position] != rune('t') {
					goto l258
				}
				position++
				if !_rules[rule_]() {
					goto l258
				}
				add(ruleAT, position259)
			}
			return true
		l258:
			position, tokenIndex = position258, tokenIndex258
			return false
		},
		/* 42 ON <- <('o' 'n' _)> */
		func() bool {
			position260, tokenIndex260 := position, tokenIndex
			{
				position261 := position
				if buffer[position] != rune('o') {
					goto l260
				}
				position++
				if buffer[position] != rune('n') {
					goto l260
				}
				position++
				if !_rules[rule_]() {
					goto l260
				}
				add(ruleON, position261)
			}
			return true
		l260:
			position, tokenIndex = position260, tokenIndex260
			return false
		},
		/* 43 _ <- <Whitespace*> */
		func() bool {
			{
				position263 := position
			l264:
				{
					position265, tokenIndex265 := position, tokenIndex
					if !_rules[ruleWhitespace]() {
						goto l265
					}
					goto l264
				l265:
					position, tokenIndex = position265, tokenIndex265
				}
				add(rule_, position263)
			}
			return true
		},
		/* 44 Whitespace <- <(' ' / '\t' / EOL)> */
		func() bool {
			position266, tokenIndex266 := position, tokenIndex
			{
				position267 := position
				{
					position268, tokenIndex268 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l269
					}
					position++
					goto l268
				l269:
					position, tokenIndex = position268, tokenIndex268
					if buffer[position] != rune('\t') {
						goto l270
					}
					position++
					goto l268
				l270:
					position, tokenIndex = position268, tokenIndex268
					if !_rules[ruleEOL]() {
						goto l266
					}
				}
			l268:
				add(ruleWhitespace, position267)
			}
			return true
		l266:
			position, tokenIndex = position266, tokenIndex266
			return false
		},
		/* 45 EOL <- <(('\r' '\n') / '\n' / '\r')> */
		func() bool {
			position271, tokenIndex271 := position, tokenIndex
			{
				position272 := position
				{
					position273, tokenIndex273 := position, tokenIndex
					if buffer[position] != rune('\r') {
						goto l274
					}
					position++
					if buffer[position] != rune('\n') {
						goto l274
					}
					position++
					goto l273
				l274:
					position, tokenIndex = position273, tokenIndex273
					if buffer[position] != rune('\n') {
						goto l275
					}
					position++
					goto l273
				l275:
					position, tokenIndex = position273, tokenIndex273
					if buffer[position] != rune('\r') {
						goto l271
					}
					position++
				}
			l273:
				add(ruleEOL, position272)
			}
			return true
		l271:
			position, tokenIndex = position271, tokenIndex271
			return false
		},
		/* 46 EOF <- <!.> */
		func() bool {
			position276, tokenIndex276 := position, tokenIndex
			{
				position277 := position
				{
					position278, tokenIndex278 := position, tokenIndex
					if !matchDot() {
						goto l278
					}
					goto l276
				l278:
					position, tokenIndex = position278, tokenIndex278
				}
				add(ruleEOF, position277)
			}
			return true
		l276:
			position, tokenIndex = position276, tokenIndex276
			return false
		},
		/* 48 Action0 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
		/* 49 Action1 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction1, position)
			}
			return true
		},
		/* 50 Action2 <- <{
		   p.t = p.t.Add(-time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction2, position)
			}
			return true
		},
		/* 51 Action3 <- <{
		   p.t = p.t.Add(time.Minute * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction3, position)
			}
			return true
		},
		/* 52 Action4 <- <{
		   p.t = p.t.Add(time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction4, position)
			}
			return true
		},
		/* 53 Action5 <- <{
		   p.t = p.t.Add(-time.Minute)
		 }> */
		func() bool {
			{
				add(ruleAction5, position)
			}
			return true
		},
		/* 54 Action6 <- <{
		   p.t = p.t.Add(-time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction6, position)
			}
			return true
		},
		/* 55 Action7 <- <{
		   p.t = p.t.Add(time.Hour * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction7, position)
			}
			return true
		},
		/* 56 Action8 <- <{
		   p.t = p.t.Add(-time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction8, position)
			}
			return true
		},
		/* 57 Action9 <- <{
		   p.t = p.t.Add(time.Hour)
		 }> */
		func() bool {
			{
				add(ruleAction9, position)
			}
			return true
		},
		/* 58 Action10 <- <{
		   p.t = truncateDay(p.t.Add(-day * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction10, position)
			}
			return true
		},
		/* 59 Action11 <- <{
		   p.t = p.t.Add(day * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction11, position)
			}
			return true
		},
		/* 60 Action12 <- <{
		   p.t = truncateDay(p.t.Add(-week * time.Duration(p.number)))
		 }> */
		func() bool {
			{
				add(ruleAction12, position)
			}
			return true
		},
		/* 61 Action13 <- <{
		   p.t = p.t.Add(week * time.Duration(p.number))
		 }> */
		func() bool {
			{
				add(ruleAction13, position)
			}
			return true
		},
		/* 62 Action14 <- <{
		   p.t = p.t.AddDate(0, -p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction14, position)
			}
			return true
		},
		/* 63 Action15 <- <{
		   p.t = p.t.AddDate(0, p.number, 0)
		 }> */
		func() bool {
			{
				add(ruleAction15, position)
			}
			return true
		},
		/* 64 Action16 <- <{
		   p.t = prevMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction16, position)
			}
			return true
		},
		/* 65 Action17 <- <{
		   p.t = nextMonth(p.t, p.month)
		 }> */
		func() bool {
			{
				add(ruleAction17, position)
			}
			return true
		},
		/* 66 Action18 <- <{
		   p.t = p.t.AddDate(-p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction18, position)
			}
			return true
		},
		/* 67 Action19 <- <{
		   p.t = p.t.AddDate(p.number, 0, 0)
		 }> */
		func() bool {
			{
				add(ruleAction19, position)
			}
			return true
		},
		/* 68 Action20 <- <{
		   p.t = time.Date(p.t.Year() - 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction20, position)
			}
			return true
		},
		/* 69 Action21 <- <{
		   p.t = time.Date(p.t.Year() + 1, 1, 1, 0, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction21, position)
			}
			return true
		},
		/* 70 Action22 <- <{
		   p.t = truncateDay(p.t)
		 }> */
		func() bool {
			{
				add(ruleAction22, position)
			}
			return true
		},
		/* 71 Action23 <- <{
		   p.t = truncateDay(p.t.Add(-day))
		 }> */
		func() bool {
			{
				add(ruleAction23, position)
			}
			return true
		},
		/* 72 Action24 <- <{
		   p.t = truncateDay(p.t.Add(+day))
		 }> */
		func() bool {
			{
				add(ruleAction24, position)
			}
			return true
		},
		/* 73 Action25 <- <{
		   p.t = truncateDay(prevWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction25, position)
			}
			return true
		},
		/* 74 Action26 <- <{
		   p.t = truncateDay(nextWeekday(p.t, p.weekday))
		 }> */
		func() bool {
			{
				add(ruleAction26, position)
			}
			return true
		},
		/* 75 Action27 <- <{
		   t := p.t
		   year, month, _ := t.Date()
		   hour, min, sec := t.Clock()
		   p.t = time.Date(year, month, p.number, hour, min, sec, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction27, position)
			}
			return true
		},
		/* 76 Action28 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction28, position)
			}
			return true
		},
		/* 77 Action29 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number + 12, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction29, position)
			}
			return true
		},
		/* 78 Action30 <- <{
		   year, month, day := p.t.Date()
		   p.t = time.Date(year, month, day, p.number, 0, 0, 0, p.t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction30, position)
			}
			return true
		},
		/* 79 Action31 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, _, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, p.number, 0, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction31, position)
			}
			return true
		},
		/* 80 Action32 <- <{
		   t := p.t
		   year, month, day := t.Date()
		   hour, min, _ := t.Clock()
		   p.t = time.Date(year, month, day, hour, min, p.number, 0, t.Location())
		 }> */
		func() bool {
			{
				add(ruleAction32, position)
			}
			return true
		},
		nil,
		/* 82 Action33 <- <{ n, _ := strconv.Atoi(text); p.number = n }> */
		func() bool {
			{
				add(ruleAction33, position)
			}
			return true
		},
		/* 83 Action34 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction34, position)
			}
			return true
		},
		/* 84 Action35 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction35, position)
			}
			return true
		},
		/* 85 Action36 <- <{ p.number = 2 }> */
		func() bool {
			{
				add(ruleAction36, position)
			}
			return true
		},
		/* 86 Action37 <- <{ p.number = 3 }> */
		func() bool {
			{
				add(ruleAction37, position)
			}
			return true
		},
		/* 87 Action38 <- <{ p.number = 4 }> */
		func() bool {
			{
				add(ruleAction38, position)
			}
			return true
		},
		/* 88 Action39 <- <{ p.number = 5 }> */
		func() bool {
			{
				add(ruleAction39, position)
			}
			return true
		},
		/* 89 Action40 <- <{ p.number = 6 }> */
		func() bool {
			{
				add(ruleAction40, position)
			}
			return true
		},
		/* 90 Action41 <- <{ p.number = 7 }> */
		func() bool {
			{
				add(ruleAction41, position)
			}
			return true
		},
		/* 91 Action42 <- <{ p.number = 8 }> */
		func() bool {
			{
				add(ruleAction42, position)
			}
			return true
		},
		/* 92 Action43 <- <{ p.number = 9 }> */
		func() bool {
			{
				add(ruleAction43, position)
			}
			return true
		},
		/* 93 Action44 <- <{ p.number = 10 }> */
		func() bool {
			{
				add(ruleAction44, position)
			}
			return true
		},
		/* 94 Action45 <- <{ p.weekday = time.Sunday }> */
		func() bool {
			{
				add(ruleAction45, position)
			}
			return true
		},
		/* 95 Action46 <- <{ p.weekday = time.Monday }> */
		func() bool {
			{
				add(ruleAction46, position)
			}
			return true
		},
		/* 96 Action47 <- <{ p.weekday = time.Tuesday }> */
		func() bool {
			{
				add(ruleAction47, position)
			}
			return true
		},
		/* 97 Action48 <- <{ p.weekday = time.Wednesday }> */
		func() bool {
			{
				add(ruleAction48, position)
			}
			return true
		},
		/* 98 Action49 <- <{ p.weekday = time.Thursday }> */
		func() bool {
			{
				add(ruleAction49, position)
			}
			return true
		},
		/* 99 Action50 <- <{ p.weekday = time.Friday }> */
		func() bool {
			{
				add(ruleAction50, position)
			}
			return true
		},
		/* 100 Action51 <- <{ p.weekday = time.Saturday }> */
		func() bool {
			{
				add(ruleAction51, position)
			}
			return true
		},
		/* 101 Action52 <- <{ p.month = time.January }> */
		func() bool {
			{
				add(ruleAction52, position)
			}
			return true
		},
		/* 102 Action53 <- <{ p.month = time.February }> */
		func() bool {
			{
				add(ruleAction53, position)
			}
			return true
		},
		/* 103 Action54 <- <{ p.month = time.March }> */
		func() bool {
			{
				add(ruleAction54, position)
			}
			return true
		},
		/* 104 Action55 <- <{ p.month = time.April }> */
		func() bool {
			{
				add(ruleAction55, position)
			}
			return true
		},
		/* 105 Action56 <- <{ p.month = time.May }> */
		func() bool {
			{
				add(ruleAction56, position)
			}
			return true
		},
		/* 106 Action57 <- <{ p.month = time.June }> */
		func() bool {
			{
				add(ruleAction57, position)
			}
			return true
		},
		/* 107 Action58 <- <{ p.month = time.July }> */
		func() bool {
			{
				add(ruleAction58, position)
			}
			return true
		},
		/* 108 Action59 <- <{ p.month = time.August }> */
		func() bool {
			{
				add(ruleAction59, position)
			}
			return true
		},
		/* 109 Action60 <- <{ p.month = time.September }> */
		func() bool {
			{
				add(ruleAction60, position)
			}
			return true
		},
		/* 110 Action61 <- <{ p.month = time.October }> */
		func() bool {
			{
				add(ruleAction61, position)
			}
			return true
		},
		/* 111 Action62 <- <{ p.month = time.November }> */
		func() bool {
			{
				add(ruleAction62, position)
			}
			return true
		},
		/* 112 Action63 <- <{ p.month = time.December }> */
		func() bool {
			{
				add(ruleAction63, position)
			}
			return true
		},
		/* 113 Action64 <- <{ p.number = 1}> */
		func() bool {
			{
				add(ruleAction64, position)
			}
			return true
		},
		/* 114 Action65 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction65, position)
			}
			return true
		},
		/* 115 Action66 <- <{ p.number = 1 }> */
		func() bool {
			{
				add(ruleAction66, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
